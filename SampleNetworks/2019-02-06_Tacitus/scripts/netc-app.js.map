{"version":3,"sources":["app/init-appshell.jsx","app/init.jsx","app/settings.js","app/system/datastore.js","app/system/util/jscli.js","app/system/util/path.js","app/system/util/prompts.js","app/system/util/reflection.js","app/test.js","app/unisys/client-datalink-class.js","app/unisys/client-lifecycle.js","app/unisys/client-messager-class.js","app/unisys/client-module-class.js","app/unisys/client-network.js","app/unisys/client-react-component.jsx","app/unisys/client-state.js","app/unisys/client.js","app/unisys/common-defs.js","app/unisys/common-netmessage-class.js","app/unisys/common-session.js","app/unisys/component/SessionShell.jsx","app/unisys/server-database.js","app/unisys/server-logger.js","app/unisys/server-network.js","app/unisys/server.js","app/view/AppDefault.jsx","app/view/dev-db/DevDB.jsx","app/view/dev-db/devdb-logic.js","app/view/dev-react/DevReact.jsx","app/view/dev-react/devreact-logic.js","app/view/dev-session/DevSession.jsx","app/view/dev-session/devsession-logic.js","app/view/dev-unisys/DevUnisys.jsx","app/view/dev-unisys/devunisys-logic.js","app/view/netcreate/NetCreate.jsx","app/view/netcreate/components/AutoComplete.jsx","app/view/netcreate/components/EdgeEditor.jsx","app/view/netcreate/components/EdgeTable.jsx","app/view/netcreate/components/Help.jsx","app/view/netcreate/components/InfoPanel.jsx","app/view/netcreate/components/NetGraph.jsx","app/view/netcreate/components/NodeDetail.jsx","app/view/netcreate/components/NodeSelector.jsx","app/view/netcreate/components/NodeTable.jsx","app/view/netcreate/components/Search.jsx","app/view/netcreate/components/Vocabulary.jsx","app/view/netcreate/components/d3-simplenetgraph.js","app/view/netcreate/nc-logic.js"],"names":["React","require","Alert","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","Switch","withRouter","RRNavLink","renderRoutes","UNISYS","SETTINGS","AppDefault","NetCreate","DevUnisys","DevDB","DevReact","DevSession","Routes","path","exact","component","props","HTML","restricted","NoMatch","isLocalHost","EJSProp","ip","ForceReloadOnNavigation","loc","location","pathname","substring","display","flexFlow","width","height","flex","border","hash","AppShell","toggle","bind","state","isOpen","redirect","HandleMessage","setState","data","history","push","backgroundColor","padding","Component","module","exports","window","NC_DBG","console","log","id","DBG","ReactDOM","HashRouter","document","addEventListener","group","m_SetLifecycleScope","JoinNet","EnterApp","m_RenderApp","SetupDOM","SetupRun","groupEnd","ServerDisconnect","routes","hashbits","split","matches","filter","route","length","UMOD","undefined","warn","modscope","SetScope","Promise","resolve","reject","render","querySelector","e","error","EJSPROPS","NC_UNISYS","S","DATE","Date","RELOAD_CHECK","RELOAD_TIMER","MOD","a","b","Set","key","val","Get","clearTimeout","setTimeout","reload","CurrentTime","toDateString","propName","ServerHostName","server","hostname","ServerHostIP","ServerAppURL","suburl","ubits","URL","serverip","url","protocol","host","load","SESSION","PROMPTS","PR","Pad","NetMessage","HASH_ABET","HASH_MINLEN","DSTOR","NewModule","UDATA","NewDataLink","D3DATA","Hook","UpdateServerDB","OnAppStateChange","decodedData","isValid","token","SetSessionGroupID","GlobalSetGroupID","Data","IsStandaloneMode","Call","then","res","OK","PromiseNewNodeID","NetCall","nodeID","Error","JSON","stringify","PromiseNewEdgeID","edgeID","PromiseJSONFile","jsonFile","promise","xobj","XMLHttpRequest","event","target","status","responseText","Object","assign","parse","open","send","PromiseD3Data","OverwriteDataPromise","d3data","SHOW_DOM","JSCLI","CMD","AddFunction","f","HelpString","out","forEach","name","ncHelp","DOM_ShowInstructions","E_SHELL","getElementById","E_OUT","createElement","E_HEADER","appendChild","innerHTML","PATH","rx_dir","rx_file","Parse","str","exec","Dirname","Basename","StripExt","substr","lastIndexOf","REFLECT","IS_NODE","process","release","PAD_SIZE","prompt","psize","len","padEnd","Stars","count","FunctionName","STACKTRACE","ExtractClassName","obj","funcNameRegex","results","constructor","toString","depth","stack","getSync","frame","fn","functionName","fileName","lineNumber","columnNumber","bits","InspectModule","rm","s","contexts","_","defined","mlist","base","keys","indexOf","i","objName","mod","m_DumpObj","bracket","InspectObject","label","indent","proto","Reflect","getPrototypeOf","prop","type","regexp","args","DBG_Out","msg","selector","Out","DBG_OutClean","TESTS","call","hook","remote","net","PASSED","TEST_GO","ARR_MATCH","m_meta_info","m_failed","m_skipped","m_passed","TM","testname","flag","hasOwnProperty","setting","m_ConfigureTestFlags","SetTitle","text","innerText","SetMeta","meta","value","MetaString","o","entries","k","v","Pass","subtest","m_InitShell","Fail","Passed","passed","Assess","m_PreTest","m_TestResults","AssessArrayMatch","arr1","arr2","AllPassed","subtests","stateChange","stateMerge","stateConcat","hookInit1","hookInit2","hookInitDeferred","hookStart","callHndlrReg","callHndlrData","callHndlrDataProp","callDataReturn","callDataAdd","callDataMulti","remoteCall","remoteData","remoteData2","remoteDataReturn","remoteDataAdd","remoteDataMulti","serverCall","serverCallOrder","serverReturn","serverData","serverDataAdd","netMessageReg","netCallHndlr","netSendHndlr","netSendNoEcho","netSignal","netSignalEcho","netData","netDataReturn","netDataAdd","netDataMulti","pair","pass","m_ShowShell","pEntries","testTitle","concat","join","tnotes","summary","return","register","BAD_OWNER","BAD_NAME","BAD_UID","NO_DATAOBJ","BAD_EJSPROPS","STATE","Messager","UNODE","Map","UNODE_COUNTER","MESSAGER","UnisysDataLink","owner","optName","msgr_type","msgr_name","uid","has","set","namespace","State","newState","SetState","UID","MergeState","ConcatState","listener","OnStateChange","OffStateChange","mesgName","receiverUID","UnhandleMessage","inData","options","toNet","toLocal","srcUID","promises","all","resArray","resObj","Send","Signal","MessageNames","ValidateMessageNames","msgs","valid","HasMessageName","lifecycle","BAD_PATH","PHASE_HOOKS","PHASES","PHASE","scope","m_ExecuteScopedPhase","phase","includes","info","Function","get","Execute","hooks","icount","map","retval","values","catch","err","module_path","Scope","TEST","MSGR_IDCOUNT","handlerMap","messager_id","handlerFunc","handlerUID","syntax","udata_id","handlers","umesg","add","arguments","clear","delete","pkt","SocketSend","p","f_MakeResolverFunction","QueueTransaction","NOT_UNIQUE","LIFECYCLE","MODULES","MODULES_COUNTER","UnisysModule","module_id","AutoName","subnameCounter","ModuleID","connect","handle","WARN","ERR_NM_REQ","ERR_NO_SOCKET","ERR_BAD_UDATA","NETSOCK","NETCLIENT","NETSERVER","M0_INIT","M1_CONNECTING","M2_CONNECTED","M3_REGISTERED","M4_READY","M_STANDALONE","M_NOCONNECT","m_status","m_options","NETWORK","Connect","datalink","opt","GlobalOfflineMode","success","wsURI","uaddr","uport","ws","WebSocket","AddListener","appCache","applicationCache","UNCACHED","IDLE","CHECKING","DOWNLOADING","UPDATEREADY","OBSOLETE","m_HandleRegistrationMessage","msgEvent","regData","HELLO","UADDR","RemoveListener","DefaultServerUADDR","GlobalSetup","netsocket","m_HandleMessage","Message","IsOwnResponse","CompleteTransaction","Type","dbgout","startsWith","SocketUADDR","SourceAddress","LocalSignal","ReturnTransaction","LocalSend","LocalCall","result","SetData","readyState","json","SeqNum","Close","code","reason","close","handlerFunction","removeEventListener","LocalInfo","ServerInfo","ServerSocketInfo","UMODULE","UnisysComponent","m","lis","f_deprecated","d","NetSend","NetSignal","ns","AppState","so","SetAppState","AppStateChangeOff","f_unimplemented","f_unsupported","repl","alert","BAD_NSPACE","BAD_LISTENR","NO_UID_FLTR","WARN_PROP_MISMATCH","REACT","TYPEOF","USTATE","STATES","STATES_LISTEN","m_ConformNamespace","toUpperCase","m_ConformState","merge","entry","nprop","t_old","t_new","m_GetStateMessager","nspace","msgr","src_uid","namespaceMessager","UniData","UniModule","UniComponent","uniqueName","RegisterMessagesPromise","messages","SystemInitialize","ForceReloadSingleApp","root_module_id","InScope","currentScope","failure","Run","BeforePause","Paused","PostPause","CleanupRun","ExitApp","Log","items","DEFS","transact","m_id_counter","m_id_prefix","m_transactions","m_netsocket","m_group_id","M_INIT","M_ONLINE","M_CLOSED","M_ERROR","m_mode","ERR","ERR_NOT_NETMESG","ERR_BAD_PROP","ERR_ERR_BAD_CSTR","ERR_BAD_SOCKET","ERR_DUPE_TRANS","ERR_NO_GLOB_UADDR","ERR_UNKNOWN_TYPE","ERR_NOT_PACKET","ERR_UNKNOWN_RMODE","KNOWN_TYPES","ROUTING_MODE","m_SeqIncrement","m_CheckType","MakeNewID","rmode","memo","seqnum","seqlog","s_uaddr","s_group","s_uid","msgstr","propOrVal","IsTransaction","SourceGroupID","idStr","padStart","socket","GlobalGroupID","dst","dbg","IsServerMessage","m_GetHashKey","m_CheckRMode","resolverFunc","deleteProperty","config","GlobalCleanup","CustomEvent","dispatchEvent","mode","HashIds","SESUTIL","m_current_groupid","DecodeToken","tokenBits","classId","projId","hashedId","groupId","subId","salt","hashids","decode","Number","isInteger","test","decoded","IsValidToken","MakeToken","MAX_SAFE_INTEGER","encode","SetGroupID","good","GroupID","ReactStrap","InputGroup","InputGroupAddon","Button","Col","Row","Form","FormGroup","FormFeedback","Input","Label","Redirect","INPUT_STYLE","fontFamily","fontWeight","fontSize","textAlign","textTransform","GROUP_STYLE","color","marginTop","LABEL_STYLE","verticalAlign","marginBottom","SessionShell","renderLogin","renderLoggedIn","handleChange","onSubmit","classproj","gid","subid","formFeedback","tip","input","match","params","standalone","timestamp","preventDefault","BRUTAL_REDIRECT","Loki","FS","LOGGER","DB_FILE","DB_CLONEMASTER","m_db","m_max_edgeID","m_max_nodeID","m_dupe_set","NODES","EDGES","m_locked_nodes","m_locked_edges","DB","InitializeDatabase","ensureDirSync","dirname","existsSync","ropt","autoload","autoloadCallback","f_DatabaseInitialize","autosave","autosaveCallback","f_AutosaveStatus","autosaveInterval","getCollection","addCollection","dupeNodes","mapReduce","m_CleanObjID","arr","Math","max","Write","m_CleanEdgeEndpoints","saveDatabase","onLoadComplete","nodeCount","edgeCount","PKT_GetDatabase","nodes","chain","removeMeta","edges","Info","PKT_SetDatabase","insert","PKT_GetNewNodeID","PKT_GetNewEdgeID","PKT_RequestLockNode","errcode","m_IsInvalidNode","m_MakeLockError","locked","PKT_RequestUnlockNode","unlocked","parseInt","isNaN","find","NOP","INFO","PKT_RequestLockEdge","m_IsInvalidEdge","PKT_RequestUnlockEdge","PKT_RequestUnlockAllNodes","PKT_RequestUnlockAllEdges","PKT_RequestUnlockAll","PKT_Update","node","edge","replacementNodeID","AppendNodeLog","op","findAndUpdate","n","AppendEdgeLog","m_CleanID","edgesToProcess","where","source","sourceEdges","findAndRemove","targetEdges","_nlog","el","FilterNodeLog","newNode","_elog","FilterEdgeLog","newEdge","WriteJSON","filePath","db","writeFileSync","int","FSE","LOG_DIR","Tracer","LOG_DELIMITER","LOG_CONFIG","format","dateformat","preprocess","line","zeroPad","colorConsole","fs_log","e_weekday","dir","__dirname","ensureDir","logname","str_TimeDatedFilename","createWriteStream","LogLine","str_DateStamp","str_TimeStamp","c","write","date","hh","getHours","slice","mm","getMinutes","ss","getSeconds","getMonth","dd","getDate","day","getDay","yyyy","getFullYear","hms","filename","LOG","PKT_LogEvent","m_PromiseServerHandlers","m_PromiseRemoteHandlers","IsType","notsrv","pktArray","reduce","pdata","WSS","Server","ERR_SS_EXISTS","ERR_NULL_SOCKET","DBG_SOCK_BADCLOSE","ERR_INVALID_DEST","ERR_UNKNOWN_PKT","DEFAULT_NET_PORT","DEFAULT_NET_ADDR","mu_wss","mu_options","mu_sockets","mu_sid_counter","m_server_handlers","m_message_map","m_socket_msgs_list","UNET","SERVER_UADDR","InitializeNetwork","port","StartNetwork","on","m_NewSocketConnected","RegisterRemoteHandlers","regd","registered","m_SocketAdd","m_SocketClientAck","m_SocketMessage","m_SocketDelete","m_HandleState","f_make_resolver_func","srcPkt","d_uaddr","f_make_remote_resolver_func","verbose","d_sock","newpkt","CopySourceAddress","sid","m_GetNewUADDR","m_ListSockets","prefix","cstr","rmesgs","Array","isArray","change","UDB","override","RegisterHandlers","serverSays","sprint_message","src","LOGIC","Route","Link","description","UnisysStateChange","udata","uni_id","className","unit","user","StudentRender","DATASTORE","handler","reply","timeout","ncPushDatabase","AppStateChange","TESTCOUNTER","TESTINTERVAL","setInterval","clearInterval","u_random_string","possible","charAt","floor","random","ncTest","SessionEdit","InputGroupText","handleTextChange","cat","melon","AppCall","extra","multi","TEST_WAIT","TEST_TIMER","MOD2","UDATA2","PR2","tms","ucontrol","deep","deep_a","MergeAppState","ConcatAppState","deep_b","expected","serialized","mycat","sendorder","recvorder","netOnly","me","delayed_send","greeting","msgcon","dog","NetGraph","Search","NodeSelector","InfoPanel","NCLOGIC","OnDOMReady","OnReset","OnStart","OnAppReady","OnRun","dragger","onmousedown","handleMouseDown","overflow","maxWidth","position","left","bottom","zIndex","Autosuggest","MODE_STATIC","MODE_DISABLED","MODE_ACTIVE","_IsMounted","AutoComplete","suggestions","onStateChange_SEARCH","onStateChange_SELECTION","onStateChange_AUTOCOMPLETE","onInputChange","getSuggestionValue","renderSuggestion","onSuggestionsFetchRequested","onSuggestionsClearRequested","onSuggestionSelected","onSuggestionHighlighted","shouldRenderSuggestions","onBlur","identifier","activeAutoCompleteId","searchLabel","disabledValue","inactiveMode","shouldIgnoreSelection","newValue","method","searchString","suggestion","suggestedNodes","nodeIDs","inputProps","placeholder","onChange","jsx","FormText","NodeDetail","EdgeEditor","edgePrompts","formData","sourceId","targetId","relationship","notes","citation","isNewEdge","sourceNode","targetNode","isLocked","dbIsLocked","isEditable","isExpanded","sourceIsEditable","hasValidSource","targetIsEditable","hasValidTarget","handleSelection","handleEdgeSelection","handleEdgeEdit","onStateChange_SESSION","onButtonClick","onDeleteButtonClick","onEditButtonClick","requestEdit","onSwapSourceAndTarget","onChangeSource","onChangeTarget","onRelationshipChange","onNotesChange","onInfoChange","onCitationChange","sourceNodes","targetNodes","parentNodeLabel","attributes","Relationship","Citations","Notes","updatedEdge","loadSourceAndTarget","update","clearForm","swap","fontStyle","borderColor","minHeight","hidden","option","marginRight","paddingRight","edgeIsLockedMessage","Table","EdgeTable","sortkey","onToggleExpanded","m_FindMatchingObjsByProp","m_FindMatchingEdgeByProp","m_FindEdgeById","setSortKey","handleDataUpdate","sortTable","sort","akey","bkey","source_a","source_b","sortByID","sortBySourceLabel","sortByTargetLabel","sortByAttribute","obj_list","match_me","tableHeight","styles","maxHeight","size","selectNode","Help","right","float","TabContent","TabPane","classnames","Vocabulary","NodeTable","activeTab","tabpanelTop","draggerMouseOffsetY","tabpanelHeight","savedTabpanelHeight","draggerTop","hideDragger","endDrag","handleDrag","tab","stopPropagation","offsetTop","clientY","onmouseup","onmousemove","top","tabpanel","active","ga","hitType","eventCategory","eventAction","eventLabel","cursor","D3NetGraph","d3NetGraph","onZoomReset","onZoomIn","onZoomOut","findDOMNode","hilitedNode","minWidth","thisIdentifier","nodePrompts","isNewNode","edgesAreLocked","isDuplicateNodeLabel","duplicateNodeID","isValidReplacementNodeID","getNewNodeID","loadFormFromNode","validateForm","onLabelChange","onTypeChange","onReplacementNodeIDChange","onNewNodeButtonClick","editNode","onAddNewEdgeButtonClick","onCancelButtonClick","onEditOriginal","onCloseDuplicateDialog","needsUpdate","currentNodeID","updatedNodeID","sourceID","targetID","updatedNodeIDs","thisId","localeCompare","usage","sensitivity","newNodeID","newEdgeID","originalNode","duplicateWarning","sourceNodeIsLockedMessage","margin","edgeCounts","countEdges","sortByEdgeCount","sortByLabel","degrees","d3","m_width","m_height","mouseoverNodeId","m_forceProperties","center","x","y","charge","enabled","strength","distanceMin","distanceMax","collide","iterations","radius","forceX","forceY","link","distance","rootElement","d3svg","zoom","zoomWrapper","simulation","clickFn","defaultSize","_HandleZoom","select","append","attr","nodeLabels","selectAll","transition","duration","style","_UpdateLinkStrokeWidth","svg","clientWidth","clientHeight","forceSimulation","_SetData","_Initialize","_UpdateGraph","_UpdateForces","_Tick","_Dragstarted","_Dragged","_Dragended","scaleTo","_Transition","newData","alpha","restart","force","forceLink","forceManyBody","forceCollide","forceCenter","COLORMAP","nodeElements","linkElements","elementG","enter","classed","drag","acc","ed","weight","selected","strokeColor","exit","remove","links","transform","zoomLevel","scaleBy","self","alphaTarget","fx","fy","D3","TEMPLATE","DESELECTED_COLOR","SEARCH_COLOR","SOURCE_COLOR","TARGET_COLOR","TEMPLATE_URL","USE_CACHE","lstore","localStorage","ld3","getItem","tem","p1","m_ConvertData","m_RecalculateAllEdgeWeights","p2","nodeColorMap","setItem","m_MarkNodeById","m_UnMarkAllNodes","m_UnStrokeAllNodes","m_SetStrokeColorThatMatch","m_sourceSelect","nodeLabel","shift","m_FindNodeById","m_FindMatchingNodesByLabel","m_MarkNodeByLabel","updatedNodes","m_SetMatchingNodesByProp","replacementNode","m_DeleteMatchingNodesByProp","updatedEdges","m_SetMatchingEdgesByProp","m_CalculateEdgeWeight","m_DeleteMatchingEdgeByProp","selection","m_HandleAutoCompleteSelect","m_SetMatchingObjsByProp","yes","no","returnMatches","matched","m_SetAllObjs","del_me","m_FindMatchingNodeByProp","u_EscapeRegexChars","trim","regex","RegExp","m_SetMatchingNodesByLabel","accumulator","edgeSourceId","edgeTargetId","REGEX_REGEXCHARS","string","replace","marked","normal","m_MarkNodesThatMatch","deselect","notmatched","m_MarkSelectedEdges","ncEmptyDatabase","ncUnlockAll","ncUnlockAllNodes","ncUnlockAllEdges","ncMakeTokens","clsId","numGroups","pad","String"],"mappings":"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","file":"public/scripts/netc-app.js","sourcesContent":["/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    init-appshell.jsx\n    application shell loaded and rendered in init.jsx\n\n    These are the top-level React components (\"view\") that are mapped to\n    routes as seen in render() function's <Switch>. There are three styles:\n    (1) a loaded React 'view' that is built entirely with our modular app API\n      and displayed in this application shell.\n    (2) a plain .html file loaded into an IFRAME, useful for adding stand-alone\n      test code with access to the modular app API system, but not other web\n      apps (e.g. can use the data storage module)\n    (3) a NO ROUTE FOUND component function.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n\n/// REACT LIBRARIES ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    const React = require('react');\n    const { Alert, Collapse } = require('reactstrap');\n    const { Navbar, NavbarToggler } = require('reactstrap');\n    const { NavbarBrand, Nav, NavItem, NavLink } = require('reactstrap');\n    const { UncontrolledDropdown, DropdownToggle } = require('reactstrap');\n    const { DropdownMenu, DropdownItem } = require('reactstrap');\n    const { Switch, withRouter } = require('react-router-dom');\n    // workaround name collision in ReactRouterNavLink with ReactStrap\n    const RRNavLink = require('react-router-dom').NavLink;\n    //\n    const { renderRoutes } = require('react-router-config');\n    //\n    const UNISYS = require('unisys/client');\n\n\n\n/** (1) ROUTED COMPONENTS ****************************************************\\\n  Used by render()'s <Switch> to load a React component (what we call a\n  'view' in the NetCreate app). The component should return its elements\n  wrapped in a div with the suggested flexbox pr\n\n  index.html           | body          min-height: 100%\n  index.html           | div#app\n  init-appshell        |   div         display:flex, flex-flow:column nowrap,\n                                       width:100%, height:100vh\n  init-appshell        |     Navbar    position:fixed\n  --- COMPONENT BELOW ---\n  <RequiredComponent>  |     div       this is a child of a flexbox\n\\*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/\n    const SETTINGS          = require('settings');\n    const AppDefault        = require('view/AppDefault');\n    const NetCreate         = require('view/netcreate/NetCreate');\n    const DevUnisys         = require('view/dev-unisys/DevUnisys');\n    const DevDB             = require('view/dev-db/DevDB');\n    const DevReact          = require('view/dev-react/DevReact');\n    const DevSession        = require('view/dev-session/DevSession');\n//  const Prototype         = require('view/prototype/Prototype');\n//  const D3Test            = require('view/d3test/D3Test');\n\n    const Routes = [\n      {\n        path: '/',\n        exact : true,\n        component: NetCreate\n      },\n      {\n        path: '/edit',\n        component: NetCreate\n      },\n      {\n        path: '/dev-unisys',\n        component: DevUnisys\n      },\n      {\n        path: '/dev-db',\n        component: DevDB\n      },\n      {\n        path: '/dev-react',\n        component: DevReact\n      },\n      {\n        path: '/dev-session',\n        component: DevSession\n      },\n      {\n        path: '/simple',\n        component: (props) => {return HTML(props)}\n      },\n      {\n        path: '/vocabulary',\n        component: (props) => {return HTML(props)}\n      },\n      {\n        path: '*',\n        restricted: false,\n        component: NoMatch\n      }\n    ];\n\n    // Joshua added to disable Extras\n    const isLocalHost  = (SETTINGS.EJSProp('client').ip === '127.0.0.1');\n\n\n/** (2) ROUTED FUNCTIONS *****************************************************\\\n  Used by render()'s <Switch> to load a plain html page that is\n  located at app/htmldemos/<route>/<route.html>\n\n  index.html           | body          min-height: 100%\n  index.html           | div#app\n  init-appshell        |   div         display:flex, flex-flow:column nowrap,\n                                       width:100%, height:100vh\n  init-appshell        |     Navbar    position:fixed\n  --- COMPONENT BELOW ---\n  init-appshell.HTML() |     div       display:flex, flex-flow:column nowrap,\n                                       width:100%\n  init-appshell.HTML() |       iframe  flex:1 0 auto, border:0\n\\*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/\n  function HTML ( props ) {\n    SETTINGS.ForceReloadOnNavigation();\n    let loc = props.location.pathname.substring(1);\n    loc  = '/htmldemos/'+loc+'/'+loc+'.html';\n    return (\n      <div style={{display:'flex', flexFlow:'column nowrap',\n           width:'100%', height:'100%'}}>\n        <iframe style={{flex:'1 0 auto',border:'0'}} src={loc} />\n      </div>\n    );\n}\n\n/** (3) NO ROUTE *************************************************************\\\n  Used by render()'s <Switch> when there are no matching routes\n\\*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/\n  function NoMatch ( props ) {\n    let hash = props.location.pathname.substring(1);\n    return (\n      <Alert color=\"warning\">No Match for route <tt>#{hash}</tt></Alert>\n    );\n  }\n\n/** APPLICATION NAVBAR + SWITCHED ROUTER VIEW ********************************\\\n\n    The application shell consists of a navbar implemented with Reactstrap\n    components and a React view associated with the current route via\n    ReactRouter <Switch> and <Route>.\n\n    The AppShell class is exported as the main module object for use with\n    require() statements (thanks to brunch magic)\n\n\\*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/\nclass AppShell extends UNISYS.Component {\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ constructor\n/*/ constructor(props) {\n      super(props);\n      this.toggle = this.toggle.bind(this);\n      this.state = {\n        isOpen: false\n      };\n      // bind handler\n      this.redirect = this.redirect.bind(this);\n      // add UNISYS message for redirects\n      this.HandleMessage('SHELL_REDIRECT',this.redirect);\n    }\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Handle changes in state of his toggle switch\n/*/ toggle() {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Called by SHELL_REDIRECT unisys message\n/*/ redirect(data) {\n      let { redirect } = data;\n      this.props.history.push(redirect);\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Draw top navbar w/ menus. Add route information\n  To add a new HTML, add the link to both the <Nav> and <Switch> staments.\n  To add a new VIEW, load the component\n/*/ render() {\n      /// return component with matching routed view\n      return (\n        <div style={{display:'flex', flexFlow:'column nowrap', width:'100%', height:'100vh'}}>\n          <Navbar fixed=\"top\" light expand=\"md\" style={{ backgroundColor:'#f0f0f0', padding:'8px 10px'}}>\n            <NavbarBrand href=\"#\" style={{padding:'0'}}><img src='images/netcreate-logo.svg' height='36px'/></NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n              <Collapse isOpen={this.state.isOpen} navbar>\n              {/*/ (1) add navigation links here /*/}\n              <Nav className=\"ml-auto\" navbar hidden={!isLocalHost}>\n              { /* extra menu items\n                  <NavItem>\n                    <NavLink to=\"/d3forcedemo\" tag={RRNavLink} replace>D3 ForceDemo</NavLink>\n                  </NavItem>\n              */ }\n                  <UncontrolledDropdown direction=\"right\" nav>\n                    <DropdownToggle>\n                      Extras\n                    </DropdownToggle>\n                    <DropdownMenu>\n                      <DropdownItem>\n                        <NavLink to=\"/dev-react\" tag={RRNavLink} replace>dev-react</NavLink>\n                      </DropdownItem>\n                      <DropdownItem>\n                        <NavLink to=\"/dev-unisys\" tag={RRNavLink} replace>dev-unisys</NavLink>\n                      </DropdownItem>\n                      <DropdownItem>\n                        <NavLink to=\"/dev-db\" tag={RRNavLink} replace>dev-db</NavLink>\n                      </DropdownItem>\n                      <DropdownItem>\n                        <NavLink to=\"/dev-session\" tag={RRNavLink} replace>dev-session</NavLink>\n                      </DropdownItem>\n                      <DropdownItem>\n                        <NavLink to=\"/simple\" tag={RRNavLink} replace>SimpleHTML Example</NavLink>\n                      </DropdownItem>\n                      <DropdownItem>\n                        <NavLink to=\"/vocabulary\" tag={RRNavLink} replace>Network Vocabulary</NavLink>\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                </Nav>\n              </Collapse>\n          </Navbar>\n          <div style={{height:'3.5em'}}>{/*/ add space underneath the fixed navbar /*/}</div>\n          <Switch>\n            {renderRoutes(Routes)}\n          </Switch>\n        </div>\n      );\n    } // render()\n  } // AppShell()\n\n/// EXPORT ROUTE INFO /////////////////////////////////////////////////////////\nAppShell.Routes = Routes;\n\n/// EXPORT REACT CLASS ////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// see https://tylermcginnis.com/react-router-programmatically-navigate/\nmodule.exports = withRouter(AppShell);\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    init.jsx\n    system startup, loaded by app/assets/index.html at end of body.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst DBG = true;\n\n/// SYSTEM-WIDE LANGUAGE EXTENSIONS ///////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// These are loaded in init to make sure they are available globally!\n/// You do not need to copy these extensions to your own module files\nrequire(\"babel-polyfill\"); // enables regenerators for async/await\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst React = require(\"react\");\nconst ReactDOM = require(\"react-dom\");\nconst { HashRouter } = require(\"react-router-dom\");\n\n/// SYSTEM MODULES ////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// demo: require system modules; this will likely be removed\nconst UNISYS = require(\"unisys/client\");\nconst AppShell = require(\"init-appshell\");\n\n/// UNISYS LIFECYCLE LOADER ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ When the DOM is loaded, initialize UNISYS\n/*/\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  console.group(\"init.jsx bootstrap\");\n  console.log(\n    \"%cINIT %cDOMContentLoaded. Starting UNISYS Lifecycle!\",\n    \"color:blue\",\n    \"color:auto\"\n  );\n  m_SetLifecycleScope();\n  (async () => {\n    await UNISYS.JoinNet(); // UNISYS socket connection (that is all)\n    await UNISYS.EnterApp(); // TEST_CONF, INITIALIZE, LOADASSETS, CONFIGURE\n    await m_RenderApp(); // compose React view\n    await UNISYS.SetupDOM(); // DOM_READY\n    await UNISYS.SetupRun(); // RESET, START, APP_READY, RUN\n    console.log(\n      \"%cINIT %cUNISYS Lifecycle Initialization Complete\",\n      \"color:blue\",\n      \"color:auto\"\n    );\n    console.groupEnd();\n  })();\n});\n\n/// UNISYS LIFECYCLE CLOSE EVENT //////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ this custom event accesses post-run lifecycles defined for 'DOMContentLoaded'\n/*/\ndocument.addEventListener(\"UNISYSDisconnect\", () => {\n  console.log(\n    \"%cDISCONNECT %cUNISYSDisconnect. Closing UNISYS Lifecycle!\",\n    \"color:blue\",\n    \"color:auto\"\n  );\n  (async () => {\n    await UNISYS.ServerDisconnect(); // UNISYS has dropped server\n    console.log(\n      \"%cDISCONNECT %cUNISYSDisconnect Complete\",\n      \"color:blue\",\n      \"color:auto\"\n    );\n  })();\n});\n\n/// LIFECYCLE HELPERS /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ helper to infer view module scope before module is routed lated (!)\n/*/ function m_SetLifecycleScope() {\n  // set scope for UNISYS execution\n  let routes = AppShell.Routes;\n  // check #, and remove any trailing parameters in slashes\n  // we want the first one\n  let hashbits = window.location.hash.split(\"/\");\n  let hash = hashbits[0];\n  let loc = \"/\" + hash.substring(1);\n  let matches = routes.filter(route => {\n    return route.path === loc;\n  });\n  if (matches.length) {\n    if (DBG) console.log(`Lifecycle Module Scope is ${hash}`);\n    let component = matches[0].component;\n    if (component.UMOD === undefined)\n      console.warn(\n        `WARNING: root view '${loc}' has no UMOD property, so can not set UNISYS scope`\n      );\n    let modscope = component.UMOD || \"<undefined>/init.jsx\";\n    UNISYS.SetScope(modscope);\n  } else {\n    console.warn(`m_SetLifecycleScope() could not match scope ${loc}`);\n  }\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Wraps ReactDOM.render() in a Promise. Execution continues in <AppShell>\n    and the routed view in AppShell.Routes\n/*/ function m_RenderApp() {\n  if (DBG)\n    console.log(\"%cINIT %cReactDOM.render() begin\", \"color:blue\", \"color:auto\");\n  return new Promise((resolve, reject) => {\n    try {\n      ReactDOM.render(\n        <HashRouter hashType=\"slash\">\n          <AppShell />\n        </HashRouter>,\n        document.querySelector(\"#app-container\"),\n        () => {\n          console.log(\n            \"%cINIT %cReactDOM.render() complete\",\n            \"color:blue\",\n            \"color:auto\"\n          );\n          resolve();\n        }\n      );\n    } catch (e) {\n      console.error(\n        \"m_RenderApp() Lifecycle Error. Check phase execution order effect on data validity.\\n\",\n        e\n      );\n      debugger;\n    }\n  }); // promise\n}\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    LOCAL SETTINGS\n    utility function for managing local\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/// GLOBAL NETWORK INFO (INJECTED ON INDEX) ///////////////////////////////////\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// NOTE: server-embedded properties are not defined for simple html apps\nvar EJSPROPS = window.NC_UNISYS || {};\n\n/// STORAGE ///////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet S        = {};\nlet DATE     = new Date();\nlet RELOAD_CHECK   = 0;\nlet RELOAD_TIMER = null;\n\n/// MAIN GETTER/SETTER FUNCTION  //////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ settings.js returns a function as its module.exports value so\n    syntax like let a = SETTINGS['key'] can be used.\n/*/ let MOD = ( a, b ) => {\n    if (a===undefined) throw ('SETTINGS requires key or key,value parms');\n    if (typeof a!=='string') throw ('SETTINGS parm1 must be key string');\n\n    if (b===undefined) {\n      return S[a];\n    } else {\n      S[a] = b;\n      return b;\n    }\n  }\n\n/// API ///////////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ alternate call to set a key value pair\n/*/ MOD.Set = (key, val) => {\n      MOD( key, val );\n    };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ alternate call to retrieve a key\n/*/ MOD.Get = ( key ) => {\n      return MOD( key )\n    };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Force Reload if another module was navigated to and we want to ensure the\n    entire browser was refreshed so only one set of app modules is loaded\n/*/ MOD.ForceReloadOnNavigation = () => {\n      RELOAD_CHECK++;\n      if (RELOAD_CHECK>1) {\n        console.warn(`SETTINGS: ForceReloadOnNavigation active. Reloading!`);\n        if (RELOAD_TIMER) clearTimeout(RELOAD_TIMER);\n        RELOAD_TIMER = setTimeout(()=>{location.reload()},500);\n      } else {\n        console.warn(`SETTINGS: ForceReloadOnNavigation check OK`);\n      }\n    };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ test time function\n/*/ MOD.CurrentTime = () => {\n      return DATE.toDateString();\n    };\n\n/// SERVER-PROVIDED PROPERTIES ////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ searches through the window.NC_UNISYS object that is injected by web page\n    app/static/index.ejs, which contains interesting values from server\n/*/ MOD.EJSProp = ( propName ) => {\n      if (propName===undefined) return EJSPROPS;\n      return EJSPROPS[propName];\n    };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    MOD.ServerHostName = () => {\n      return EJSPROPS.server.hostname || 'ERROR';\n    };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    MOD.ServerHostIP = () => {\n      return EJSPROPS.server.ip || 'ERROR';\n    };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    MOD.ServerAppURL = ( suburl ) => {\n     let ubits = new URL(window.location);\n      let hash = ubits.hash.split('/')[0];\n      let serverip = MOD.ServerHostIP();\n      let url = `${ubits.protocol}//${ubits.host}/${hash}`;\n      if (typeof suburl==='string') url += suburl;\n      return url;\n    };\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = MOD;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    DATASTORE\n    stub for testing module loading\n    eventually will load data from database\n    data.json is { nodes: [ {} ... {} ] }\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst DBG = { load: true };\n\n/// SYSTEM LIBRARIES //////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst SETTINGS = require(\"settings\");\nconst SESSION = require(\"unisys/common-session\");\nconst UNISYS = require(\"unisys/client\");\nconst PROMPTS = require(\"system/util/prompts\");\nconst PR = PROMPTS.Pad(\"Datastore\");\nconst NetMessage = require(\"unisys/common-netmessage-class\");\n\n/// CONSTANTS /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst HASH_ABET = \"ABCDEFGHIJKLMNPQRSTVWXYZ23456789\";\nconst HASH_MINLEN = 3;\n\n/// INITIALIZE MODULE /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet DSTOR = UNISYS.NewModule(module.id);\nlet UDATA = UNISYS.NewDataLink(DSTOR);\nlet D3DATA = {};\n\n/// LIFECYCLE /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ establish message handlers during INITIALIZE phase\n/*/\nDSTOR.Hook(\"INITIALIZE\", () => {\n  // DB_UPDATE is a local call originating from within the app\n  UDATA.HandleMessage(\"DB_UPDATE\", function(data) {\n    DSTOR.UpdateServerDB(data);\n  });\n\n  UDATA.OnAppStateChange('SESSION', function( decodedData ) {\n    let { isValid, token } = decodedData;\n    console.log('Handling SESSION',isValid);\n    if (isValid) DSTOR.SetSessionGroupID(decodedData);\n  });\n\n});\n\n\n/// SESSION ///////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ datastore needs to set NetMessage GroupID property on behalf of SESSIONS\n    because SESSION can't include NetMessage (or vice versa)\n/*/\nDSTOR.SetSessionGroupID = function ( decodedData ) {\n  let { token, isValid } = decodedData;\n  if (isValid) {\n    NetMessage.GlobalSetGroupID(token);\n    console.log('setting NetMessage group id',token);\n  } else {\n    console.warn('will not set bad group id:',token);\n  }\n};\n\n/// DB INTERFACE //////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: Placeholder DATA access function\n/*/\nDSTOR.Data = function() {\n  return D3DATA;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: Write update to database\n/*/\nDSTOR.UpdateServerDB = function(data) {\n  // check that network is online\n  if (UNISYS.IsStandaloneMode()) {\n    console.warn(PR,`STANDALONE MODE: UpdateServerDB() suppressed!`);\n    return;\n  }\n  // it is!\n  UDATA.Call(\"SRV_DBUPDATE\", data).then(res => {\n    if (res.OK) {\n      console.log(PR, `server db transaction`, data, `success`);\n    } else {\n      console.log(PR, \"error updating server db\", res);\n    }\n  });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ get a unique NodeID\n/*/\nDSTOR.PromiseNewNodeID = function() {\n  return new Promise((resolve, reject) => {\n    UDATA.NetCall(\"SRV_DBGETNODEID\").then(data => {\n      if (data.nodeID) {\n        if (DBG) console.log(PR, \"server allocated node_id\", data.nodeID);\n        resolve(data.nodeID);\n      } else {\n        if (UNISYS.IsStandaloneMode()) {\n          reject(new Error(\"STANDALONE MODE: UI should prevent PromiseNewNodeID() from running!\"));\n        } else {\n          reject(new Error(\"unknown error\" + JSON.stringify(data)));\n        }\n      }\n    });\n  });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ get a unique Edge\n/*/\nDSTOR.PromiseNewEdgeID = function() {\n  return new Promise((resolve, reject) => {\n    UDATA.NetCall(\"SRV_DBGETEDGEID\").then(data => {\n      if (data.edgeID) {\n        if (DBG) console.log(PR, \"server allocated edge_id:\", data.edgeID);\n        resolve(data.edgeID);\n      } else {\n        if (UNISYS.IsStandaloneMode()) {\n          reject(new Error(\"STANDALONE MODE: UI should prevent PromiseNewEdgeID() from running!\"));\n        } else {\n          reject(new Error(\"unknown error\" + JSON.stringify(data)));\n        }\n      }\n    });\n  });\n};\n\n/// DATABASE LOADER ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: Load default data set from a JSON file in /assets/data\n/*/\nDSTOR.PromiseJSONFile = function(jsonFile) {\n  if (typeof jsonFile !== \"string\") {\n    throw new Error(\"pass arg <filename_in_assets/data>\");\n  }\n  let promise = new Promise((resolve, reject) => {\n    let xobj = new XMLHttpRequest();\n    xobj.addEventListener(\"load\", event => {\n      if (event.target.status === 404) {\n        reject(new Error(`file not found`));\n        return;\n      }\n      let data = event.target.responseText;\n      D3DATA = Object.assign(D3DATA, JSON.parse(data));\n      resolve(D3DATA);\n    });\n    xobj.open(\"GET\", `data/${jsonFile}`, true);\n    xobj.send();\n  });\n  return promise;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: Load D3 Database\n/*/\nDSTOR.PromiseD3Data = function() {\n  // UDATA.Call() returns a promise\n  return UDATA.Call(\"SRV_DBGET\", {});\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: (WIP) write database from d3data-formatted object\n/*/\nDSTOR.OverwriteDataPromise = function(d3data) {\n  return new Promise((resolve, reject) => {\n    UDATA.Call(\"SRV_DBSET\", d3data).then(res => {\n      if (res.OK) {\n        console.log(PR, `database set OK`);\n        resolve(res);\n      } else {\n        reject(new Error(JSON.stringify(res)));\n      }\n    });\n  });\n};\n\n/// EXPORT MODULE /////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = DSTOR;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    JS CLI\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst DBG         = true;\nconst SHOW_DOM    = true;\n\n/// SYSTEM LIBRARIES //////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst SETTINGS    = require('settings');\nconst UNISYS      = require('unisys/client');\nconst PROMPTS     = require('system/util/prompts');\nconst PR          = PROMPTS.Pad('JSCLI');\n\n/// INITIALIZE MODULE /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet JSCLI         = UNISYS.NewModule(module.id);\nlet UDATA         = UNISYS.NewDataLink(JSCLI);\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet CMD = [];\n\n/// DEFINE CLI FUNCTIONS //////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    JSCLI.AddFunction = (f) => {\n      if (typeof f!=='function') throw Error('AddFunction() arg is Function object');\n      CMD.push(f);\n    };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    JSCLI.HelpString = () => {\n      let out = 'The following CLI commands are available\\n\\n';\n      CMD.forEach((f)=>{\n        out+=`  ${f.name}()\\n`;\n      });\n      out += \"\\n\";\n      out += \"Mac shortcuts to open console\\n\";\n      out += \"  Chrome  : cmd-option-j\\n\";\n      out += \"  Firefox : cmd-option-k\\n\";\n      out += \"PC use ctrl-shift instead\\n\";\n      return out;\n    };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ initialize registered functions\n/*/ JSCLI.Hook('RESET',() => {\n      JSCLI.AddFunction(function ncHelp() { return JSCLI.HelpString() });\n      CMD.forEach((f)=>{\n        window[f.name] = f;\n      });\n      if (SHOW_DOM) JSCLI.DOM_ShowInstructions();\n    });\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    JSCLI.DOM_ShowInstructions = () => {\n      var E_SHELL = document.getElementById('fdshell');\n      if (!E_SHELL) {\n        // console.warn(PR,\"DOM_ShowInstructions() found no id 'fdshell' to append instructions. Type 'ncHelp()' to list available JSCLI functions.\");\n        return;\n      }\n      var E_OUT = document.createElement('pre');\n      var E_HEADER = document.createElement('h4');\n      E_SHELL.appendChild(E_HEADER);\n      E_SHELL.appendChild(E_OUT);\n      E_HEADER.innerHTML='Command Information';\n      E_OUT.innerHTML = JSCLI.HelpString();\n    }\n\n\n/// EXPORT MODULE /////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = JSCLI;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Path Strings\n  REGEX approach from https://stackoverflow.com/a/47212224\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nvar PATH = {};\n\nconst rx_dir   = /(.*)\\/+([^/]*)$/;\nconst rx_file  = /()(.*)$/;\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Return the directory portion of a path\n/*/ PATH.Parse = function(str) {\n      // [0] original string\n      // [1] dirname\n      // [2] filename\n      return rx_dir.exec(str) || rx_file.exec(str);\n    };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Return the directory portion of a path\n/*/ PATH.Dirname = function(str) {\n      // return str.substring(0,str.lastIndexOf(\"/\"));\n      return (rx_dir.exec(str) || rx_file.exec(str))[1];\n    };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Return the file portion of a path\n/*/ PATH.Basename = function(str) {\n      // return str.substring(str.lastIndexOf(\"/\")+1);\n      return (rx_dir.exec(str) || rx_file.exec(str))[2];\n    };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Return the string stripped of extension\n/*/ PATH.StripExt = function(str) {\n      return str.substr(0,str.lastIndexOf('.'));\n    };\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = PATH;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  String Prompts for server\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst REFLECT   = require('./reflection');\nvar   PROMPTS   = {};\n\n/// CONSTANTS /////////////////////////////////////////////////////////////////\n/// detect node environment and set padsize accordingly\nconst IS_NODE   = ((typeof process!=='undefined') && (process.release) &&\n                  (process.release.name==='node'));\nvar   PAD_SIZE  = (IS_NODE)\n                  ? 9  // nodejs\n                  : 0; // not nodejs\n\n/// PROMPT STRING HELPERS /////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ return a string padded to work as a prompt for either browser or node\n    console output\n/*/ PROMPTS.Pad = function( prompt='', psize=PAD_SIZE) {\n      let len = prompt.length;\n      if (IS_NODE) return prompt.padEnd(psize,' ')+'-';\n      // must be non-node environment, so do dynamic string adjust\n      if (!psize) return prompt+':';\n      // if this far, then we're truncating\n      if (len>=psize) prompt = prompt.substr(0,psize-1);\n      else prompt.padEnd(psize,' ');\n      return prompt+':';\n    };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ returns PAD_SIZE stars\n/*/ PROMPTS.Stars = function( count ) {\n      if (count!==undefined) return ''.padEnd(count,'*');\n      return ''.padEnd(PAD_SIZE,'*');\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ return string of calling object's name\n/*/ PROMPTS.FunctionName = function() {\n      return REFLECT.FunctionName(2);\n    };\n\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = PROMPTS;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Reflection and other Object Inspection Utilities\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst STACKTRACE = require('stacktrace-js');\nconst PATH       = require('./path');\n\n/// INITIALIZE MAIN MODULE ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar   REFLECT    = {};\n\n/// API METHODS ///////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Returns the name of the constructor for the current class\n    https://stackoverflow.com/questions/22777181/typescript-get-to-get-class-name-at-runtime\n/*/ REFLECT.ExtractClassName = function( obj ) {\n       var funcNameRegex = /function (.{1,})\\(/;\n       var results = (funcNameRegex).exec((obj).constructor.toString());\n       return (results && results.length > 1) ? results[1] : \"\";\n    };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Returns the name of the calling function\n/*/ REFLECT.FunctionName = function( depth=1 ) {\n      let stack = STACKTRACE.getSync();\n      let frame = stack[depth];\n      let fn = frame.functionName;\n      if (!fn) {\n        fn = PATH.Basename(frame.fileName);\n        fn += `:${frame.lineNumber}:${frame.columnNumber}`;\n        return fn;\n      } else {\n        let bits = fn.split('.');\n        return `method ${bits[1]}() called by module ${bits[0]}`;\n      }\n    };\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ InspectModule() prints a list of public properties and methods for each\n    require module that contains the passed string. It returns a string, so\n    you will have to console.log() to see the output.\n/*/ REFLECT.InspectModule = function ( str ) {\n    throw Error(`REFLECT.InspectModule() needs to be rewritten for brunch-style modules.`);\n    var rm = require.s.contexts._.defined;\n    var mlist = [];\n    var base = '1401/';\n    if (str===undefined) str = base;\n    str = (typeof str==='string') ? str : base;\n\n    Object.keys(rm).forEach(function(key) {\n      var name = key.toString();\n      if (name.indexOf(str)>=0) {\n        mlist.push(key);\n      }\n    });\n\n    var out = '\\n';\n    for (var i=0; i<mlist.length; i++) {\n      var objName = mlist[i];\n      out += objName+'\\n';\n      if (str!==base) {\n        out+= \"-----\\n\";\n        var mod = rm[objName];\n        out += m_DumpObj(mod);\n        out += '\\n';\n      }\n    }\n    if (mlist.length) {\n      console.log(out);\n      return mlist.length + ' modules listed';\n    } else {\n      return \"module \" +str.bracket()+\" not found\";\n    }\n  };\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ InspectObject() accepts an object and a label, and prints a list of\n    all the methods and properties in it. It returns a string, so you will\n    have to console.log() to see the output.\n/*/ REFLECT.InspectObject = function ( obj, depth ) {\n    if (!obj) return \"Must pass an object or 1401 watched object key string\";\n\n    var out = \"\";\n    // handle command line calls\n    switch (typeof obj) {\n      case 'object':\n      case 'function':\n        break;\n      default:\n        return \"must pass object or function, not \"+(typeof obj);\n    }\n\n    // handle recursive scan\n    depth = depth || 0;\n    var label = obj.constructor.name || '(anonymous object)';\n    var indent = \"\";\n    for (var i=0; i<=depth; i++) indent+='\\t';\n    out+= label+'\\n';\n    out+= \"\\n\";\n    out += m_DumpObj(obj, depth+1);\n    var proto = Reflect.getPrototypeOf(obj);\n    if (proto) {\n      out += \"\\n\"+indent+\"IN PROTO: \";\n      out += this.InspectObject(proto,depth+1);\n      out += \"\\n\";\n    }\n    if (depth===0) out = '\\n'+out;\n    console.log(out);\n    return obj;\n  };\n\n\n/** SUPPORTING FUNCTIONS ****************************************************/\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Support function for InspectModule() and InspectObject()\n    Also checks m_watching array\n/*/ function m_DumpObj ( obj, depth ) {\n    var indent = \"\";\n    for (var i=0; i<depth; i++) indent+='\\t';\n\n    var str = \"\";\n    Object.keys(obj).forEach(function(key) {\n      var prop = obj[key];\n      var type = typeof prop;\n      str += indent;\n      str += type + '\\t'+key;\n      switch (type) {\n        case 'function':\n          var regexp = /function.*\\(([^)]*)\\)/;\n          var args = regexp.exec(prop.toString());\n          str+= ' ('+args[1]+')';\n          break;\n        default:\n          break;\n      }\n      str += '\\n';\n    });\n    return str;\n  }\n\n\n\n/** GLOBAL HOOKS *************************************************************/\n\nif (typeof window === 'object') {\n  window.InspectModule = REFLECT.InspectModule;\n  window.InspectObject = REFLECT.InspectObject;\n  window.DBG_Out = function ( msg, selector ) {\n    REFLECT.Out(msg,false, selector);\n  };\n  window.DBG_OutClean = function ( msg, selector ) {\n    REFLECT.Out(msg,true,selector);\n  };\n}\n\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = REFLECT;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    TEST\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nlet DBG = false;\n\n/// DECLARATIONS //////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ list of tests that are allowed to run\n/*/ let TESTS = {\n      call    : false,  // unisys calls\n      state   : false,  // unisys state manager\n      hook    : false,  // unisys lifecycle hooks\n      remote  : false,  // unisys 'remote' calls to other module\n      net     : false,  // network connection to socket server\n      server  : false   // unisys 'server implemented' calls\n    };\n/*/ groups of tests to run\n/*/ let PASSED = {};\n    let TEST_GO = false;\n/*/ pairs of arrays to match (array of arrays)\n/*/ let ARR_MATCH = [];\n    let PR = 'TEST:';\n    let m_meta_info = {};\n\n    let E_SHELL, E_OUT, E_HEADER;\n    let m_failed   = [];\n    let m_skipped  = [];\n    let m_passed   = [];\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Main TEST ENABLE\n    pass the testname (as listed in TESTS) and either true or false)\n/*/ let TM = ( testname, flag ) => {\n      if (testname===undefined) {\n        console.warn(`${PR} %cConfigured and Active`,`color:red;background-color:yellow`);\n        TEST_GO = true;\n        return true;\n      }\n      if (typeof testname!=='string') throw \"arg1 must be a testname\";\n      if (!TESTS.hasOwnProperty(testname)) throw `\"${testname}\" is not a valid testname`;\n      if (DBG) console.log(PR,'TM',testname,flag||'');\n      if (flag===undefined) {\n        if (!TEST_GO) console.error(`${PR} Test Switch read before testing started`);\n        let setting = TESTS[testname];\n        return setting;\n      } else {\n        TESTS[testname]=flag;\n        m_ConfigureTestFlags(testname,flag);\n        return flag;\n      }\n    };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    TM.SetTitle = function( text ) {\n      E_HEADER.innerText = text;\n    };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    TM.SetMeta = function( meta, value ) {\n      if (typeof meta==='string') {\n        let obj = {};\n        obj[meta]=value;\n        meta = obj;\n      }\n      if (typeof meta==='object') {\n        Object.assign(m_meta_info,meta);\n      } else {\n        throw Error('SetMeta() expected either object or string,value');\n      }\n    };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    TM.MetaString = function() {\n      let o = '';\n      let e = Object.entries(m_meta_info).forEach(([k,v])=>{\n        o+=`${k}:${v} `;\n      });\n      return o;\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: pass the particular subtest\n/*/ TM.Pass = function ( subtest ) {\n      m_InitShell();\n      // initialize tests\n      if (DBG) console.log(`${PR} %cPass %c${subtest}`,\"color:green\",\"color:black\");\n      if (PASSED.hasOwnProperty(subtest)) {\n        if (PASSED[subtest]) ++PASSED[subtest];\n        else PASSED[subtest] = 1;\n      } else {\n        throw Error(`Unknown subtest: ${subtest}`);\n      }\n    };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: fail the particular subtest\n/*/ TM.Fail = function ( subtest ) {\n      m_InitShell();\n      if (DBG) console.error(`${PR} %cFail ${subtest}`,\"color:red;font-weight:bold\");\n      if (PASSED.hasOwnProperty(subtest)) {\n        // 'null' for 'condition succeed' tests\n        // '0' for 'no error detected' tests\n        let flag = PASSED[subtest];\n        if (typeof flag==='string') {\n          // this has already failed with error\n          PASSED[subtest]=flag+'+';\n          return;\n        }\n        if (flag===null) return; // null flag are skipped\n        if (flag===0) {\n          PASSED[subtest]=-1; // failed once\n          return;\n        }\n        if (flag<=0) {\n          --PASSED[subtest];  // multiple failures\n          return;\n        }\n        // bizarre 'succeeded but now failed'\n        if (flag>0) {\n          PASSED[subtest]=`succeeded ${flag} times, then failed`;\n          return;\n        }\n      }\n      throw Error(`Unknown subtest: ${subtest}`);\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: check if the particular subtests passed have indeed passed\n/*/ TM.Passed = function ( ...args ) {\n      if (DBG) console.log(PR,'Passed');\n      let passed = true;\n      args.forEach((subtest)=>{\n        if (!PASSED.hasOwnProperty(subtest)) throw `\"${subtest}\" is not valid subtest`;\n        passed = passed && PASSED[subtest];\n      });\n      return passed;\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: output test results\n/*/ TM.Assess = function () {\n      if (DBG) console.log(PR,'Assess');\n      m_failed   = [];\n      m_skipped  = [];\n      m_passed   = [];\n      m_PreTest();\n      m_TestResults();\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: assess whether passed arrays match during Assess function()\n/*/ TM.AssessArrayMatch = function( subtest, arr1, arr2 ) {\n      if (DBG) console.log(PR,'AssessArrayMatch');\n      ARR_MATCH.push([subtest,arr1,arr2]);\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: return TRUE if there were no failing tests in the last test.\n    Call TM.Assess() again to retest\n/*/ TM.AllPassed = function () {\n      return m_failed.length!==0;\n    }\n\n\n\n/// TEST FUNCTIONS ////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ sets the PASSED object keys to enable/disable tests prior to running\n/*/ function m_ConfigureTestFlags ( testname, flag ) {\n      if (flag===undefined) throw \"arg2 flag must be true to enable, false to disable\";\n      // the subtest value must be set to false first\n      // to skip tests, the subtest value is set to null\n      if (flag===false) flag=null;\n      if (flag===true) flag=false;\n      // set subtest flags\n      let subtests;\n      switch (testname) {\n        case 'state':\n          subtests = {\n            stateChange       : flag,\n            stateMerge        : flag,\n            stateConcat       : flag\n          };\n          break;\n        case 'hook':\n          subtests = {\n            hookInit1         : flag,\n            hookInit2         : flag,\n            hookInitDeferred  : flag,\n            hookStart         : flag\n          };\n          break;\n        case 'call':\n          subtests = {\n            callHndlrReg      : flag,\n            callHndlrData     : flag,\n            callHndlrDataProp : flag,\n            callDataReturn    : flag,\n            callDataAdd       : flag,\n            callDataMulti     : flag\n          };\n          break;\n        case 'remote':\n          subtests = {\n            remoteCall        : flag,\n            remoteData        : flag,\n            remoteData2       : flag,\n            remoteDataReturn  : flag,\n            remoteDataAdd     : flag,\n            remoteDataMulti   : flag\n          };\n          break;\n        case 'server':\n          subtests = {\n            serverCall        : flag,\n            serverCallOrder   : flag,\n            serverReturn      : flag,\n            serverData        : flag,\n            serverDataAdd     : flag\n          }\n          break;\n        case 'net':\n          subtests = {\n            netMessageReg     : flag,\n            netCallHndlr      : flag,\n            netSendHndlr      : flag,\n            netSendNoEcho     : 0,    // if this stays 0, then NOERR has passed\n            netSignal         : flag,\n            netSignalEcho     : flag,\n            netData           : flag,\n            netDataReturn     : flag,\n            netDataAdd        : flag,\n//          netDataGather     : flag,\n            netDataMulti      : flag\n          }\n          break;\n        default:\n          throw `Unknown test \"${testname}\"`\n      } // end switch\n      Object.assign(PASSED,subtests);\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    function m_PreTest() {\n      // test arrays\n      ARR_MATCH.forEach(function(pair) {\n        let pass = true;\n        let subtest = pair[0];\n        let arr1 = pair[1];\n        let arr2 = pair[2];\n        pass = pass && (arr1.length===arr2.length);\n        for (let i=0; i<arr1.length; i++) {\n          pass = pass && (arr1[i]===arr2[i]);\n        }\n        if (pass) TM.Pass(subtest);\n      });\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ prints the test output to console\n/*/ function m_TestResults() {\n      m_ShowShell();\n      // check all test results\n      let pEntries = Object.entries(PASSED);\n      let padding  = 0;\n      // find longest string\n      pEntries.forEach(( [key,value] ) => {\n        if (key.length>padding) padding = key.length;\n      });\n      // scan test results\n      pEntries.forEach(( [key,value ]) => {\n        let res = '';\n        if (value===null) {\n          // res = `${(key).padEnd(padding)} [ ]\\n`;\n          m_skipped.push(res);\n        } else switch (typeof value) {\n          case 'number':\n            if (value>=1) {\n              if (value===1) res=`${key.padEnd(padding)} [OK]\\n`;\n              if (value > 1) res=`${key.padEnd(padding)} [OK] x ${value}\\n`;\n              m_passed.push(res);\n            } else {\n              if (value===0) {\n                res=`${key.padEnd(padding)} [NP]\\n`;\n                m_passed.push(res);\n              }\n              if (value===-1) {\n                res=`${key.padEnd(padding)} [!!] FAIL\\n`;\n                m_failed.push(res);\n              }\n              if (value< -1) {\n                res=`${key.padEnd(padding)} [!!] FAIL x ${-value}\\n`;\n                m_failed.push(res);\n              }\n            }\n            break;\n          case 'boolean':\n            if (value) {\n              res=`${key.padEnd(padding)} [OK]\\n`;\n              m_passed.push(res);\n            } else {\n              res=`${key.padEnd(padding)} [!!] FAIL\\n`;\n              m_failed.push(res);\n            }\n            break;\n          default:\n            m_passed.push(`${key.padEnd(padding)} [OK] '${value}'\\n`);\n            break;\n        } // switch typeof value\n      }); // pEntries.forEach\n\n      let testTitle = \"UNISYS LOGIC TEST RESULTS\";\n      console.group(testTitle);\n        let out = m_passed.concat(m_failed,m_skipped)\n          .join('');\n\n        // additional help\n        let tnotes = '';\n        if (!TM.Passed('netCallHndlr')) tnotes+= `NOTE: 'netCallHndlr' requires a synched remote app to call-in\\n`;\n        if (!TM.Passed('netSendHndlr')) tnotes+= `NOTE: 'netSendHndlr' requires a synched remote app to call-in\\n`;\n        if (!TM.Passed('netData')) tnotes+= `NOTE: 'netData*' requires a synched remote app to respond to call-out\\n`;\n        if (tnotes) out+='\\n'+tnotes;\n\n        // summary\n        let summary = `${m_passed.length}=passed`;\n        if (m_failed.length) summary+=` ${m_failed.length}=failed`;\n        if (m_skipped.length) summary+=` ${m_skipped.length}=skipped`;\n        console.log(`${out}\\n${summary}`);\n        TM.SetTitle(`${testTitle} ${TM.MetaString()}`);\n        E_OUT.innerText = `${summary}\\n\\n`;\n        E_OUT.innerText += \"OPEN JAVASCRIPT CONSOLE TO SEE DETAILS\\n\";\n        E_OUT.innerText += \"Mac shortcuts to open console\\n\";\n        E_OUT.innerText += \"  Chrome  : cmd-option-j\\n\";\n        E_OUT.innerText += \"  Firefox : cmd-option-k\\n\";\n        E_OUT.innerText += \"PC use ctrl-shift instead\\n\";\n      console.groupEnd();\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ initialize the shell user interface for test results as elements, but\n    don't yet link them because component may not have rendered yet\n/*/ function m_InitShell() {\n      if (!E_OUT) {\n        E_OUT = document.createElement('pre');\n        E_HEADER = document.createElement('h4');\n        E_HEADER.innerText = \"RUNNING TESTS \";\n        E_OUT.innerText = '.';\n      } else {\n        E_OUT.innerText += '.';\n      }\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ show the shell elements by finding root div and appending them\n/*/ function m_ShowShell() {\n      E_SHELL = document.getElementById('fdshell');\n      E_SHELL.appendChild(E_HEADER);\n      E_SHELL.appendChild(E_OUT);\n    }\n\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = TM;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    UNISYS DATALINK CLASS\n\n    The UNISYS DATALINK (UDATA) class represents a connection to the UNISYS\n    event messaging system. Instances are created with UNISYS.NewDataLink().\n\n    Each UNODE has a unique UNISYS_ID (the UID) which represents its\n    local address. Combined with the device UADDR, this makes every UNODE\n    on the network addressable.\n\n    * UNODES can get and set global state objects\n    * UNODES can subscribe to state change events\n    * UNODES can register listeners for a named message\n    * UNODES can send broadcast to all listeners\n    * UNODES can call listeners and receive data\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/// DEBUGGING /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG          = { send:false, return:false, register:false };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst BAD_OWNER    = \"must pass owner object of type React.Component or UniModule with optional 'name' parameter\";\nconst BAD_NAME     = \"name parameter must be a string\";\nconst BAD_UID      = \"unexpected non-unique UID\";\nconst NO_DATAOBJ   = \"syntax error: missing data object\";\nconst BAD_EJSPROPS = \"EJS props (window.NC_UNISYS) is undefined, so can not set datalink IP address\";\nconst PR           = \"UDATA:\";\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst SETTINGS     = require('settings');\nconst STATE        = require('unisys/client-state');\nconst Messager     = require('unisys/client-messager-class');\n\n/// NODE MANAGEMENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar UNODE          = new Map(); // unisys connector node map (local)\nvar UNODE_COUNTER  = 100;       // unisys connector node id counter\n\n/// GLOBAL MESSAGES ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar MESSAGER       = new Messager();\n\n/// UNISYS NODE CLASS /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Instances of this class can register/unregister message handlers and also\n    send messages. Constructor receives an owner, which is inspected for\n    properties to determine how to classify the created messager for debugging\n    purposes\n/*/ class UnisysDataLink {\n\n  /*/ CONSTRUCTOR\n      A messager creates a unique ID within the webapp instance. Since\n      messagers are \"owned\" by an object, we want the ID to reflect\n      the owner's identity too while also allowing multiple instances per\n      owner.\n  /*/ constructor( owner, optName ) {\n        let msgr_type = '?TYPE';\n        let msgr_name = '?NAME';\n\n        if ((optName!==undefined) && (typeof optName!=='string')) {\n          throw Error(BAD_NAME);\n        }\n\n        // require an owner that is an object of some kind\n        if (typeof owner!=='object') throw Error(BAD_OWNER);\n\n        // react components or regular objects\n        if (owner.name) {\n          msgr_type = 'MOD';\n          msgr_name = owner.name || optName;\n        } else if (owner.constructor.name) {\n          msgr_type = 'RCT';\n          msgr_name = owner.constructor.name;\n        } else {\n          throw Error(BAD_OWNER);\n        }\n\n        // generate and save unique id\n        this.uid      = `${msgr_type}_${UNODE_COUNTER++}`;\n        this.name     = msgr_name;\n        if (UNODE.has(this.uid)) throw Error(BAD_UID+this.uid);\n\n        // save module in the global module list\n        UNODE.set(this.uid,this);\n      }\n\n\n  /// UNIQUE UNISYS ID for local application\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// this is used to differentiate sources of events so they don't echo\n      UID() { return this.uid; }\n      Name() { return this.name; }\n\n\n  /// GLOBAL STATE ACCESS\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// global STATE module calls are wrapped by unisys node so the unique\n  /// UnisysID address can be appended\n      AppState( namespace ) {\n        return STATE.State(namespace);\n      }\n      SetAppState( namespace, newState ) {\n        // uid is \"source uid\" designating who is making the change\n        STATE.SetState(namespace,newState,this.UID() );\n      }\n      MergeAppState( namespace, newState ) {\n        // uid is \"source uid\" designating who is making the change\n        STATE.MergeState(namespace,newState,this.UID() );\n      }\n      ConcatAppState( namespace, newState ) {\n        // uid is \"source uid\" designating who is making the change\n        STATE.ConcatState(namespace,newState,this.UID() );\n      }\n      // uid is \"source uid\" of subscribing object, to avoid reflection\n      // if the subscribing object is also the originating state changer\n      OnAppStateChange( namespace, listener ) {\n        STATE.OnStateChange(namespace,listener,this.UID() );\n      }\n      AppStateChangeOff( namespace, listener ) {\n        STATE.OffStateChange(namespace,listener);\n      }\n\n\n  /// MESSAGES ////////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// mesgName is a string, and is an official event that's defined by the\n  /// subclasser of UnisysNode\n      HandleMessage( mesgName, listener ) {\n        // uid is \"source uid\" of subscribing object, to avoid reflection\n        // if the subscribing object is also the originating state changer\n        if (DBG.register) console.log(`${this.uid}_${PR}`,`${this.name} handler added [${mesgName}]`);\n        MESSAGER.HandleMessage(mesgName,listener,{receiverUID:this.UID()});\n      }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n      UnhandleMessage( mesgName, listener ) {\n        if (DBG.register) console.log(`${this.uid}_${PR}`,`${this.name} handler removed [${mesgName}]`);\n        MESSAGER.UnhandleMessage(mesgName,listener);\n      }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ UDATA wraps Messager.Call(), which returns an array of promises.\n      The UDATA version of Call() manages the promises, and returns a\n  /*/ async Call( mesgName, inData={}, options={} ) {\n        options = Object.assign(options,{type:'mcall'});\n        if (DBG.send) {\n          let status = '';\n          if (!options.toNet) status+='NO_NET ';\n          if (!options.toLocal) status+='NO_LOCAL';\n          if (!(options.toLocal||options.toNet)) status='ERR NO LOCAL OR NET';\n          console.log(`${this.uid}_${PR}`,'** DATALINK CALL ASYNC',mesgName,status);\n        }\n        // uid is \"source uid\" of subscribing object, to avoid reflection\n        // if the subscribing object is also the originating state changer\n        options.srcUID = this.UID();\n        let promises = MESSAGER.Call(mesgName,inData,options);\n        /// MAGICAL ASYNC/AWAIT BLOCK ///////\n        if (DBG.send) console.log(`${this.uid}_${PR}`,'** awaiting...',promises);\n        let resArray = await Promise.all(promises);\n        if (DBG.send) console.log(`${this.uid}_${PR}`,'** promise fulfilled!',mesgName);\n        /// END MAGICAL ASYNC/AWAIT BLOCK ///\n        let resObj = Object.assign({},...resArray);\n        if (DBG.return) console.log(`${this.uid}_${PR}`,`[${mesgName}] returned`,JSON.stringify(resObj));\n        return resObj;\n      }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ Sends the data to all message implementors UNLESS it is originating from\n      the same UDATA instance (avoid echoing back to self)\n  /*/ Send( mesgName, inData={}, options={} ) {\n        if (DBG.send) console.log(`${this.uid}_${PR}`,'** DATALINK SEND',mesgName);\n        options = Object.assign(options,{type:'msend'});\n        // uid is \"source uid\" of subscribing object, to avoid reflection\n        // if the subscribing object is also the originating state changer\n        options.srcUID = this.UID();\n        // uid is \"source uid\" of subscribing object, to avoid reflection\n        // if the subscribing object is also the originating state changer\n        MESSAGER.Send(mesgName,inData,options);\n      }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ Sends the data to all message implementors, irregardless of origin.\n  /*/ Signal( mesgName, inData={}, options={} ) {\n        options = Object.assign(options,{type:'msig'});\n        MESSAGER.Signal(mesgName,inData,options);\n      }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ version of Call that forces local-only calls\n  /*/ LocalCall( mesgName, inData, options={} ) {\n        options = Object.assign(options,{type:'mcall'});\n        options.toLocal = true;\n        options.toNet = false;\n        return this.Call(mesgName,inData,options);\n      }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ version of Send that force local-only calls\n  /*/ LocalSend( mesgName, inData, options={} ) {\n        options = Object.assign(options,{type:'msend'});\n        options.toLocal = true;\n        options.toNet = false;\n        this.Send(mesgName,inData,options);\n      }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ version of Send that force local-only calls\n  /*/ LocalSignal( mesgName, inData, options={} ) {\n        options = Object.assign(options,{type:'msig'});\n        options.toLocal = true;\n        options.toNet = false;\n        this.Signal(mesgName,inData,options);\n      }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ version of Call that forces network-only calls\n  /*/ NetCall( mesgName, inData, options={} ) {\n        options = Object.assign(options,{type:'mcall'});\n        options.toLocal = false;\n        options.toNet = true;\n        return this.Call(mesgName,inData,options);\n      }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ version of Send that force network-only calls\n  /*/ NetSend( mesgName, inData, options={} ) {\n        options = Object.assign(options,{type:'msend'});\n        options.toLocal = false;\n        options.toNet = true;\n        this.Send(mesgName,inData,options);\n      }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ version of Signal that forces network-only signal\n  /*/ NetSignal( mesgName, inData, options={} ) {\n        options.toLocal = false;\n        options.toNet = true;\n        this.Signal(mesgName,inData,options);\n      }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n      NullCallback () {\n        if (DBG.send) console.log(`${this.uid}_${PR}`,'null_callback',this.UID());\n      }\n  } // class UnisysNode\n\n\n/// STATIC CLASS METHODS //////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ There's a single MESSAGER object that handles all registered messages for\n    UNISYS.\n/*/ UnisysDataLink.MessageNames = function () {\n      return MESSAGER.MessageNames();\n    };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Filter any bad messages from the passed array of strings\n/*/ UnisysDataLink.ValidateMessageNames = function ( msgs=[] ) {\n      let valid=[];\n      msgs.forEach((name)=>{\n        if (MESSAGER.HasMessageName(name)) valid.push(name);\n        else throw new Error(`ValidateMessageNames() found invalid message '${name}'`);\n      });\n      return valid;\n    };\n\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = UnisysDataLink;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    LifeCycle - A system manager for application lifecycle events.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst DBG = window.NC_DBG && window.NC_DBG.lifecycle;\nconst BAD_PATH =\n  \"module_path must be a string derived from the module's module.id\";\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst PATH = require(\"system/util/path\");\n\n/// DECLARATIONS //////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar PHASE_HOOKS = new Map(); // functions that might right a Promise\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst PHASES = [\n  \"TEST_CONF\", // setup tests\n  \"INITIALIZE\", // module data structure init\n  \"LOADASSETS\", // load any external data, make connections\n  \"CONFIGURE\", // configure runtime data structures\n  \"DOM_READY\", // when viewsystem has completely composed\n  \"RESET\", // reset runtime data structures\n  \"START\", // start normal execution run\n  \"APP_READY\", // synchronize to UNISYS network server\n  \"RUN\", // system starts running\n  \"UPDATE\", // system is running (periodic call w/ time)\n  \"PREPAUSE\", // system wants to pause run\n  \"PAUSE\", // system has paused (periodic call w/ time)\n  \"POSTPAUSE\", // system wants to resume running\n  \"STOP\", // system wants to stop current run\n  \"DISCONNECT\", // unisys server has gone offline\n  \"RECONNECT\", // unisys server has reconnected\n  \"UNLOADASSETS\", // system releases any connections\n  \"SHUTDOWN\" // system wants to shut down\n];\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar PHASE = PHASES[0] + \"_PENDING\"; // current phase\n\n/// MODULE DEFINITION /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar MOD = {\n  name: \"LifeCycle\",\n  scope: \"system/booting\" // overwritten by UNISYS.SystemInitialize()\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ UTILITY: compare the destination scope with the acceptable scope (the\n    module.id of the root JSX component in a view). Any module not in the\n    system directory will not get called\n/*/\nfunction m_ExecuteScopedPhase(phase, o) {\n  // check for special unisys or system directory\n  if (o.scope.indexOf(\"system\") === 0) return o.f();\n  if (o.scope.indexOf(\"unisys\") === 0) return o.f();\n  // check for subdirectory\n  if (o.scope.includes(MOD.scope, 0)) return o.f();\n  // else do nothing\n  if (DBG)\n    console.info(\n      `LIFECYCLE: skipping [${phase}] for ${o.scope} because scope is ${\n        MOD.scope\n      }`\n    );\n  return undefined;\n}\n\n/// LIFECYCLE METHODS /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: register a Phase Handler which is invoked by MOD.Execute()\n    phase is a string constant from PHASES array above\n    f is a function that does work immediately, or returns a Promise\n/*/\nMOD.Hook = (phase, f, scope) => {\n  // make sure scope is included\n  if (typeof scope !== \"string\")\n    throw Error(`<arg3> scope is required (set to module.id)`);\n  // does this phase exist?\n  if (typeof phase !== \"string\")\n    throw Error(\"<arg1> must be PHASENAME (e.g. 'LOADASSETS')\");\n  if (!PHASES.includes(phase))\n    throw Error(phase, \"is not a recognized lifecycle phase\");\n  // did we also get a promise?\n  if (!(f instanceof Function))\n    throw Error(\"<arg2> must be a function optionally returning Promise\");\n\n  // get the list of promises associated with this phase\n  // and add the new promise\n  if (!PHASE_HOOKS.has(phase)) PHASE_HOOKS.set(phase, []);\n  PHASE_HOOKS.get(phase).push({ f, scope });\n  if (DBG) console.log(`[${phase}] added handler`);\n};\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: Execute all Promises associated with a phase, completing when\n    all the callback functions complete. If the callback function returns\n    a Promise, this is added to a list of Promises to wait for before the\n    function returns control to the calling code.\n/*/\nMOD.Execute = async phase => {\n  // require scope to be set\n  if (MOD.scope === false)\n    throw Error(\n      `UNISYS.SetScope() must be set to RootJSX View's module.id. Aborting.`\n    );\n\n  // note: contents of PHASE_HOOKs are promise-generating functions\n  if (!PHASES.includes(phase))\n    throw Error(`${phase} is not a recognized lifecycle phase`);\n  let hooks = PHASE_HOOKS.get(phase);\n  if (hooks === undefined) {\n    if (DBG) console.log(`[${phase}] no subscribers`);\n    return;\n  }\n\n  // phase housekeeping\n  PHASE = phase + \"_PENDING\";\n\n  // now execute handlers and promises\n  let icount = 0;\n  if (DBG) console.group(phase);\n  // get an array of promises\n  // o contains f, scope pushed in Hook() above\n  let promises = hooks.map(o => {\n    let retval = m_ExecuteScopedPhase(phase, o);\n    if (retval instanceof Promise) {\n      icount++;\n      return retval;\n    }\n    // return undefined to signal no special handling\n    return undefined;\n  });\n  promises = promises.filter(e => {\n    return e !== undefined;\n  });\n  if (DBG && hooks.length)\n    console.log(`[${phase}] HANDLERS PROCESSED : ${hooks.length}`);\n  if (DBG && icount) console.log(`[${phase}] PROMISES QUEUED    : ${icount}`);\n\n  // wait for all promises to execute\n  await Promise.all(promises)\n    .then(values => {\n      if (DBG && values.length)\n        console.log(`[${phase}] PROMISES RETURNED  : ${values.length}`, values);\n      if (DBG) console.groupEnd();\n      return values;\n    })\n    .catch(err => {\n      if (DBG) console.log(`[${phase} EXECUTE ERROR ${err}`);\n      throw Error(`[${phase} EXECUTE ERROR ${err}`);\n    });\n\n  // phase housekeeping\n  PHASE = phase;\n};\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: The scope is used to filter lifecycle events within a particular\n    application path, which are defined under the view directory.\n/*/\nMOD.SetScope = module_path => {\n  if (typeof module_path !== \"string\") throw Error(BAD_PATH);\n  if (DBG) console.log(`setting lifecycle scope to ${module_path}`);\n  // strip out filename, if one exists\n  MOD.scope = PATH.Dirname(module_path);\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: The scope\n/*/\nMOD.Scope = () => {\n  return MOD.scope;\n};\n\n/// STATIC METHODS ////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// ...\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = MOD;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    Messager - Handle a collection of named events and their handlers\n    https://en.wikipedia.org/wiki/Event-driven_architecture#JavaScript\n\n    NOTE: This class is often WRAPPED by other UNISYS modules that manage\n    a unique ID (such as the unique unisys datalink id) that hide that\n    implementation detail from local users (e.g. unisys-data-class)\n\n    HandleMessasge('MESG_NAME',handlerFunc,options)\n      Add a handlerFunc. Specify options.handlerUID to enable echo rejection\n      (same udata module will not invoke own handler when sending same message)\n    UnhandleMessage('MESG_NAME',handlerFunc)\n      Remove a handlerFunc associated with the handlerFuncFunction\n    Send('MESG_NAME',data,options)\n      Trigger an message+data to all handlers from a particular UDATA id\n      If options.srcUID is specified, echo suppression is enabled\n    Signal('MESG_NAME',data)\n      Similar to Send(), but will ALWAYS broadcast to all implementors\n    Call('MESG_NAME',data,options)\n      Similar to Send(), but can return a value to a callback function\n      options.srcUID is the UDATA id; set for echo supression to that uid\n      options.dataReturnFunc is the callback function.\n\n    NOTE: CallerReturnFunctions receive data object AND control object.\n    The control object has the \"return\" function that closes a transaction;\n    this is useful for async operations without Promises.\n\n    NOTE: HandlerFunctions and CallerReturnFunctions are anotated with the\n    udata_id property, which can be set to avoid echoing a message back to\n    the same originating udata source.\n\n    NOTE: When providing a handlerFunc, you might want to bind it to a\n    specific object context (i.e. 'this') value using bind().\n    e.g. handlerFunction = handlerFunction.bind(this);\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst TEST         = require('test');\nconst NetMessage   = require('unisys/common-netmessage-class');\n\n/// MODULE VARS ///////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar   MSGR_IDCOUNT = 0;\nvar   DBG          = false;\n\n/// UNISYS MESSAGER CLASS /////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nclass Messager {\n/*/ Instances of this class can be used to implement a UNISYS-style message\n    passing scheme with shared semantics. It maintains a Map keyed by mesgName\n    strings, containing a Set object filled with handlers for that mesgName.\n/*/ constructor() {\n      this.handlerMap   = new Map(); // message map storing sets of functions\n      this.messager_id  = ++MSGR_IDCOUNT;\n    }\n\n/// FIRE ONCE EVENTS //////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: subscribe a handlerFunc function with a particular unisys id\n    to receive a particular message. The handlerFunc receives a data obj\n    and should return one as well. If there is an error, return a string.\n/*/ HandleMessage( mesgName, handlerFunc, options={} ) {\n      let { handlerUID } = options;\n      let { syntax } = options;\n      if (typeof handlerFunc !== 'function') {\n        throw \"arg2 must be a function\";\n      }\n      if (typeof handlerUID==='string') {\n        // bind the udata uid to the handlerFunc function for convenient access\n        // by the message dispatcher\n        handlerFunc.udata_id = handlerUID;\n      }\n      let handlers = this.handlerMap.get(mesgName);\n      if (!handlers) {\n        handlers = new Set();\n        this.handlerMap.set( mesgName, handlers );\n      }\n      // syntax annotation\n      if (syntax) handlerFunc.umesg = { syntax };\n      // saved function to handler\n      handlers.add(handlerFunc);\n      return this;\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: unsubscribe a handlerFunc function from a particular event\n/*/ UnhandleMessage( mesgName, handlerFunc ) {\n      if (!arguments.length) {\n        this.handlerMap.clear();\n      } else if (arguments.length===1) {\n        this.handlerMap.delete(mesgName);\n      } else {\n        const handlers = this.handlerMap.get(mesgName);\n        if (handlers) {\n          handlers.delete(handlerFunc);\n        }\n      }\n      return this;\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: trigger a message with the data object payload, sending to all handlers\n    that implement that event. Includer sender's unisys id to prevent the sender\n    to receiving its own message back if it happens to implement the message as\n    well. dstScope is 'net' or 'local' to limit where to send, or 'all'\n    for everyone on net or local\n/*/ Send( mesgName, inData, options={} ) {\n      let { srcUID, type }          = options;\n      let { toLocal=true, toNet=true } = options;\n      const handlers = this.handlerMap.get(mesgName);\n      /// toLocal\n      if (handlers && toLocal) for (let handlerFunc of handlers) {\n        // handlerFunc signature: (data,dataReturn) => {}\n        // handlerFunc has udata_id property to note originating UDATA object\n        // skip \"same origin\" calls\n        if (srcUID && handlerFunc.udata_id===srcUID) {\n          if (DBG) console.warn(`MessagerSend: [${mesgName}] skip call since origin = destination; use Broadcast() if intended`);\n          continue;\n        }\n        // trigger the handler (no return expected)\n        handlerFunc(inData,{/*control functions go here*/});\n      } // end toLocal\n      /// toNetwork\n      if (toNet) {\n        let pkt = new NetMessage(mesgName,inData,type);\n        pkt.SocketSend();\n      } // end toNetwork\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: wrapper for Send() used when you want every handlerFunc, including\n    the sender, to receive the event even if it is the one who sent it.\n/*/ Signal( mesgName, data, options={} ) {\n      if (options.srcUID) {\n        console.warn(`overriding srcUID ${options.srcUID} with NULL because Signal() doesn't use it`);\n        options.srcUID = null;\n      }\n      this.Send(mesgName,data,options);\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: Return an array of Promises. Called by UDATA.Call().\n/*/ Call( mesgName, inData, options={} ) {\n      let { srcUID, type }             = options;\n      let { toLocal=true, toNet=true } = options;\n      const handlers = this.handlerMap.get(mesgName);\n      let promises = [];\n      /// toLocal\n      if (handlers && toLocal) {\n        for (let handlerFunc of handlers) {\n          // handlerFunc signature: (data,dataReturn) => {}\n          // handlerFunc has udata_id property to note originating UDATA object\n          // skip \"same origin\" calls\n          if (srcUID && handlerFunc.udata_id===srcUID) {\n            if (DBG) console.warn(`MessagerCall: [${mesgName}] skip call since origin = destination; use Broadcast() if intended`);\n            continue;\n          }\n          // Create a promise. if handlerFunc returns a promise, it follows\n          let p = f_MakeResolverFunction( handlerFunc, inData );\n          promises.push(p);\n        } // end toLocal\n      }\n      /// resolver function\n      /// remember MESSAGER class is used for more than just Network Calls\n      /// the state manager also uses it, so the resolved value may be of any type\n      function f_MakeResolverFunction( handlerFunc ) {\n        return new Promise(( resolve, reject ) => {\n          let retval = handlerFunc(inData,{/*control functions go here*/});\n          resolve(retval);\n        });\n      }\n      /// toNetwork\n      if (toNet) {\n        type = type || 'mcall';\n        let pkt = new NetMessage(mesgName,inData,type);\n        let p = pkt.QueueTransaction();\n        promises.push(p);\n      } // end toNetwork\n\n      /// return all queued promises\n      return promises;\n    }\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: Return a list of messages handled by this Messager instance\n/*/ MessageNames () {\n      let handlers = [];\n      this.handlerMap.forEach( (value, key ) => {\n        handlers.push(key);\n        if (DBG) console.log('handler: '+key);\n      });\n      return handlers;\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: Verify that message exists\n/*/ HasMessageName ( msg='' ) {\n      return this.handlerMap.has(msg);\n    }\n\n} // class Messager\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = Messager;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    UNISYS MODULE SHELL\n\n    A simple shell with a unique id and unique name. Currently this is just\n    a utility class for maintaining naming convention for modules, and\n    serves as the interface for module management within the UNISYS universe\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst DBG            = true;\nconst BAD_NAME       = \"name parameter must be a string or unisys module\";\nconst NOT_UNIQUE     = \"name must be unique\";\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst LIFECYCLE      = require('unisys/client-lifecycle');\nconst PATH           = require('system/util/path');\n\n/// MODULE DECLARATIONS ///////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar MODULES          = new Map(); // unisys modules map\nvar MODULES_COUNTER  = 1;         // unisys modules counter\n\n/// UNISYS MODULE CLASS ///////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Instances of this class are used to participate in the UNISYS lifecycle.\n    Constructor receives the value of module.id, which is used to help scope\n    what lifecycle hooks are distributed to which module\n/*/ class UnisysModule {\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ initializer is the value module.id or another instance of UnisysModule,\n      which is used to create a derivative name of form 'initializer name:0'\n  /*/ constructor( module ) {\n\n        if (module===undefined) throw Error(BAD_NAME);\n        // can pass another unisys modules to create derived name\n        if (module instanceof UnisysModule) {\n          this.module_id = module.AutoName();\n        } else if (typeof module==='string') {\n        // otherwise, copy the initializer\n          this.module_id = module;\n        }\n        if (MODULES.has( this.name )) throw Error(NOT_UNIQUE);\n\n        // save unique information\n        this.uid = `UMOD_${MODULES_COUNTER++}`;\n\n        // save derivative subname counter\n        this.subnameCounter = 0;\n\n        // save module in the global module list\n        MODULES.set( this.module_id, this );\n      }\n\n  /// PROPERTIES //////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ this is used for identifying the module. It must be unique across all\n  /*/ ModuleID() {\n        return this.module_id;\n      }\n  /*/ utility method to return a short name\n  /*/ ModuleName() {\n        return PATH.Basename(this.module_id);\n      }\n\n  /// UTILITIES ///////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ used to create a derivative name\n  /*/ AutoName() {\n        return `${this.module_id}:${this.subnameCounter++}`;\n      }\n  /*/ check if the name already exists in the MODULES collection\n  /*/ HasModule( name ) {\n        return MODULES.has(name);\n      }\n\n  /// LIFECYCLE /////////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ wrap Hook function to include the ModuleID\n  /*/ Hook( phase, f ) {\n        LIFECYCLE.Hook(phase,f,this.ModuleID());\n      }\n\n\n  } // end UnisysModule\n\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = UnisysModule;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    UNISYS NETWORK implements network controls and synchronization.\n    It initializes a network connection on the CONNECT lifecycle.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst DBG = { connect: true, handle: false };\n\n/// LOAD LIBRARIES ////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst SETTINGS = require(\"settings\");\nconst NetMessage = require(\"unisys/common-netmessage-class\");\nconst PROMPTS = require(\"system/util/prompts\");\nconst PR = PROMPTS.Pad(\"NETWORK\");\nconst WARN = PROMPTS.Pad(\"!!!\");\nconst ERR_NM_REQ = \"arg1 must be NetMessage instance\";\nconst ERR_NO_SOCKET = \"Network socket has not been established yet\";\nconst ERR_BAD_UDATA = \"An instance of 'client-datalink-class' is required\";\n\n/// GLOBAL NETWORK INFO (INJECTED ON INDEX) ///////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar NETSOCK = SETTINGS.EJSProp(\"socket\");\nvar NETCLIENT = SETTINGS.EJSProp(\"client\");\nvar NETSERVER = SETTINGS.EJSProp(\"server\");\n\n/// NETWORK ID VALUES /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst M0_INIT = 0;\nconst M1_CONNECTING = 1;\nconst M2_CONNECTED = 2;\nconst M3_REGISTERED = 3;\nconst M4_READY = 4;\nconst M_STANDALONE = 5;\nconst M_NOCONNECT = 6;\nvar m_status = M0_INIT;\nvar m_options = {};\n\n/// API METHODS ///////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar NETWORK = {};\nvar UDATA = null; // assigned during NETWORK.Connect()\n\n/// CONNECT ///////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Establish connection to UNISYS server. This is called by client.js during\n    NetworkInitialize(), which itself fires after the application has rendered\n    completely.\n/*/\nNETWORK.Connect = function(datalink, opt) {\n  // special case: STANDALONE mode is set by a different set of magical\n  // window.NC_UNISYS properties\n  if (window.NC_UNISYS.server.ip==='standalone') {\n    m_status = M_STANDALONE;\n    console.warn(PR,\"STANDALONE MODE: NETWORK.Connect() suppressed!\");\n    NetMessage.GlobalOfflineMode();\n    if (typeof opt.success === \"function\") opt.success();\n    return;\n  }\n\n  // if multiple network connections occur, emit warning\n  // warning: don't modify this unless you have a deep knowledge of how\n  // the webapp system works or you might break something\n  if (m_status > 0) {\n    let err =\n      \"called twice...other views may be calling UNISYS outside of lifecycle\";\n    console.error(WARN, err);\n    return;\n  }\n  m_status = M1_CONNECTING;\n\n  // check and save parms\n  if (datalink.constructor.name !== \"UnisysDataLink\") {\n    throw Error(ERR_BAD_UDATA);\n  }\n  if (!UDATA) UDATA = datalink;\n  m_options = opt || {};\n\n  // create websocket\n  // uses values that were embedded in index.ejs on load\n  let wsURI = `ws://${NETSOCK.uaddr}:${NETSOCK.uport}`;\n  NETSOCK.ws = new WebSocket(wsURI);\n  if (DBG.connect) console.log(PR, \"OPEN SOCKET TO\", wsURI);\n\n  // create listeners\n  NETWORK.AddListener(\"open\", function(event) {\n    if (DBG.connect) console.log(PR, \"..OPEN\", event.target.url);\n    m_status = M2_CONNECTED;\n    // message handling continues in 'message' handler\n    // the first message is assumed to be registration data\n  });\n  NETWORK.AddListener(\"close\", function(event) {\n    if (DBG.connect) console.log(PR, \"..CLOSE\", event.target.url);\n    NetMessage.GlobalOfflineMode();\n    m_status = M_STANDALONE;\n  });\n  // handle socket errors\n  NETWORK.AddListener(\"error\", function(event) {\n    /*/ DSHACK: For Spring 2019, adding manifest support to try to\n        avoid rewriting the app with service workers\n    /*/\n    let appCache = window.applicationCache;\n    switch (appCache.status) {\n      case appCache.UNCACHED:\n        // this occurs if there is not a cached page\n        console.warn(WARN, \"ERROR opening command socket\", event);\n        throw Error(\"error with command socket\");\n        break;\n      case appCache.IDLE: /* falls-through */\n      case appCache.CHECKING: /* falls-through */\n      case appCache.DOWNLOADING: /* falls-through */\n      case appCache.UPDATEREADY: /* falls-through */\n      case appCache.OBSOLETE:\n        // this occurs\n        console.info(WARN, \"STANDALONE MODE. USING CACHED DATA\");\n        m_status = M_STANDALONE;\n        NetMessage.GlobalOfflineMode(); // deregister socket\n        // force promise to succeed\n        if (typeof m_options.success === \"function\") m_options.success();\n        break;\n      default:\n        m_status = M_NOCONNECT;\n        throw Error(\"unknown appcache status. dumping\", appCache);\n        break;\n    }\n  });\n  // handle incoming messages\n  NETWORK.AddListener(\"message\", m_HandleRegistrationMessage);\n}; // Connect()\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ After 'open' event, we expect the first message on the socket to contain\n    network session-related messages\n/*/\nfunction m_HandleRegistrationMessage(msgEvent) {\n  let regData = JSON.parse(msgEvent.data);\n  let { HELLO, UADDR } = regData;\n  // (1) after receiving the initial message, switch over to regular\n  // message handler\n  NETWORK.RemoveListener(\"message\", m_HandleRegistrationMessage);\n  m_status = M3_REGISTERED;\n  // (2) initialize global settings for netmessage\n  if (DBG.connect) console.log(PR, `connected to ${UADDR}`, NETSOCK);\n  NETSOCK.ws.UADDR = NetMessage.DefaultServerUADDR();\n  NetMessage.GlobalSetup({ uaddr: UADDR, netsocket: NETSOCK.ws });\n  // (3) connect regular message handler\n  NETWORK.AddListener(\"message\", m_HandleMessage);\n  m_status = M4_READY;\n  // (4) network is initialized\n  if (typeof m_options.success === \"function\") m_options.success();\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_HandleMessage(msgEvent) {\n  let pkt = new NetMessage(msgEvent.data);\n  let msg = pkt.Message();\n  if (pkt.IsOwnResponse()) {\n    if (DBG.handle) console.log(PR, \"completing transaction\", msg);\n    pkt.CompleteTransaction();\n    return;\n  }\n  let data = pkt.Data();\n  let type = pkt.Type();\n  let dbgout = DBG.handle && !msg.startsWith(\"SRV_\");\n  /// otherwise, incoming invocation from network\n  switch (type) {\n    case \"state\":\n      if (dbgout) console.log(PR, \"received state change\", msg);\n      break;\n    case \"msig\":\n      if (dbgout) {\n        console.warn(\n          PR,\n          `ME_${NetMessage.SocketUADDR()} received msig '${msg}' from ${pkt.SourceAddress()}`,\n          data\n        );\n      }\n      UDATA.LocalSignal(msg, data);\n      pkt.ReturnTransaction();\n      break;\n    case \"msend\":\n      if (dbgout) {\n        console.warn(\n          PR,\n          `ME_${NetMessage.SocketUADDR()} received msend '${msg}' from ${pkt.SourceAddress()}`,\n          data\n        );\n      }\n      UDATA.LocalSend(msg, data);\n      pkt.ReturnTransaction();\n      break;\n    case \"mcall\":\n      if (dbgout) {\n        console.warn(\n          PR,\n          `ME_${NetMessage.SocketUADDR()} received mcall '${msg}' from ${pkt.SourceAddress()}`\n        );\n      }\n      UDATA.LocalCall(msg, data).then(result => {\n        if (dbgout) {\n          console.log(\n            `ME_${NetMessage.SocketUADDR()} forwarded '${msg}', returning ${JSON.stringify(\n              result\n            )}`\n          );\n        }\n        // now return the packet\n        pkt.SetData(result);\n        pkt.ReturnTransaction();\n      });\n      break;\n    default:\n      throw Error(\"unknown packet type\", type);\n  }\n}\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Send a packet on socket connection, assuming it is valid\n/*/\nNETWORK.Send = function(pkt) {\n  if (!(pkt instanceof NetMessage)) throw Error(ERR_NM_REQ);\n  if (NETSOCK.ws.readyState === 1) {\n    let json = pkt.JSON();\n    if (DBG) console.log(\"SENDING\", pkt.Message(), pkt.Data(), pkt.SeqNum());\n    NETSOCK.ws.send(json);\n  } else {\n    console.log(\"Socket not ReadyState 1, is\", NETSOCK.ws.readyState);\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Send a packet on socket connection, return Promise\n/*/\nNETWORK.Call = function(pkt) {\n  if (!(pkt instanceof NetMessage)) throw Error(ERR_NM_REQ);\n  if (NETSOCK.ws.readyState === 1) {\n    let json = pkt.JSON();\n    if (DBG) console.log(\"CALLING\", pkt.Message(), json);\n    NETSOCK.ws.send(json);\n  } else {\n    console.log(\"Socket not ReadyState 1, is\", NETSOCK.ws.readyState);\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Force close of connection, for example if UNISYS.AppReady() fails\n/*/\nNETWORK.Close = function(code, reason) {\n  code = code || 1000;\n  reason = reason || \"unisys forced close\";\n  NETSOCK.ws.close(code, reason);\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nNETWORK.AddListener = function(event, handlerFunction) {\n  if (NETSOCK.ws instanceof WebSocket) {\n    NETSOCK.ws.addEventListener(event, handlerFunction);\n  } else {\n    throw Error(ERR_NO_SOCKET);\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nNETWORK.RemoveListener = function(event, handlerFunction) {\n  if (NETSOCK.ws instanceof WebSocket) {\n    NETSOCK.ws.removeEventListener(event, handlerFunction);\n  } else {\n    throw Error(ERR_NO_SOCKET);\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nNETWORK.LocalInfo = function() {\n  return NETCLIENT;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nNETWORK.ServerInfo = function() {\n  return NETSERVER;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nNETWORK.ServerSocketInfo = function() {\n  return NETSOCK;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nNETWORK.SocketUADDR = function() {\n  return NetMessage.SocketUADDR();\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nNETWORK.IsStandaloneMode = function() {\n  return m_status === M_STANDALONE;\n};\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NETWORK;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Add UNISYS functions to REACT component to hide UDATA and UMODULE details\n  To use, extend components from UNISYS.Component instead of REACT.Component\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst React     = require('react');\nconst UDATA     = require('unisys/client-datalink-class');\nconst UMODULE   = require('unisys/client-module-class');\nconst REFLECT   = require('system/util/reflection');\n\n/// CLASS DECLARATION /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet UnisysComponent = class extends React.Component {\n  constructor() {\n    super();\n    this.UMODULE = new UMODULE(module.id);\n    this.UDATA = new UDATA(this.UMODULE);\n  }\n\n  /// MESSAGE HANDLING API METHODS\n  HandleMessage( m, lis ) { this.UDATA.HandleMessage(m,lis) }\n  UnhandleMessage( m, lis ) { f_deprecated('DropMessage'); this.UDATA.UnhandleMessage(m,lis) }\n  DropMessage( m, lis ) { this.UDATA.UnhandleMessage(m,lis) }\n\n  /// SPECIAL EVENTS\n  OnDOMReady( lis ) { this.UMODULE.Hook('DOM_READY',lis) }\n  OnReset( lis ) { this.UMODULE.Hook('RESET',lis) }\n  OnStart( lis ) { this.UMODULE.Hook('START',lis) }\n  OnAppReady( lis ) { this.UMODULE.Hook('APP_READY',lis) }\n  OnRun( lis ) { this.UMODULE.Hook('RUN',lis) }\n\n  /// MESSAGE INVOCATION API METHODS\n  Call( m, d, o ) { return this.UDATA.Call(m,d,o) }\n  Send( m, d, o ) { this.UDATA.Send(m,d,o) }\n  Signal( m, d, o ) { this.UDATA.Signal(m,d,o) }\n  AppCall( m, d, o ) { return this.UDATA.LocalCall(m,d,o) }\n  AppSend( m, d, o ) { this.UDATA.LocalSend(m,d,o) }\n  AppSignal( m, d, o ) { this.UDATA.LocalSignal(m,d,o) }\n  NetSend( m, d, o ) { this.UDATA.NetSend(m,d,o) }\n  NetCall( m, d, o ) { return this.UDATA.NetCall(m,d,o) }\n  NetSignal( m, d, o ) { this.UDATA.NetSignal(m,d,o) }\n  LocalCall( m, d, o ) { f_deprecated('AppCall'); return this.UDATA.LocalCall(m,d,o) }\n  LocalSend( m, d, o ) { f_deprecated('AppSend'); this.UDATA.LocalSend(m,d,o) }\n  LocalSignal( m, d, o ) { f_deprecated('AppSignal'); this.UDATA.LocalSignal(m,d,o) }\n  /// STATE API METHODS\n  State( ns ) { f_deprecated('AppState'); return this.AppState(ns) }\n  SetState( ns, so ) { f_deprecated('SetAppState'); this.SetAppState(ns,so) }\n  OnStateChange( ns, lis ) { f_deprecated('OnAppStateChange'); this.OnAppStateChange(ns,lis) }\n  OffStateChange( ns, lis ) { f_deprecated('AppStateChangeOff'); this.AppStateChangeOff(ns,lis) }\n  /// NEW STATE API METHODS\n  AppState( ns ) { return this.UDATA.AppState(ns) }\n  SetAppState( ns, so ) { this.UDATA.SetAppState(ns,so) }\n  OnAppStateChange( ns, lis ) { this.UDATA.OnAppStateChange(ns,lis) }\n  AppStateChangeOff( ns, lis ) { this.UDATA.AppStateChangeOff(ns,lis) }\n  NetState( ns ) { f_unimplemented() }\n  SetNetState( ns, so ) { f_unimplemented() }\n  OnNetStateChange( ns, lis ) { f_unimplemented() }\n  NetStateChangeOff( ns, lis ) { f_unimplemented() }\n  /// LIFECYCLE API\n  Hook( p, f ) { f_unsupported('is not available for UNISYS.Component') }\n\n} // UnisysComponent\n\nfunction f_deprecated(repl) {\n  let out = `${REFLECT.FunctionName(2)} is deprecated.`;\n  if (typeof repl==='string') out+=` Use ${repl}() instead.`;\n  console.warn(out);\n}\n\nfunction f_unimplemented() {\n  let out = `${REFLECT.FunctionName(2)} is not yet implemented.`;\n  alert(`${out}\\n\\nCrashing now! Use javascript console to debug`);\n  console.error(out);\n  debugger;\n}\n\nfunction f_unsupported(reason) {\n  let out = `${REFLECT.FunctionName(2)} ${reason}`;\n  alert(`${out}\\n\\nCrashing now! Use javascript console to debug`);\n  console.error(out);\n  debugger;\n}\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = UnisysComponent;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    UNISYS STATE CLASS\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst DBG         = false;\nconst BAD_NSPACE  = \"namespace must be string without _ chars\";\nconst BAD_LISTENR = \"listener must be function\";\nconst NO_UID_FLTR = \"UNISYS.OnStateChange: pass DST_UID parameter to enable echo cancellation\";\nconst WARN_PROP_MISMATCH = \"MergeState is changing a property type\";\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst REACT       = require('react');\nconst TYPEOF      = require('type-detect');\nconst Messager    = require('unisys/client-messager-class');\n\n/// MODULE DECLARATIONS ///////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar USTATE        = {};\nvar STATES        = new Map(); // namespace str => shallow state object\nvar STATES_LISTEN = new Map(); // namespace str => emitter\n\n/// STATE /////////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ UNISYS namespaces are transformed to uppercase.\n    A namespace must be a string that does not contain reserved char '_'\n/*/ function m_ConformNamespace( namespace ) {\n      // must be a string\n      if (typeof namespace!=='string') return undefined;\n      // disallow empty string\n      if (!namespace) return undefined;\n      // always uppercase\n      namespace = namespace.toUpperCase();\n      // expand * shortcut to _ROOT\n      if (namespace==='*') return '_ROOT';\n      // disallow _ reserved names\n      if (namespace.indexOf('_')>(-1)) return undefined;\n      // ok we're good\n      return namespace;\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Used for merging and concatenating state, when a simple copy-overwrite\n    simply will not do.\n/*/ function m_ConformState( namespace, newState, opt ) {\n      opt = opt || { merge : true };\n      // make a copy of the old state\n      let state = Object.assign({},STATES.get(namespace));\n      if (DBG) console.log(`merging state namespace '${namespace}' with`,newState);\n\n      // iterate over all properties in newState and merge them\n      // accordingly. This is *NOT* a deep merge.\n      Object.entries(newState).forEach( (entry) => {\n        let k = entry[0];     // current prop name in newstate\n        let v = entry[1];     // current prop value in newstate\n        let prop = state[k],  // old prop value\n            nprop = v,        // new prop value\n            t_old,            // type to be filled-in\n            t_new;\n\n        // use type-detect library to get type\n        t_old = TYPEOF(prop);\n        t_new = TYPEOF(nprop);\n\n        // A BUNCH OF SPECIAL CASE CHECKS //\n        if ((t_old==='undefined') || (t_old==='null')) {\n          // if the value doesn't exist in current state\n          // just update with new prop\n          prop = nprop;\n        } else if (t_old===t_new) {\n          // if there is a type match, then figure\n          // out how to merge based on type\n          switch (t_old) {\n            case 'Object':\n              if (DBG) console.log(`merge objects`);\n              // merge object props\n              prop = Object.assign(prop,nprop);\n              break;\n            case 'Array': // note uppercase (type-detect)\n              if (DBG) console.log(`merge arrays`);\n              // merge arrays no dupes (https://stackoverflow.com/a/36469404)\n              // ES6 fanciness using destructuring (...) and Sets\n              if (opt.merge) prop = [...new Set([...prop ,...nprop])];\n              else if (opt.concat) prop = prop.concat(nprop);\n              break;\n            default:\n              if (DBG) console.log(`copy values`);\n              // just overwrite otherwise\n              prop = nprop;\n          } // end switch t_old\n        } else {\n          // if there is a type mismatch, write\n          console.warn(`${WARN_PROP_MISMATCH} key:${k}\\n type '${t_new}' overwriting '${t_old}'`);\n          prop = nprop;\n        }\n        // update state place\n        state[k] = prop;\n      }); // end Object.entries\n\n      return state;\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Retrieve the emitter associated with a namespace, which contains handles\n    all the listeners associated with a namespace. Always returns a valid\n    emitter, creating it if the passed namespace is valid.\n/*/ function m_GetStateMessager (nspace) {\n      nspace = m_ConformNamespace(nspace);\n      if (!nspace) throw Error(BAD_NSPACE);\n      let msgr = STATES_LISTEN.get(nspace);\n      if (!msgr) {\n        msgr = new Messager();\n        STATES_LISTEN.set(nspace,msgr);\n      }\n      return msgr;\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: update the selected namespace state with new state\n/*/ USTATE.SetState = (namespace, newState, src_uid) => {\n      namespace = m_ConformNamespace(namespace);\n      if (!namespace) throw Error(BAD_NSPACE);\n      // update old state by partially overwrite of state\n      if (!STATES.has(namespace)) STATES.set(namespace,{});\n      Object.assign(STATES.get(namespace),newState);\n      // forward new state to namespace listeners\n      let msgr = m_GetStateMessager(namespace);\n      // don't pass with source_id because state should go everywhere\n      // a register exists, even if it's the originating module\n      msgr.Send(namespace,newState,{type:'state',toLocal:true, toNet:false});\n      // future: forward also to network\n    };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: merge objects and arrays in state\n/*/ USTATE.MergeState = (namespace, newState, src_uid) => {\n      namespace = m_ConformNamespace(namespace);\n      if (!namespace) throw Error(BAD_NSPACE);\n      // update old state by partially overwrite of state\n      if (!STATES.has(namespace)) STATES.set(namespace,{});\n\n      // merge the states with no duplicates in arrays\n      let state = m_ConformState(namespace, newState, { merge : true });\n\n      // update the namespace\n      STATES.set(namespace,state);\n\n      // forward new state to namespace listeners\n      let msgr = m_GetStateMessager(namespace);\n      // don't pass with source_id because state should go everywhere\n      // a register exists, even if it's the originating module\n      msgr.Send(namespace,newState,{type:'state',toLocal:true, toNet:false});\n      // future: forward also to network\n    };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: merge objects and concat arrays in state\n/*/ USTATE.ConcatState = (namespace, newState, src_uid) => {\n      namespace = m_ConformNamespace(namespace);\n      if (!namespace) throw Error(BAD_NSPACE);\n      // update old state by partially overwrite of state\n      if (!STATES.has(namespace)) STATES.set(namespace,{});\n\n      // merge the states with no duplicates in arrays\n      let state = m_ConformState(namespace, newState, { concat : true });\n\n      // update the namespace\n      STATES.set(namespace,state);\n\n      // forward new state to namespace listeners\n      let msgr = m_GetStateMessager(namespace);\n      // don't pass with source_id because state should go everywhere\n      // a register exists, even if it's the originating module\n      msgr.Send(namespace,newState,{type:'state',toLocal:true, toNet:false});\n      // future: forward also to network\n    };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: retrieve a COPY of state object of namespace\n/*/ USTATE.State = (namespace) => {\n      namespace = m_ConformNamespace(namespace);\n      if (!namespace) throw Error(BAD_NSPACE);\n      return Object.assign({},STATES.get(namespace));\n    };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: subscribe to namestate updates\n/*/ USTATE.OnStateChange = (namespace, listener, src_uid) => {\n      namespace = m_ConformNamespace(namespace);\n      if (!namespace) throw Error(BAD_NSPACE);\n      if (typeof listener!=='function') throw Error(BAD_LISTENR);\n      if (src_uid===undefined) console.warn(NO_UID_FLTR);\n      let namespaceMessager = m_GetStateMessager(namespace);\n      namespaceMessager.HandleMessage(namespace,listener,{handlerUID:src_uid});\n    };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: unsubscribe to namestate updates\n/*/ USTATE.OffStateChange = (namespace, listener) => {\n      namespace = m_ConformNamespace(namespace);\n      if (!namespace) throw Error(BAD_NSPACE);\n      if (typeof listener!=='function') throw Error(BAD_LISTENR);\n      let namespaceMessager = m_GetStateMessager(namespace);\n      namespaceMessager.UnhandleMessage(namespace,listener);\n    };\n\n\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = USTATE;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    This is the main browser client UNISYS module, which implements:\n\n      LIFECYCLE - a promise-based hooked run order system\n      MESSAGING - a networked remote procedure call/event system\n      STATE     - a networked global application state system\n\n    UNISYS is designed to work with React or our own module system:\n    for modules:\n      UMOD = UNISYS.NewModule()\n      UDATA = UNISYS.NewDataLink(UMOD)\n    for React:\n      COMPONENT = class MyComponent extends UNISYS.Component\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst DBG = {\n  hook: false\n};\n\n/// CLASSES ///////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst UniData = require(\"unisys/client-datalink-class\");\nconst UniModule = require(\"unisys/client-module-class\");\nconst UniComponent = require(\"unisys/client-react-component\");\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst SETTINGS = require(\"settings\");\nconst LIFECYCLE = require(\"unisys/client-lifecycle\");\nconst STATE = require(\"unisys/client-state\");\nconst NETWORK = require(\"unisys/client-network\");\nconst PROMPTS = require(\"system/util/prompts\");\nconst PR = PROMPTS.Pad(\"UNISYS\");\n\n/// INITIALIZE MAIN MODULE ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar UNISYS = new UniModule(module.id);\nvar UDATA = new UniData(UNISYS);\n\n/// UNISYS MODULE MAKING //////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: Make new module with UNISYS convenience methods\n/*/ UNISYS.NewModule = uniqueName => {\n  return new UniModule(uniqueName);\n};\n\n/// UNISYS CONNECTOR //////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: Make new module with UNISYS convenience methods\n/*/ UNISYS.NewDataLink = (\n  module,\n  optName\n) => {\n  return new UniData(module, optName);\n};\n\n/// UNISYS MESSAGE REGISTRATION ///////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nUNISYS.RegisterMessagesPromise = (messages = []) => {\n  if (NETWORK.IsStandaloneMode()) {\n    console.warn(PR,\"STANDALONE MODE: RegisterMessagesPromise() suppressed!\");\n    return Promise.resolve();\n  }\n  if (messages.length) {\n    try {\n      messages = UniData.ValidateMessageNames(messages);\n    } catch (e) {\n      console.error(e);\n    }\n  } else {\n    messages = UniData.MessageNames();\n  }\n  return new Promise((resolve, reject) => {\n    UDATA.Call(\"SRV_REG_HANDLERS\", { messages }).then(data => {\n      resolve(data);\n    });\n  });\n};\n\n/// LIFECYCLE METHODS /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: LIFECYCLE Hook() functions\n/*/\nUNISYS.Hook = (phase, f) => {\n  if (typeof phase !== \"string\") throw Error(\"arg1 is phase as string\");\n  if (typeof f !== \"function\") throw Error(\"arg2 is function callback\");\n  LIFECYCLE.Hook(phase, f, UNISYS.ModuleID()); // pass phase and hook function\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: System Initialize\n/*/\nUNISYS.SystemInitialize = module_id => {\n  UNISYS.SetScope(module_id);\n  SETTINGS.ForceReloadSingleApp();\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API HELPER: LIFECYCLE Scope() functions\n    The 'scope' is used by LIFECYCLE to determine what modules implementing\n    various HOOKS will be called. The root_module_id is a path that will\n    be considered the umbrella of \"allowed to hook\" modules. For REACT apps,\n    this is the root directory of the root view component. Additionally,\n    the unisys and system directories are allowed to run their hooks\n/*/ UNISYS.SetScope = root_module_id => {\n  LIFECYCLE.SetScope(root_module_id); // pass phase and hook function\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API HELPER: SETTINGS ForceReloadSingleApp\n    checks to see if settings flag is \"dirty\"; if it is, then reload the\n    location to ensure no linger apps are running in the background. Yes\n    this is a bit of a hack.\n/*/\nUNISYS.ForceReloadOnNavigation = () => {\n  SETTINGS.ForceReloadOnNavigation();\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API HELPER: return TRUE if passed module.id is within the current set\n    scope\n/*/\nUNISYS.InScope = module_id => {\n  let currentScope = LIFECYCLE.Scope();\n  return module_id.includes(currentScope);\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: application startup\n/*/\nUNISYS.EnterApp = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      await LIFECYCLE.Execute(\"TEST_CONF\"); // TESTCONFIG hook\n      await LIFECYCLE.Execute(\"INITIALIZE\"); // INITIALIZE hook\n      await LIFECYCLE.Execute(\"LOADASSETS\"); // LOADASSETS hook\n      await LIFECYCLE.Execute(\"CONFIGURE\"); // CONFIGURE support modules\n      resolve();\n    } catch (e) {\n      console.error(\n        \"EnterApp() Lifecycle Error. Check phase execution order effect on data validity.\\n\",\n        e\n      );\n      debugger;\n    }\n  });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: call this when the view system's DOM has stabilized and is ready\n    for manipulation by other code\n/*/\nUNISYS.SetupDOM = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      await LIFECYCLE.Execute(\"DOM_READY\"); // GUI layout has finished composing\n      resolve();\n    } catch (e) {\n      console.error(\n        \"SetupDOM() Lifecycle Error. Check phase execution order effect on data validity.\\n\",\n        e\n      );\n      debugger;\n    }\n  });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: network startup\n/*/\nUNISYS.JoinNet = () => {\n  return new Promise((resolve, reject) => {\n    try {\n      NETWORK.Connect(UDATA, { success: resolve, failure: reject });\n    } catch (e) {\n      console.error(\n        \"EnterNet() Lifecycle Error. Check phase execution order effect on data validity.\\n\",\n        e\n      );\n      debugger;\n    }\n  });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: configure system before run\n/*/\nUNISYS.SetupRun = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      await LIFECYCLE.Execute(\"RESET\"); // RESET runtime datastructures\n      await LIFECYCLE.Execute(\"START\"); // START running\n      await LIFECYCLE.Execute(\"APP_READY\"); // tell network APP_READY\n      await LIFECYCLE.Execute(\"RUN\"); // tell network APP_READY\n      resolve();\n    } catch (e) {\n      console.error(\n        \"SetupRun() Lifecycle Error. Check phase execution order effect on data validity.\\n\",\n        e\n      );\n      debugger;\n    }\n  });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: handle periodic updates for a simulation-driven timestep\n/*/\nUNISYS.Run = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      await LIFECYCLE.Execute(\"UPDATE\");\n      resolve();\n    } catch (e) {\n      console.error(e);\n    }\n  });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: do the Shutdown lifecycle\n    NOTE ASYNC ARROW FUNCTION (necessary?)\n/*/\nUNISYS.BeforePause = () => {\n  return new Promise(async (resolve, reject) => {\n    await LIFECYCLE.Execute(\"PREPAUSE\");\n    resolve();\n  });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: do the Shutdown lifecycle\n    NOTE ASYNC ARROW FUNCTION (necessary?)\n/*/\nUNISYS.Paused = () => {\n  return new Promise(async (resolve, reject) => {\n    await LIFECYCLE.Execute(\"PAUSE\");\n    resolve();\n  });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: do the Shutdown lifecycle\n    NOTE ASYNC ARROW FUNCTION (necessary?)\n/*/\nUNISYS.PostPause = () => {\n  return new Promise(async (resolve, reject) => {\n    await LIFECYCLE.Execute(\"POSTPAUSE\");\n    resolve();\n  });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: do the Shutdown lifecycle\n    NOTE ASYNC ARROW FUNCTION (necessary?)\n/*/\nUNISYS.CleanupRun = () => {\n  return new Promise(async (resolve, reject) => {\n    await LIFECYCLE.Execute(\"STOP\");\n    resolve();\n  });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: application offline\n    NOTE ASYNC ARROW FUNCTION (necessary?)\n/*/\nUNISYS.ServerDisconnect = () => {\n  return new Promise(async (resolve, reject) => {\n    await LIFECYCLE.Execute(\"DISCONNECT\");\n    resolve();\n  });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: application shutdown\n    NOTE ASYNC ARROW FUNCTION (necessary?)\n/*/\nUNISYS.ExitApp = () => {\n  return new Promise(async (resolve, reject) => {\n    await LIFECYCLE.Execute(\"UNLOADASSETS\");\n    await LIFECYCLE.Execute(\"SHUTDOWN\");\n    resolve();\n  });\n};\n\n/// NETWORK INFORMATION ///////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ return the current connected Socket Address (e.g. UADDR_12)\n/*/\nUNISYS.SocketUADDR = () => {\n  return NETWORK.SocketUADDR();\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nUNISYS.IsStandaloneMode = () => {\n  return NETWORK.IsStandaloneMode();\n}\n\n/// DATA LOGGING //////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ send a logging message\n/*/\nUNISYS.Log = (event, ...items) => {\n  if (typeof event !== \"string\") {\n    console.error(\"UNISYS.Log( 'eventString', value, value, value... )\");\n  }\n  UDATA.NetSignal(\"SRV_LOG_EVENT\", { event, items });\n};\n\n/// REACT INTEGRATION /////////////////////////////////////////////////////////\n/*/ return the referene to the UNISYS extension of React.Component\n/*/\nUNISYS.Component = UniComponent;\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = UNISYS;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    Store common system definitions here between client and server modules.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst DBG         = true;\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar   DEFS = {};\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = DEFS;\n","/** NetMessage ****************************************************************\\\n\n  NetMessage objects are sent between the browser and server as part of the\n  UNISYS messaging system. Unlike NetMessages of the previous version of STEP,\n  a NetMessage does not require addressing since the SERVER distributes\n  messages to UNISYS addresses that have registered for them.\n\n  The NetMessage declaration is SHARED in both node and browser javascript\n  codebases.\n\n  NetMessages also provide the data context for \"transactions\" of calls.\n  The netmessage_id and data packet are used by the originating webapp\n  to remember a sequence of callback functions. When a NetMessage is\n  received with a seq_num > 0, it's assumed to be a return transaction,\n  and its callback chain can be invoked. The data is forwarded to the\n  callback. For more details, see the CallSequence class that manages\n  the passing of data.\n\n////////////////////////////////////////////////////////////////////////////////\n/** MODULE DECLARATIONS *******************************************************/\n\nconst DBG = { send: false, transact: false };\n\nvar m_id_counter = 0;\nvar m_id_prefix = \"PKT\";\nvar m_transactions = {};\nvar m_netsocket = null;\nvar m_group_id = null;\n\nconst M_INIT = \"init\";\nconst M_ONLINE = \"online\";\nconst M_STANDALONE = \"offline\";\nconst M_CLOSED = \"closed\";\nconst M_ERROR = \"error\";\nvar m_mode = M_INIT;\n\n// constants\nconst PROMPTS = require(\"../system/util/prompts\");\nconst PR = PROMPTS.Pad(\"PKT\");\nconst ERR = \":ERR:\";\nconst ERR_NOT_NETMESG = ERR + PR + \"obj does not seem to be a NetMessage\";\nconst ERR_BAD_PROP = ERR + PR + \"property argument must be a string\";\nconst ERR_ERR_BAD_CSTR = ERR + PR + \"constructor args are string, object\";\nconst ERR_BAD_SOCKET = ERR + PR + \"sender object must implement send()\";\nconst ERR_DUPE_TRANS =\n  ERR + PR + \"this packet transaction is already registered!\";\nconst ERR_NO_GLOB_UADDR =\n  ERR + PR + \"packet sending attempted before UADDR is set!\";\nconst ERR_UNKNOWN_TYPE = ERR + PR + \"packet type is unknown:\";\nconst ERR_NOT_PACKET = ERR + PR + \"passed object is not a NetMessage\";\nconst ERR_UNKNOWN_RMODE = ERR + PR + \"packet routine mode is unknown:\";\nconst KNOWN_TYPES = [\"msend\", \"msig\", \"mcall\", \"state\"];\nconst ROUTING_MODE = [\"req\", \"res\"];\n\n/// UNISYS NETMESSAGE CLASS ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ A UNetMessage encapsulates a specific message and data payload for sending\n    across the network.\n/*/\nclass NetMessage {\n  constructor(msg, data, type) {\n    // OPTION 1\n    // create NetMessage from (generic object)\n    if (typeof msg === \"object\" && data === undefined) {\n      // make sure it has a msg and data obj\n      if (typeof msg.msg !== \"string\" || typeof msg.data !== \"object\") {\n        throw ERR_NOT_NETMESG;\n      }\n      // merge properties into this new class instance and return it\n      Object.assign(this, msg);\n      m_SeqIncrement(this);\n      return this;\n    }\n    // OPTION 2\n    // create NetMessage from JSON-encoded string\n    if (typeof msg === \"string\" && data === undefined) {\n      let obj = JSON.parse(msg);\n      Object.assign(this, obj);\n      m_SeqIncrement(this);\n      return this;\n    }\n    // OPTION 3\n    // create new NetMessage from scratch (mesg,data)\n    // unique id for every NetMessage\n    if (typeof type === \"string\") m_CheckType(type);\n    if (typeof msg !== \"string\" || typeof data !== \"object\") {\n      throw ERR_ERR_BAD_CSTR;\n    }\n    // allow calls with null data by setting to empty object\n    this.data = data || {};\n    this.msg = msg;\n    // id and debugging memo support\n    this.id = this.MakeNewID();\n    this.rmode = ROUTING_MODE[0]; // is default 't_req' (trans request)\n    this.type = type || KNOWN_TYPES[0]; // is default 'msend' (no return)\n    this.memo = \"\";\n    // transaction support\n    this.seqnum = 0; // positive when part of transaction\n    this.seqlog = []; // transaction log\n    // addressing support\n    this.s_uaddr = NetMessage.SocketUADDR() || null; // first originating uaddr set by SocketSend()\n    this.s_group = null; // session groupid is set by external module once validated\n    this.s_uid = null; // first originating UDATA srcUID\n    // filtering support\n  } // constructor\n\n  /// ACCESSSOR METHODS ///////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ returns the type\n  /*/\n  Type() {\n    return this.type;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ returns true if type matches\n  /*/\n  IsType(type) {\n    return this.type === type;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ returns the type\n  /*/\n  SetType(type) {\n    this.type = m_CheckType(type);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ returns the message\n  /*/\n  Message() {\n    return this.msg;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ sets the message field\n  /*/\n  SetMessage(msgstr) {\n    this.msg = msgstr;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ returns the entire data payload or the property within the data payload\n      (can return undefined if property doesn't exist)\n  /*/\n  Data(prop) {\n    if (!prop) return this.data;\n    if (typeof prop === \"string\") return this.data[prop];\n    throw ERR_BAD_PROP;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ convenience method to set data object entirely\n  /*/\n  SetData(propOrVal, val) {\n    if (typeof propOrVal === \"object\") {\n      this.data = propOrVal;\n      return;\n    }\n    if (typeof propOrVal === \"string\") {\n      this.data[propOrVal] = val;\n      return;\n    }\n    throw ERR_BAD_PROP;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ returns truthy value (this.data) if the passed msgstr matches the\n      message associated with this NetMessage\n  /*/\n  Is(msgstr) {\n    return msgstr === this.msg ? this.data : undefined;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ convenience function return true if server message\n  /*/\n  IsServerMessage() {\n    return this.msg.startsWith(\"SRV_\");\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ getter/setter for the memo description field\n  /*/\n  Memo() {\n    return this.memo;\n  }\n  SetMemo(memo) {\n    this.memo = memo;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ convenience function to return JSON version of this object\n  /*/\n  JSON() {\n    return JSON.stringify(this);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ return the session groupid (CLASS-PROJ-HASH) that's been set globally\n  /*/\n  SourceGroupID() {\n    return this.s_group;\n  }\n\n  /// TRANSACTION SUPPORT /////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ The sequence number is positive if this packet is reused\n  /*/\n  SeqNum() {\n    return this.seqnum;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ Return the originating address of this netmessage packet. It is valid\n      only after the packet has been sent at least once.\n  /*/\n  SourceAddress() {\n    // is this packet originating from server to a remote?\n    if (\n      this.s_uaddr === NetMessage.DefaultServerUADDR() &&\n      !this.msg.startsWith(\"SVR_\")\n    ) {\n      return this.s_uaddr;\n    }\n    // this is a regular message forward to remote handlers\n    return this.IsTransaction() ? this.seqlog[0] : this.s_uaddr;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  CopySourceAddress(pkt) {\n    if (pkt.constructor.name !== \"NetMessage\") throw Error(ERR_NOT_PACKET);\n    this.s_uaddr = pkt.SourceAddress();\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ return an informational string about the packet useful for logging\n  /*/\n  Info(key) {\n    switch (key) {\n      case \"src\": /* falls-through */\n      default:\n        return this.SourceGroupID()\n          ? `${this.SourceAddress()} [${this.SourceGroupID()}]`\n          : `${this.SourceAddress()}`;\n    }\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  MakeNewID() {\n    let idStr = (++m_id_counter).toString();\n    this.id = m_id_prefix + idStr.padStart(5, \"0\");\n    return this.id;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ Send packet on either provided socket or default socket. Servers provide\n      the socket because it's handling multiple sockets from different clients.\n  /*/\n  SocketSend(socket = m_netsocket) {\n    if (m_mode === M_ONLINE || m_mode === M_INIT) {\n      this.s_group = NetMessage.GlobalGroupID();\n      let dst = socket.UADDR || \"unregistered socket\";\n      if (!socket) throw Error(\"SocketSend(sock) requires a valid socket\");\n      if (DBG.send) {\n        let status = `sending '${this.Message()}' to ${dst}`;\n        console.log(PR, status);\n      }\n      // for server-side ws library, send supports a function callback\n      // for WebSocket, this is ignored\n      socket.send(this.JSON(),(err) => {\n        if (err) console.error(`\\nsocket ${socket.UADDR} reports error ${err}\\n`);\n      });\n    } else if (m_mode !== M_STANDALONE) {\n      console.log(\n        PR,\n        \"SocketSend: Can't send because NetMessage mode is\",\n        m_mode\n      );\n    } else {\n      console.warn(\n        PR,\n        \"STANDALONE MODE: SocketSend() suppressed!\"\n      );\n    }\n    // FYI: global m_netsocket is not defined on server, since packets arrive on multiple sockets\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ Create a promise to resolve when packet returns\n  /*/\n  QueueTransaction(socket = m_netsocket) {\n    if (m_mode === M_STANDALONE) {\n      console.warn(PR, \"STANDALONE MODE: QueueTransaction() suppressed!\");\n      return Promise.resolve();\n    }\n    // global m_netsocket is not defined on server, since packets arrive on multiple sockets\n    if (!socket) throw Error(\"QueueTransaction(sock) requires a valid socket\");\n    // save our current UADDR\n    this.seqlog.push(NetMessage.UADDR);\n    let dbg = DBG.transact && !this.IsServerMessage();\n    let p = new Promise((resolve, reject) => {\n      var hash = m_GetHashKey(this);\n      if (m_transactions[hash]) {\n        reject(Error(ERR_DUPE_TRANS + \":\" + hash));\n      } else {\n        // save the resolve function in transactions table;\n        // promise will resolve on remote invocation with data\n        m_transactions[hash] = function(data) {\n          if (dbg) {\n            console.log(PR, \"resolving promise with\", JSON.stringify(data));\n          }\n          resolve(data);\n        };\n        this.SocketSend(socket);\n      }\n    });\n    return p;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ return the 'routing mode':\n        req/res is request/reply (message requests and optional response)\n        f_req/f_res is forwarded request/reply (forwarded messages and optional return)\n        the f_res is converted to res and sent back to original requester\n  /*/\n  RoutingMode() {\n    return this.rmode;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  IsRequest() {\n    return this.rmode === \"req\";\n  }\n  IsOwnResponse() {\n    return this.rmode === \"res\";\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n  /*/ If this packet is a returned transaction, then return true\n  /*/\n  IsTransaction() {\n    return (\n      this.rmode !== ROUTING_MODE[0] &&\n      this.seqnum > 0 &&\n      this.seqlog[0] === NetMessage.UADDR\n    );\n  }\n  ///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/\tupdate the sequence metadata and return on same socket\n  /*/\n  ReturnTransaction(socket = m_netsocket) {\n    // global m_netsocket is not defined on server, since packets arrive on multiple sockets\n    if (!socket) throw Error(\"ReturnTransaction(sock) requires a valid socket\");\n    // note: seqnum is already incremented by the constructor if this was\n    // a received packet\n    // add this to the sequence log\n    this.seqlog.push(NetMessage.UADDR);\n    this.rmode = m_CheckRMode(\"res\");\n    this.SocketSend(socket);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ If this is a transaction packet that is returned, then execute the stored\n      resolver function from the promise stored in m_transactions, which will\n      then trigger .then() following any calls\n  /*/\n  CompleteTransaction() {\n    let dbg = DBG.transact && !this.IsServerMessage();\n    var hash = m_GetHashKey(this);\n    var resolverFunc = m_transactions[hash];\n    if (dbg) console.log(PR, \"CompleteTransaction\", hash);\n    if (typeof resolverFunc !== \"function\") {\n      throw Error(\n        `transaction [${hash}] resolverFunction is type ${typeof resolverFunc}`\n      );\n    } else {\n      resolverFunc(this.data);\n      Reflect.deleteProperty(m_transactions[hash]);\n    }\n  }\n} // class NetMessage\n\n/// STATIC CLASS METHODS //////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ set the NETWORK interface object that implements Send()\n    This class operates both under the server and the client.\n    This is a client feature.\n/*/\nNetMessage.GlobalSetup = function(config) {\n  let { netsocket, uaddr } = config;\n  if (uaddr) NetMessage.UADDR = uaddr;\n  // NOTE: m_netsocket is set only on clients since on server, there are multiple sockets\n  if (netsocket) {\n    if (typeof netsocket.send !== \"function\") throw ERR_BAD_SOCKET;\n    console.log(PR, \"GlobalSetup: netsocket set, mode online\");\n    m_netsocket = netsocket;\n    m_mode = M_ONLINE;\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ cleanup any allocated storage. This class operates both under the\n    server and the client. This is a client feature.\n/*/\nNetMessage.GlobalCleanup = function() {\n  if (m_netsocket) {\n    console.log(PR, \"GlobalCleanup: deallocating netsocket, mode closed\");\n    m_netsocket = null;\n    m_mode = M_CLOSED;\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ cleanup any allocated storage internally. This class operates both under the\n    server and the client. This is a client feature.\n/*/\nNetMessage.GlobalOfflineMode = function() {\n  m_mode = M_STANDALONE;\n  if (m_netsocket) {\n    console.warn(PR, \"STANDALONE MODE: NetMessage disabling network\");\n    m_netsocket = null;\n    let event = new CustomEvent(\"UNISYSDisconnect\", {});\n    console.log(\"dispatching event to\", document, event);\n    document.dispatchEvent(event);\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ return the address (socket_id) assigned to this app instance\n/*/\nNetMessage.SocketUADDR = function() {\n  return NetMessage.UADDR;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Return a default server UADDR\n/*/\nNetMessage.DefaultServerUADDR = function() {\n  return \"SVR_01\";\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Return current SessionID string\n/*/\nNetMessage.GlobalGroupID = function() {\n  return m_group_id;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nNetMessage.GlobalSetGroupID = function(token) {\n  m_group_id = token;\n};\n\n/// PRIVATE CLASS HELPERS /////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ when a packet is reconstructed from an existing object or json string,\n    its sequence number is incremented, and the old source uaddr is pushed\n    onto the seqlog stack.\n/*/\nfunction m_SeqIncrement(pkt) {\n  pkt.seqnum++;\n  return pkt;\n}\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\treturn the hash used for storing transaction callbacks\n/*/\nfunction m_GetHashKey(pkt) {\n  let hash = `${pkt.SourceAddress()}:${pkt.id}`;\n  return hash;\n}\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ is this an allowed type? throw error if not\n/*/\nfunction m_CheckType(type) {\n  if (type === undefined) {\n    throw new Error(\"must pass a type string, not \" + type);\n  }\n  if (!KNOWN_TYPES.includes(type)) throw `${ERR_UNKNOWN_TYPE} '${type}'`;\n  return type;\n}\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ is this an allowed mode? throw error if not\n/*/\nfunction m_CheckRMode(mode) {\n  if (mode === undefined) {\n    throw new Error(\"must pass a mode string, not \" + mode);\n  }\n  if (!ROUTING_MODE.includes(mode)) throw `${ERR_UNKNOWN_RMODE} '${mode}'`;\n  return mode;\n}\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NetMessage;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    Session Utilities\n    collection of session-related data structures\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/// DEBUGGING /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\n//\nconst PROMPTS = require(\"../system/util/prompts\");\nconst PR = PROMPTS.Pad(\"SESSUTIL\");\n\n/// SYSTEM LIBRARIES //////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst HashIds = require(\"hashids\");\n\n/// MODULE DEFS ///////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet SESUTIL = {};\nconst HASH_ABET = \"ABCDEFGHIJKLMNPQRSTVWXYZ23456789\";\nconst HASH_MINLEN = 3;\nvar m_current_groupid = null;\n\n/// SESSION ///////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Given a token of form CLASS-PROJECT-HASHEDID, return an object\n    containing as many decoded values as possible. Check isValid for\n    complete decode succes. groupId is also set if successful\n/*/\nSESUTIL.DecodeToken = function(token) {\n  if (token === undefined) return {};\n  let tokenBits = token.split(\"-\");\n  let classId, projId, hashedId, groupId, subId, isValid;\n  // optimistically set valid flag to be negated on failure\n  isValid = true;\n  // check for superficial issues\n  if (token.substr(-1) === \"-\") {\n    isValid = false;\n  }\n  // token is of form CLS-PRJ-HASHEDID\n  // classId, etc will be partially set and returned\n  if (tokenBits[0]) classId = tokenBits[0].toUpperCase();\n  if (tokenBits[1]) projId = tokenBits[1].toUpperCase();\n  if (tokenBits[2]) hashedId = tokenBits[2].toUpperCase();\n  if (tokenBits[3]) subId = tokenBits[3].toUpperCase();\n  // initialize hashid structure\n  let salt = `${classId}${projId}`;\n  let hashids = new HashIds(salt, HASH_MINLEN, HASH_ABET);\n  // try to decode the groupId\n  groupId = hashids.decode(hashedId)[0];\n  // invalidate if groupId isn't an integer\n  if (!Number.isInteger(groupId)) {\n    if (DBG) console.error(\"invalid token\");\n    isValid = false;\n    groupId = 0;\n  }\n  // invalidate if groupId isn't non-negative integer\n  if (groupId < 0) {\n    if (DBG) console.error(\"decoded token, but value out of range <0\");\n    isValid = false;\n    groupId = 0;\n  }\n\n  // at this point groupId is valid (begins with ID, all numeric)\n  // check for valid subgroupId\n  if (subId) {\n    if (\n      subId.length > 2 &&\n      subId.indexOf(\"ID\") === 0 &&\n      /^\\d+$/.test(subId.substring(2))\n    ) {\n      if (DBG) console.log(\"detected subid\", subId.substring(2));\n      // subId contains a string \"ID<N>\" where <N> is an integer\n    } else {\n      // subId exists but didn't match subid format\n      if (DBG) console.log(\"invalid subId string\", subId);\n      isValid = false; // groupId is still valid,\n      subId = 0;\n    }\n  }\n\n  // if isValid is false, check groupId is 0 or subId is 0, indicating error\n  let decoded = { token, isValid, classId, projId, hashedId, groupId, subId };\n  return decoded;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Return TRUE if the token decodes into an expected range of values\n/*/\nSESUTIL.IsValidToken = function(token) {\n  let decoded = SESUTIL.DecodeToken(token);\n  return decoded && Number.isInteger(decoded.groupId);\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Returns a token string of form CLASS-PROJECT-HASHEDID\n    classId and projId should be short and are case-insensitive.\n    groupId must be a non-negative integer\n/*/\nSESUTIL.MakeToken = function(classId, projId, groupId) {\n  // type checking\n  if (typeof classId !== \"string\")\n    throw Error(`classId arg1 '${classId}' must be string`);\n  if (typeof projId !== \"string\")\n    throw Error(`projId arg2 '${projId}' must be string`);\n  if (classId.length < 1)\n    throw Error(`classId arg1 length should be 1 or more`);\n  if (projId.length < 1) throw Error(`projId arg2 length should be 1 or more`);\n  if (!Number.isInteger(groupId))\n    throw Error(`groupId arg3 '${groupId}' must be integer`);\n  if (groupId < 0) throw Error(`groupId arg3 must be non-negative integer`);\n  if (groupId > Number.MAX_SAFE_INTEGER)\n    throw Error(`groupId arg3 value exceeds MAX_SAFE_INTEGER`);\n  // initialize hashid structure\n  classId = classId.toUpperCase();\n  projId = projId.toUpperCase();\n  let salt = `${classId}${projId}`;\n  let hashids = new HashIds(salt, HASH_MINLEN, HASH_ABET);\n  let hashedId = hashids.encode(groupId);\n  return `${classId}-${projId}-${hashedId}`;\n};\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Set the global GROUPID, which is included in all NetMessage\n    packets that are sent to server.\n/*/\nSESUTIL.SetGroupID = function(token) {\n  let good = SESUTIL.DecodeToken(token).isValid;\n  if (good) m_current_groupid = token;\n  return good;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nSESUTIL.GroupID = function() {\n  return m_current_groupid;\n};\n\n/// EXPORT MODULE /////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = SESUTIL;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    SessionShell handles route-based parameters in ReactRouter and updates\n    the SESSION manager with pertinent information\n\n    The component stores the credentials\n      classId  : null,\n      projId   : null,\n      hashedId : null,\n      groupId  : null,\n      isValid  : false\n\n    render() calls one of the following depending on the state of\n    SESSION.DecodeToken( token ). It returns an object is isValid prop set.\n    The token is read from this.props.match.params.token, which is provided\n    by ReactRouter.\n\n      renderLoggedIn( decoded ) contains an object with the decoded properties\n      from the original string, and displays the login state\n\n      renderLogin() shows the login text field.\n\n    When text is changing in Login Field, this.handleChange() is called.\n    It gets the value and runs SESSION.DecodeToken() on it.\n    It then uses Unisys.SetAppState to set \"SESSION\" to the decoded value.\n    if a groupId is detected, then it forces a redirect.\n\n    TODO: if an invalid URL is entered, should reset\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/// DEBUGGING /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = true;\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst React = require(\"react\");\nconst PROMPTS = require(\"system/util/prompts\");\nconst SESSION = require(\"unisys/common-session\");\nconst PR = PROMPTS.Pad(\"SessionShell\");\nconst ReactStrap = require(\"reactstrap\");\nconst { InputGroup, InputGroupAddon, Button, Col, Row, Form, FormGroup, FormFeedback, Input, Label } = ReactStrap;\nconst { Redirect } = require(\"react-router-dom\");\nconst UNISYS = require(\"unisys/client\");\n\n/// CONSTANTS /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// these styles are copied from AutoComplete.css\nconst INPUT_STYLE = {\n  border: \"1px solid #aaa\",\n  fontFamily: \"Helvetica, sans-serif\",\n  fontWeight: 300,\n  fontSize: \"10px\",\n  textAlign: \"right\",\n  textTransform: \"uppercase\"\n};\nconst GROUP_STYLE = {\n  backgroundColor: \"#777\",\n  color: \"white\",\n  marginTop: \"-10px\"\n};\nconst LABEL_STYLE = {\n  verticalAlign: \"top\",\n  marginBottom: \"0.15rem\",\n  marginTop: \"0.15rem\"\n};\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nclass SessionShell extends UNISYS.Component {\n  constructor() {\n    super();\n    this.renderLogin = this.renderLogin.bind(this);\n    this.renderLoggedIn = this.renderLoggedIn.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      token: null,\n      classId: null,\n      projId: null,\n      hashedId: null,\n      subId: null,\n      groupId: null,\n      subId: null,\n      isValid: false\n    };\n\n  }\n\n  /// ROUTE RENDER FUNCTIONS ////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ render successful logged-in\n  /*/\n  renderLoggedIn(decoded) {\n    if (decoded) {\n      let classproj = `${decoded.classId}-${decoded.projId}`;\n      // prefix with unicode non-breaking space\n      let gid = `\\u00A0${decoded.groupId}`;\n      let subid = decoded.subId ? `USER\\u00A0${decoded.subId}` : \"\";\n      return (\n        <FormGroup row style={GROUP_STYLE}>\n          <Col sm={3}>\n            <Label style={LABEL_STYLE} className=\"small\">\n              GROUP{gid}\n              <br />\n              {subid}\n            </Label>\n          </Col>\n          <Col sm={9} className=\"text-right\">\n            <Label style={LABEL_STYLE} className=\"small\">\n              {classproj}-<strong>{decoded.hashedId}</strong>\n            </Label>\n          </Col>\n        </FormGroup>\n      );\n    } else {\n      return <p>ERROR:renderLoggedIn didn't get valid decoded object</p>;\n    }\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ render must login (readonly)\n  /*/\n  renderLogin() {\n    let { token, classId, projId, groupId, subId, hashedId, isValid } = this.state;\n    if (token) token = token.toUpperCase();\n    let formFeedback, tip, input;\n    tip = \"type group ID\";\n    if (classId) tip = \"scanning for valid code...\";\n    if (projId) tip = \"waiting for valid code...\";\n    if (groupId) tip = \"waiting for extra ID...\";\n    if (hashedId) {\n      if (hashedId.length >= 3) {\n        if (!groupId) tip = `'${token}' is an invalid code`;\n        else {\n          if (subId) tip = `login in as GROUP ${groupId} ${subId}`;\n          else tip = `login as GROUP ${groupId} or add -ID<num>`;\n        }\n      }\n    }\n    if (groupId) {\n      if (subId===0) {\n        tip = `e.g. ${classId}-${projId}-${hashedId} followed by -ID<num>`;\n        input = <Input invalid name=\"sessionToken\" id=\"sessionToken\" bsSize=\"sm\" style={INPUT_STYLE} className=\"text-right\" placeholder=\"CLASSID-PROJID-CODE\" onChange={this.handleChange} />\n        formFeedback = <FormFeedback className=\"text-right\"><small>{tip}</small></FormFeedback>\n      } else {\n        input = <Input valid name=\"sessionToken\" id=\"sessionToken\" bsSize=\"sm\" style={INPUT_STYLE} className=\"text-right\" placeholder=\"CLASSID-PROJID-CODE\" onChange={this.handleChange} />\n        formFeedback = <FormFeedback valid className=\"text-right\"><small>{tip}</small></FormFeedback>\n      }\n    } else {\n        input = <Input invalid name=\"sessionToken\" id=\"sessionToken\" bsSize=\"sm\" style={INPUT_STYLE} className=\"text-right\" placeholder=\"CLASSID-PROJID-CODE\" onChange={this.handleChange} />\n        formFeedback = <FormFeedback className=\"text-right\"><small>{tip}</small></FormFeedback>\n    }\n\n    return (\n      <Form onSubmit={this.onSubmit}>\n      <FormGroup row>\n        <Col>\n        <InputGroup>\n          <InputGroupAddon addonType=\"prepend\"><Button style={{fontSize:'10px'}} color=\"secondary\" size=\"sm\" disabled={!isValid} onSubmit={this.onSubmit}>LOGIN</Button></InputGroupAddon>\n          {input}\n          {formFeedback}\n        </InputGroup>\n        </Col>\n      </FormGroup>\n      </Form>\n    );\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  componentWillMount() {\n    // the code below reads a pre-existing matching path, which may be set\n    // to a valid token string AFTER the changeHandler() detected a valid\n    // login after a ForceReload. This is a bit hacky and the app would benefit\n    // from not relying on forced reloads. See handleChange().\n    let token = this.props.match.params.token;\n    let decoded = SESSION.DecodeToken(token) || {};\n    this.SetAppState(\"SESSION\", decoded);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ Main Render Function\n/*/ render() {\n    // FUN FACTS\n    // this.state set in constructor\n    // this.props.history, location, match added by withRouter(AppShell)\n    // way back in init-appshell.jsx\n\n    // if standalone mode, no login possible\n    if (UNISYS.IsStandaloneMode()) {\n      const { prompt, timestamp } = window.NC_UNISYS.standalone;\n      return (\n        <FormGroup row style={GROUP_STYLE}>\n          <Col sm={9}>\n            <Label style={LABEL_STYLE} className=\"small\">{prompt}</Label>\n          </Col>\n          <Col sm={3} className=\"text-right\">\n            <Label style={LABEL_STYLE} className=\"small\">{timestamp}</Label>\n          </Col>\n        </FormGroup>\n      );\n    }\n    // no token so just render login\n    let token = this.props.match.params.token;\n    if (!token) return this.renderLogin();\n    // try to decode token\n    let decoded = SESSION.DecodeToken(token);\n    if (decoded.isValid) {\n      return this.renderLoggedIn(decoded);\n    } else {\n      return this.renderLogin(token);\n    }\n  }\n\n  /// EVENT HANDLERS ////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  handleChange(event) {\n    let token = event.target.value;\n    let decoded = SESSION.DecodeToken(token);\n    let { classId, projId, hashedId, subId, groupId } = decoded;\n    this.setState(decoded);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  onSubmit(event) {\n    event.preventDefault();\n    const BRUTAL_REDIRECT = true;\n    if (this.state.isValid) {\n      // force a page URL change\n      if (BRUTAL_REDIRECT) {\n        const redirect = `/#/edit/${this.state.token}`;\n        window.location=redirect;\n      } else {\n        const redirect = `/edit/${this.state.token}`\n        this.props.history.push(redirect);\n      }\n    }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  }\n} // UNISYS.Component SessionShell\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = SessionShell;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\nDATABASE SERVER\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst DBG = false;\n\n/// LOAD LIBRARIES ////////////////////////////////////////////////////////////\n/// = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =\nconst Loki = require(\"lokijs\");\nconst PATH = require(\"path\");\nconst FS = require(\"fs-extra\");\n\n/// CONSTANTS /////////////////////////////////////////////////////////////////\n/// = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =\nconst SESSION = require(\"../unisys/common-session\");\nconst LOGGER = require(\"../unisys/server-logger\");\nconst PROMPTS = require(\"../system/util/prompts\");\nconst PR = PROMPTS.Pad(\"ServerDB\");\nconst DB_FILE = \"./runtime/netcreate.loki\";\nconst DB_CLONEMASTER = \"blank.loki\";\n\n/// MODULE-WIDE VARS //////////////////////////////////////////////////////////\n/// = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =\nlet m_options; // saved initialization options\nlet m_db; // loki database\nlet m_max_edgeID;\nlet m_max_nodeID;\nlet m_dupe_set; // set of nodeIDs for determine whether there are duplicates\nlet NODES; // loki \"nodes\" collection\nlet EDGES; // loki \"edges\" collection\nlet m_locked_nodes;\nlet m_locked_edges;\n\n/// API METHODS ///////////////////////////////////////////////////////////////\n/// = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =\nlet DB = {};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: Initialize the database\n/*/\nDB.InitializeDatabase = function(options = {}) {\n  FS.ensureDirSync(PATH.dirname(DB_FILE));\n  if (!FS.existsSync(DB_FILE)) {\n    console.log(PR, `NO EXISTING DATABASE ${DB_FILE}, so creating BLANK DATABASE...`);\n  }\n  let ropt = {\n    autoload: true,\n    autoloadCallback: f_DatabaseInitialize,\n    autosave: true,\n    autosaveCallback: f_AutosaveStatus,\n    autosaveInterval: 4000 // save every four seconds\n  };\n  ropt = Object.assign(ropt, options);\n  m_db = new Loki(DB_FILE, ropt);\n  m_options = ropt;\n\n  // callback on load\n  function f_DatabaseInitialize() {\n    // on the first load of (non-existent database), we will have no\n    // collections so we can detect the absence of our collections and\n    // add (and configure) them now.\n    NODES = m_db.getCollection(\"nodes\");\n    if (NODES === null) NODES = m_db.addCollection(\"nodes\");\n    m_locked_nodes = new Set();\n    EDGES = m_db.getCollection(\"edges\");\n    if (EDGES === null) EDGES = m_db.addCollection(\"edges\");\n    m_locked_edges = new Set();\n\n    // initialize unique set manager\n    m_dupe_set = new Set();\n    let dupeNodes = [];\n\n    // find highest NODE ID\n    if (NODES.count() > 0) {\n      m_max_nodeID = NODES.mapReduce(\n        (obj) => {\n          // side-effect: make sure ids are numbers\n          m_CleanObjID('node.id',obj);\n          // side-effect: check for duplicate ids\n          if (m_dupe_set.has(obj.id)) {\n            dupeNodes.push(obj);\n          } else {\n            m_dupe_set.add(obj.id);\n          }\n          // return value\n          return obj.id;\n        },\n        (arr) => {\n          return Math.max(...arr);\n        }\n      )\n    } else {\n      m_max_nodeID = 0;\n    }\n    // remap duplicate NODE IDs\n    dupeNodes.forEach( (obj) => {\n      m_max_nodeID+=1;\n      LOGGER.Write(PR,`# rewriting duplicate nodeID ${obj.id} to ${m_max_nodeID}`);\n      obj.id = m_max_nodeID;\n    });\n\n    // find highest EDGE ID\n    if (EDGES.count() > 0) {\n      m_max_edgeID = EDGES.mapReduce(\n        (obj) => {\n          m_CleanObjID('edge.id',obj);\n          m_CleanEdgeEndpoints(obj.id,obj);\n          return obj.id;\n        },\n        (arr) => {\n          return Math.max(...arr);\n        }\n      ); // end mapReduce edge ids\n    } else {\n      m_max_edgeID = 0;\n    }\n    console.log(PR,`DATABASE LOADED! m_max_nodeID '${m_max_nodeID}', m_max_edgeID '${m_max_edgeID}'`);\n    m_db.saveDatabase();\n\n    if (typeof m_options.onLoadComplete==='function') {\n      m_options.onLoadComplete();\n    }\n  } // end f_DatabaseInitialize\n\n  // UTILITY FUNCTION\n  function f_AutosaveStatus() {\n    let nodeCount = NODES.count();\n    let edgeCount = EDGES.count();\n    console.log(PR,`AUTOSAVING! ${nodeCount} NODES / ${edgeCount} EDGES <3`);\n  }\n}; // InitializeDatabase()\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: load database\n    note: InitializeDatabase() was already called on system initialization\n    to populate the NODES and EDGES structures.\n/*/\nDB.PKT_GetDatabase = function(pkt) {\n  let nodes = NODES.chain().data({ removeMeta: true });\n  let edges = EDGES.chain().data({ removeMeta: true });\n  if (DBG) console.log(PR,`PKT_GetDatabase ${pkt.Info()} (loaded ${nodes.length} nodes, ${edges.length} edges)`);\n  LOGGER.Write(pkt.Info(), `getdatabase`);\n  return { nodes, edges };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: reset database from scratch\n/*/\nDB.PKT_SetDatabase = function(pkt) {\n  if (DBG) console.log(PR, `PKT_SetDatabase`);\n  let { nodes = [], edges = [] } = pkt.Data();\n  if (!nodes.length) console.log(PR, \"WARNING: empty nodes array\");\n  else console.log(PR, `setting ${nodes.length} nodes...`);\n  if (!edges.length) console.log(PR, \"WARNING: empty edges array\");\n  else console.log(PR, `setting ${edges.length} edges...`);\n  NODES.clear();\n  NODES.insert(nodes);\n  EDGES.clear();\n  EDGES.insert(edges);\n  console.log(PR, `PKT_SetDatabase complete. Data available on next get.`);\n  m_db.close();\n  DB.InitializeDatabase();\n  LOGGER.Write(pkt.Info(), `setdatabase`);\n  return { OK: true };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nDB.PKT_GetNewNodeID = function(pkt) {\n  m_max_nodeID += 1;\n  if (DBG) console.log(PR, `PKT_GetNewNodeID ${pkt.Info()} nodeID ${m_max_nodeID}`);\n  return { nodeID: m_max_nodeID };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nDB.PKT_GetNewEdgeID = function(pkt) {\n  m_max_edgeID += 1;\n  if (DBG) console.log(PR, `PKT_GetNewEdgeID ${pkt.Info()} edgeID ${m_max_edgeID}`);\n  return { edgeID: m_max_edgeID };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nDB.PKT_RequestLockNode = function(pkt) {\n  let { nodeID } = pkt.Data();\n  let errcode = m_IsInvalidNode( nodeID );\n  if (errcode) return errcode;\n  // check if node is already locked\n  if (m_locked_nodes.has(nodeID)) return m_MakeLockError(`nodeID ${nodeID} is already locked`);\n  // SUCCESS\n  // single matching node exists and is not yet locked, so lock it\n  m_locked_nodes.add(nodeID);\n  return { nodeID, locked : true };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nDB.PKT_RequestUnlockNode = function(pkt) {\n  let { nodeID } = pkt.Data();\n  let errcode = m_IsInvalidNode( nodeID );\n  if (errcode) return errcode;\n  // check that node is already locked\n  if (m_locked_nodes.has(nodeID)) {\n    m_locked_nodes.delete(nodeID);\n    return { nodeID, unlocked:true };\n  }\n  // this is an error because nodeID wasn't in the lock table\n  return m_MakeLockError(`nodeID ${nodeID} was not locked so can't unlock`);\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_IsInvalidNode ( nodeID ) {\n  if (!nodeID) return m_MakeLockError(`undefined nodeID`);\n  nodeID = Number.parseInt(nodeID,10);\n  if (isNaN(nodeID)) return m_MakeLockError(`nodeID was not a number`);\n  if (nodeID<0) return m_MakeLockError(`nodeID ${nodeID} must be positive integer`);\n  if (nodeID>m_max_nodeID) return m_MakeLockError(`nodeID ${nodeID} is out of range`);\n    // find if the node exists\n  let matches = NODES.find({ id: nodeID });\n  if (matches.length===0) return m_MakeLockError(`nodeID ${nodeID} not found`);\n  if (matches.length>1) return m_MakeLockError(`nodeID ${nodeID} matches multiple entries...critical error!`);\n  // no retval is no error!\n  return undefined;\n}\nfunction m_MakeLockError( info ) {\n  return { NOP:`ERR`, INFO:info };\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nDB.PKT_RequestLockEdge = function (pkt) {\n  let { edgeID } = pkt.Data();\n  let errcode = m_IsInvalidEdge(edgeID);\n  if (errcode) return errcode;\n  // check if edge is already locked\n  if (m_locked_edges.has(edgeID)) return m_MakeLockError(`edgeID ${edgeID} is already locked`);\n  // SUCCESS\n  // single matching edge exists and is not yet locked, so lock it\n  m_locked_edges.add(edgeID);\n  return { edgeID, locked: true };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nDB.PKT_RequestUnlockEdge = function (pkt) {\n  let { edgeID } = pkt.Data();\n  let errcode = m_IsInvalidEdge(edgeID);\n  if (errcode) return errcode;\n  // check that edge is already locked\n  if (m_locked_edges.has(edgeID)) {\n    m_locked_edges.delete(edgeID);\n    return { edgeID, unlocked: true };\n  }\n  // this is an error because nodeID wasn't in the lock table\n  return m_MakeLockError(`edgeID ${edgeID} was not locked so can't unlock`);\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_IsInvalidEdge(edgeID) {\n  if (!edgeID) return m_MakeLockError(`undefined edgeID`);\n  edgeID = Number.parseInt(edgeID, 10);\n  if (isNaN(edgeID)) return m_MakeLockError(`edgeID was not a number`);\n  if (edgeID < 0) return m_MakeLockError(`edgeID ${edgeID} must be positive integer`);\n  if (edgeID > m_max_edgeID) return m_MakeLockError(`edgeID ${edgeID} is out of range`);\n  // find if the node exists\n  let matches = EDGES.find({ id: edgeID });\n  if (matches.length === 0) return m_MakeLockError(`edgeID ${edgeID} not found`);\n  if (matches.length > 1) return m_MakeLockError(`edgeID ${edgeID} matches multiple entries...critical error!`);\n  // no retval is no error!\n  return undefined;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nDB.PKT_RequestUnlockAllNodes = function (pkt) {\n  m_locked_nodes = new Set();\n  return { unlocked: true };\n}\nDB.PKT_RequestUnlockAllEdges = function (pkt) {\n  m_locked_edges = new Set();\n  return { unlocked: true };\n}\nDB.PKT_RequestUnlockAll = function (pkt) {\n  m_locked_nodes = new Set();\n  m_locked_edges = new Set();\n  return { unlocked: true };\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nDB.PKT_Update = function(pkt) {\n  let { node, edge, nodeID, replacementNodeID, edgeID } = pkt.Data();\n  let retval = {};\n  // PROCESS NODE INSERT/UPDATE\n  if (node) {\n    m_CleanObjID(`${pkt.Info()} node.id`,node);\n    let matches = NODES.find({ id: node.id });\n    if (matches.length === 0) {\n      // if there was no node, then this is an insert new operation\n      if (DBG) console.log(PR,`PKT_Update ${pkt.Info()} INSERT nodeID ${JSON.stringify(node)}`);\n      LOGGER.Write(pkt.Info(), `insert node`, node.id, JSON.stringify(node));\n      DB.AppendNodeLog(node, pkt); // log GroupId to node stored in database\n      NODES.insert(node);\n      retval = { op: \"insert\", node };\n    } else if (matches.length === 1) {\n      // there was one match to update\n      NODES.findAndUpdate({ id: node.id }, n => {\n        if (DBG) console.log(PR,`PKT_Update ${pkt.Info()} UPDATE nodeID ${node.id} ${JSON.stringify(node)}`);\n        LOGGER.Write(pkt.Info(), `update node`, node.id, JSON.stringify(node));\n        DB.AppendNodeLog(n, pkt); // log GroupId to node stored in database\n        Object.assign(n, node);\n      });\n      retval = { op: \"update\", node };\n    } else {\n      if (DBG) console.log(PR,`WARNING: multiple nodeID ${node.id} x${matches.length}`);\n      LOGGER.Write(pkt.Info(), `ERROR`, node.id, \"duplicate node id\");\n      retval = { op: \"error-multinodeid\" };\n    }\n    return retval;\n  } // if node\n\n  // PROCESS EDGE INSERT/UPDATE\n  if (edge) {\n    m_CleanObjID(`${pkt.Info()} edge.id`,edge);\n    let matches = EDGES.find({ id: edge.id });\n    if (matches.length === 0) {\n      // this is a new edge\n      if (DBG) console.log(PR,`PKT_Update ${pkt.Info()} INSERT edgeID ${edge.id} ${JSON.stringify(edge)}`);\n      LOGGER.Write(pkt.Info(), `insert edge`, edge.id, JSON.stringify(edge));\n      DB.AppendEdgeLog(edge, pkt); // log GroupId to edge stored in database\n      EDGES.insert(edge);\n      retval = { op: \"insert\", edge };\n    } else if (matches.length === 1) {\n      // update this edge\n      EDGES.findAndUpdate({ id: edge.id }, e => {\n        if (DBG) console.log(PR,`PKT_Update ${pkt.SourceGroupID()} UPDATE edgeID ${edge.id} ${JSON.stringify(edge)}`);\n        LOGGER.Write(pkt.Info(), `update edge`, edge.id, JSON.stringify(edge));\n        DB.AppendEdgeLog(e, pkt); // log GroupId to edge stored in database\n        Object.assign(e, edge);\n      });\n      retval = { op: \"update\", edge };\n    } else {\n      console.log(PR, `WARNING: multiple edgeID ${edge.id} x${matches.length}`);\n      LOGGER.Write(pkt.Info(), `ERROR`, node.id, \"duplicate edge id\");\n      retval = { op: \"error-multiedgeid\" };\n    }\n    return retval;\n  } // if edge\n\n  // DELETE NODE\n  if (nodeID !== undefined) {\n    nodeID = m_CleanID(`${pkt.Info()} nodeID`,nodeID);\n    if (DBG) console.log(PR, `PKT_Update ${pkt.Info()} DELETE nodeID ${nodeID}`);\n    // Log first so it's apparent what is triggering the edge changes\n    LOGGER.Write(pkt.Info(), `delete node`, nodeID);\n\n    // handle edges\n    let edgesToProcess = EDGES.where(e => {\n      return e.source === nodeID || e.target === nodeID;\n    });\n\n    // handle linked nodes\n    replacementNodeID = m_CleanID(`${pkt.Info()} replacementNodeID`,replacementNodeID);\n    if (replacementNodeID !== -1) {\n      // re-link edges to replacementNodeID...\n      EDGES.findAndUpdate({ source: nodeID }, e => {\n        LOGGER.Write(pkt.Info(),`relinking edge`,e.id,`to`,replacementNodeID);\n        e.source = replacementNodeID;\n      });\n      EDGES.findAndUpdate({ target: nodeID }, e => {\n        LOGGER.Write(pkt.Info(),`relinking edge`,e.id,`to`,replacementNodeID);\n        e.target = replacementNodeID;\n      });\n    } else {\n      // ... or delete edges completely\n      let sourceEdges = EDGES.find({ source: nodeID });\n      EDGES.findAndRemove({ source: nodeID });\n      if (sourceEdges.length) LOGGER.Write(pkt.Info(), `deleting ${sourceEdges.length} sources matching ${nodeID}`);\n      let targetEdges = EDGES.find({ target: nodeID });\n      EDGES.findAndRemove({ target: nodeID });\n      if (targetEdges.length) LOGGER.Write(pkt.Info(), `deleting ${targetEdges.length} targets matching ${nodeID}`);\n    }\n    // ...finally remove the node itself\n    NODES.findAndRemove({ id: nodeID });\n    return { op: \"delete\", nodeID, replacementNodeID };\n  }\n\n  // DELETE EDGES\n  if (edgeID !== undefined) {\n    edgeID = m_CleanID(`${pkt.Info()} edgeID`,edgeID);\n    if (DBG) console.log(PR, `PKT_Update ${pkt.Info()} DELETE edgeID ${edgeID}`);\n    LOGGER.Write(pkt.Info(), `delete edge`, edgeID);\n    EDGES.findAndRemove({ id: edgeID });\n    return { op: \"delete\", edgeID };\n  }\n\n  // return update value\n  return { op: \"error-noaction\" };\n};\n\n/// NODE ANNOTATION ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ write/remove packet SourceGroupID() information into the node before writing\n    the first entry is the insert, subsequent operations are updates\n/*/\nDB.AppendNodeLog = function(node, pkt) {\n  if (!node._nlog) node._nlog = [];\n  let gid = pkt.SourceGroupID() || pkt.SourceAddress();\n  node._nlog.push(gid);\n  if (DBG) {\n    let out = \"\";\n    node._nlog.forEach(el => {\n      out += `[${el}] `;\n    });\n    console.log(PR, \"nodelog\", out);\n  }\n};\nDB.FilterNodeLog = function(node) {\n  let newNode = Object.assign({}, node);\n  Reflect.deleteProperty(newNode, \"_nlog\");\n  return newNode;\n};\n/// EDGE ANNOTATION ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ write/remove packet SourceGroupID() information into the node before writing\n    the first entry is the insert, subsequent operations are updates\n/*/\nDB.AppendEdgeLog = function(edge, pkt) {\n  if (!edge._elog) edge._elog = [];\n  let gid = pkt.SourceGroupID() || pkt.SourceAddress();\n  edge._elog.push(gid);\n  if (DBG) {\n    let out = \"\";\n    edge._elog.forEach(el => {\n      out += `[${el}] `;\n    });\n    console.log(PR, \"edgelog\", out);\n  }\n};\nDB.FilterEdgeLog = function(edge) {\n  let newEdge = Object.assign({}, edge);\n  Reflect.deleteProperty(newEdge, \"_elog\");\n  return newEdge;\n};\n\n/// JSON EXPORT ///////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ called by brunch to generate an up-to-date JSON file to path.\n    creates the path if it doesn't exist\n/*/\nDB.WriteJSON = function( filePath ) {\n  let db = new Loki(DB_FILE,{\n      autoload: true,\n      autoloadCallback: () => {\n        if (typeof filePath==='string') {\n          if (DBG) console.log(PR,`writing { nodes, edges } to '${filePath}'`);\n          let nodes = db.getCollection(\"nodes\").chain()\n            .data({ removeMeta: true });\n          let edges = db.getCollection(\"edges\").chain()\n            .data({ removeMeta: true });\n          let data = { nodes, edges };\n          let json = JSON.stringify(data);\n          if (DBG) console.log(PR,`ensuring DIR ${PATH.dirname(filePath)}`);\n          FS.ensureDirSync(PATH.dirname( filePath ));\n          if (DBG) console.log(PR,`writing file ${filePath}`);\n          FS.writeFileSync( filePath, json );\n          console.log(PR,`*** WROTE JSON DATABASE`);\n        } else {\n          console.log(PR,`ERR path ${filePath} must be a pathname`);\n        }\n      }\n    }\n  );\n};\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// utility function for cleaning nodes with numeric id property\nfunction m_CleanObjID(prompt, obj) {\n  if (typeof obj.id==='string') {\n    let int = parseInt(obj.id,10);\n    LOGGER.Write(PR,`! ${prompt} \"${obj.id}\" is string; converting to ${int}`);\n    obj.id=int;\n  }\n  return obj;\n}\nfunction  m_CleanEdgeEndpoints(prompt, edge) {\n  if (typeof edge.source==='string') {\n    let int = parseInt(edge.source,10);\n    LOGGER.Write(PR,`  edge ${prompt} source \"${edge.source}\" is string; converting to ${int}`);\n    edge.source = int;\n  }\n  if (typeof edge.target==='string') {\n    let int = parseInt(edge.target,10);\n    LOGGER.Write(PR,`  edge ${prompt} target \"${edge.target}\" is string; converting to ${int}`);\n    edge.target = int;\n  }\n  return edge;\n}\nfunction m_CleanID(prompt, id) {\n  if (typeof id==='string') {\n    let int = parseInt(id,10);\n    LOGGER.Write(PR,`! ${prompt} \"${id}\" is string; converting to number ${int}`);\n    id = int;\n  }\n  return id;\n}\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =\nmodule.exports = DB;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  LOGGER - WIP\n  porting PLAE logger for now to get it minimally working\n\n  SUPER UGLY PORT WILL CLEAN UP LATER AVERT YOUR EYES OMG\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst DBG = false;\n\n/// LOAD LIBRARIES ////////////////////////////////////////////////////////////\n/// = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =\nconst Loki              = require('lokijs');\nconst PATH              = require('path');\nconst FSE               = require('fs-extra');\n\n/// CONSTANTS /////////////////////////////////////////////////////////////////\n/// = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =\nconst PROMPTS           = require('../system/util/prompts');\nconst PR                = PROMPTS.Pad('SRV-LOG');\n\n/// MODULE-WIDE VARS //////////////////////////////////////////////////////////\n/// = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =\n\nconst LOG_DIR           = '../../runtime/logs';\nconst Tracer \t\t\t      = require('tracer');\nconst LOG_DELIMITER     = '\\t';\nconst LOG_CONFIG = {\n  format : \"{{line}}  {{message}}\",\n  dateformat : \"HH:MM:ss.L\",\n  preprocess : function (data) {\n    data.line = 'C '+Number(data.line).zeroPad(4);\n  }\n};\nconst LOGGER = Tracer.colorConsole(LOG_CONFIG);\nlet   fs_log \t\t= null;\n// enums for outputing dates\nconst e_weekday = [ 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday' ];\n\n// initialize event logger\nvar dir = PATH.resolve(PATH.join(__dirname,LOG_DIR));\nFSE.ensureDir(dir, function (err) {\n  if (err) throw new Error('could not make '+dir+' directory');\n  var logname = str_TimeDatedFilename('log')+'.txt';\n  var pathname = dir+'/'+logname;\n  fs_log = FSE.createWriteStream(pathname);\n  LogLine(`NETCREATE APPSERVER SESSION LOG for ${str_DateStamp()} ${str_TimeStamp()}`);\n  LogLine('---');\n});\n\n/**\tLOGGING FUNCTIONS ******************************************************/\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\tLog a standard system log message\n/*/\tfunction LogLine ( ...args ) {\n\t\tif (!fs_log) return;\n\n\t\tvar out = str_TimeStamp()+' ';\n\t\tvar c = args.length;\n    // arguments are delimited\n\t\tif (c) {\n\t\t\tfor (let i=0; i<c; i++) {\n\t\t\t\tif (i>0) out += LOG_DELIMITER;\n\t\t\t\tout += args[i];\n\t\t\t}\n\t\t}\n\t\tout += '\\n';\n\t\tfs_log.write(out);\n\t}\n\n/////////////////////////////////////////////////////////////////////////////\n/**\tUTILITY FUNCTIONS ******************************************************/\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    function str_TimeStamp () {\n      var date = new Date();\n      var hh = (\"0\"+date.getHours()).slice(-2);\n      var mm = (\"0\"+date.getMinutes()).slice(-2);\n      var ss = (\"0\"+date.getSeconds()).slice(-2);\n      return hh+':'+mm+':'+ss;\n    }\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    function str_DateStamp() {\n      var date = new Date();\n      var mm = (\"0\"+(date.getMonth()+1)).slice(-2);\n      var dd = (\"0\"+date.getDate()).slice(-2);\n      var day = e_weekday[date.getDay()];\n      var yyyy = date.getFullYear();\n      return yyyy+'/'+mm+'/'+dd+' '+day;\n    }\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    function str_TimeDatedFilename   ( ...args ) {\n      // construct filename\n      var date = new Date();\n      var dd = (\"0\"+date.getDate()).slice(-2);\n      var mm = (\"0\"+(date.getMonth()+1)).slice(-2);\n      var hms = (\"0\"+date.getHours()).slice(-2);\n      hms += (\"0\"+date.getMinutes()).slice(-2);\n      hms += (\"0\"+date.getSeconds()).slice(-2);\n      var filename;\n      filename = \tdate.getFullYear().toString();\n      filename += '-'+mm+dd;\n      var c = arguments.length;\n      if (c) filename += filename.concat('-',...args);\n      filename += '-'+hms;\n      return filename;\n  }\n\n/// API METHODS ///////////////////////////////////////////////////////////////\n/// = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =\nlet LOG = {};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: Handle incoming log events\n/*/ LOG.PKT_LogEvent = function ( pkt ) {\n      let {event,items} = pkt.Data();\n      if (DBG) console.log(PR,pkt.Info(),event,...items);\n      LogLine(pkt.Info(),event||'-',...items);\n      return { OK : true };\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API: Write to log as delimited arguments\n/*/ LOG.Write = LogLine;\n\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =\nmodule.exports = LOG;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  WebSocketServer and Network Management for UNISYS\n  WORK IN PROGRESS\n\n  [x] - socket listener\n  [ ] - socket dictionary\n  [ ] - socket metadata for UNISYS defined, stored in sockets\n  [ ] - message dictionary\n  [ ] - message dispatching\n  [ ] - system message declaration\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst DBG = false;\n\n///\tLOAD LIBRARIES ////////////////////////////////////////////////////////////\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar   WSS               = require('ws').Server;\nvar   FSE               = require('fs-extra');\nvar   NetMessage        = require('../unisys/common-netmessage-class');\nconst LOGGER            = require('../unisys/server-logger');\nvar   DB                = require('../unisys/server-database');\n\n/// CONSTANTS /////////////////////////////////////////////////////////////////\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst PROMPTS           = require('../system/util/prompts');\nconst PR                = PROMPTS.Pad('SRV-NET');\nconst ERR               = PROMPTS.Pad('!!!');\nconst ERR_SS_EXISTS     = \"socket server already created\";\nconst ERR_NULL_SOCKET   = \"require valid socket\";\nconst DBG_SOCK_BADCLOSE = \"closing socket is not in mu_sockets\";\nconst ERR_INVALID_DEST  = \"couldn't find socket with provided address\";\nconst ERR_UNKNOWN_PKT   = \"unrecognized netmessage packet type\";\nconst DEFAULT_NET_PORT  = 2929;\nconst DEFAULT_NET_ADDR  = '127.0.0.1';\n\n/// MODULE-WIDE VARS //////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// sockets\nvar mu_wss;                         // websocket server\nvar mu_options;                     // websocket options\nvar mu_sockets = new Map();         // sockets mapped by socket id\nvar mu_sid_counter = 0;             // for generating  unique socket ids\n// storage\nvar m_server_handlers = new Map();  // message map storing sets of functions\nvar m_message_map     = new Map();  // message map storing other handlers\nvar m_socket_msgs_list = new Map(); // message map by uaddr\n\n\n/// API MEHTHODS //////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar   UNET = {};\nconst SERVER_UADDR      = NetMessage.DefaultServerUADDR(); // is 'SVR_01'\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Initialize() is called by brunch-server.js to define the default UNISYS\n    network values, so it can embed them in the index.ejs file for webapps\n/*/ UNET.InitializeNetwork = ( options ) => {\n      options = options || {};\n      options.port = options.port || DEFAULT_NET_PORT;\n      options.uaddr = options.uaddr || SERVER_UADDR;\n      if (mu_wss !== undefined) throw Error(ERR_SS_EXISTS);\n      NetMessage.GlobalSetup({ uaddr: options.uaddr });\n      mu_options = options;\n      return mu_options;\n    }; // end InitializeNetwork()\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\tCreateNetwork() is called by brunch-server after the Express webserver\n    has started listening, initializing the UNISYS NETWORK socket listener.\n/*/\tUNET.StartNetwork = () => {\n      // create listener.\n      if (DBG) console.log(PR,`UNISYS NETWORK initialized on port ${mu_options.port}`);\n      mu_wss = new WSS(mu_options);\n      mu_wss.on('listening',function() {\n        if (DBG) console.log(PR,`listening on port ${mu_options.port}`);\n        mu_wss.on('connection',m_NewSocketConnected);\n      });\n    }; // end CreateNetwork()\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ HandleMessage() registers a server-implemented handler.\n    The handlerFunc receives a NetMessage and should return one as well.\n    It can also return a non-object if there is an error.\n    Logic is similar to client-datalink-class.js equivalent\n/*/ UNET.HandleMessage = function( mesgName, handlerFunc ) {\n      if (typeof handlerFunc !== 'function') {\n        throw \"arg2 must be a function\";\n      }\n      let handlers = m_server_handlers.get(mesgName);\n      if (!handlers) {\n        handlers = new Set();\n        m_server_handlers.set( mesgName, handlers );\n      }\n      handlers.add(handlerFunc);\n      return this;\n    }; // end HandleMessage()\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ UnhandleMessage() de-registers a server-implemented handler, in case you\n    ever want to do that.\n    Logic is similar to client-datalink-class.js equivalent\n/*/ UNET.UnhandleMessage = function( mesgName, handlerFunc ) {\n      if (!arguments.length) {\n        m_server_handlers.clear();\n      } else if (arguments.length===1) {\n        m_server_handlers.delete(mesgName);\n      } else {\n        const handlers = m_server_handlers.get(mesgName);\n        if (handlers) {\n          handlers.delete(handlerFunc);\n        }\n      }\n      return this;\n    }; // end UnhandleMessage()\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Call remote handler, with possible return value\n/*/ UNET.NetCall = async function ( mesgName, data ) {\n      let pkt = new NetMessage(mesgName,data);\n      let promises = m_PromiseRemoteHandlers(pkt);\n      if (DBG) console.log(PR,`${pkt.Info()} NETCALL ${pkt.Message()} to ${promises.length} remotes`);\n      /// MAGICAL ASYNC/AWAIT BLOCK ///////\n      let resArray = await Promise.all(promises);\n      /// END MAGICAL ASYNC/AWAIT BLOCK ///\n      let resObj = Object.assign({},...resArray);\n      return resObj;\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Send data to remote handler, no expected return value\n/*/ UNET.NetSend = function ( mesgName, data ) {\n      let pkt = new NetMessage(mesgName,data);\n      let promises = m_PromiseRemoteHandlers(pkt);\n      // we don't care about waiting for the promise to complete\n      if (DBG) console.log(PR,`${pkt.Info()} NETSEND ${pkt.Message()} to ${promises.length} remotes`);\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Send signal to remote handler, no expected return value\n/*/ UNET.NetSignal = function ( mesgName, data ) {\n      console.warn(PR,'NOTE: Use NetSend(), not NetSignal() since the server doesnt care.');\n      UNET.NetSend(mesgName,data);\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ RegisterRemoteHandlers() accepts a RegistrationPacket with data = { messages }\n    and writes to the two main maps for handling incoming messages\n/*/ UNET.RegisterRemoteHandlers = function( pkt ) {\n      if (pkt.Message()!=='SRV_REG_HANDLERS') throw Error('not a registration packet');\n      let uaddr = pkt.SourceAddress();\n      let { messages=[] } = pkt.Data();\n      let regd=[];\n      // save message list, for later when having to delete\n      m_socket_msgs_list.set(uaddr,messages);\n      // add uaddr for each message in the list\n      // m_message_map[mesg] contains a Set\n      messages.forEach((msg)=>{\n        let entry = m_message_map.get(msg);\n        if (!entry) {\n          entry = new Set();\n          m_message_map.set(msg,entry);\n        }\n        if (DBG) console.log(PR,`adding '${msg}' reference to ${uaddr}`);\n        entry.add(uaddr);\n        regd.push(msg);\n      });\n      return { registered: regd };\n    };\n\n\n/// MODULE HELPER FUNCTIONS ///////////////////////////////////////////////////\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ The socket has connected, so let's save this to our connection list\n/*/ function m_NewSocketConnected( socket ) {\n      if (DBG) console.log(PR,'socket connected');\n\n      m_SocketAdd(socket);\n      m_SocketClientAck(socket);\n      // subscribe socket to handlers\n      socket.on('message', ( json ) => {\n        m_SocketMessage(socket,json);\n      });\n      socket.on('close', () => {\n        m_SocketDelete(socket);\n      });\n    }\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ When a new socket connection happens, send back the special registration\n    packet (WIP)\n/*/ function m_SocketClientAck( socket ) {\n      let data = {\n        HELLO : 'Welcome to UNISYS',\n        UADDR : socket.UADDR\n      }\n      socket.send(JSON.stringify(data));\n    }\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Handle all incoming socket messages asynchronously through Promises\n/*/ function m_SocketMessage( socket, json ) {\n        let pkt = new NetMessage(json);\n        // figure out what to do\n        switch (pkt.Type()) {\n          case 'state':\n            m_HandleState(socket,pkt);\n            break;\n          case 'msig':\n          case 'msend':\n          case 'mcall':\n            m_HandleMessage(socket,pkt);\n            break;\n          default:\n            throw new Error(`${PR} unknown packet type '${pkt.Type()}'`);\n        } // end switch\n    } // end m_SocketMessage()\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ handle global state and rebroadcast\n/*/ function m_HandleState( socket, pkt ) {\n      //\n    }\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ handle messages that are a Send(), Signal(), or Call()\n/*/ async function m_HandleMessage( socket, pkt ) {\n        // is this a returning packet that was forwarded?\n        if (pkt.IsOwnResponse()) {\n          // console.log(PR,`-- ${pkt.Message()} completing transaction ${pkt.seqlog.join(':')}`);\n          pkt.CompleteTransaction();\n          return;\n        }\n        // console.log(PR,`packet source incoming ${pkt.SourceAddress()}-${pkt.Message()}`);\n        // (1) first check if this is a server handler\n        let promises = m_PromiseServerHandlers(pkt);\n\n        // (2) if it wasn't, then see if we have remote handlers defined\n        if (promises.length===0) promises = m_PromiseRemoteHandlers(pkt);\n\n        // (3) FAIL if no promises were returned, because there were no eligible\n        // UADDR targets, possibly because the sources are not allowed to call itself\n        // except in the case of the SIGNAL type\n        if (promises.length===0) {\n          console.log(PR,`info: '${pkt.Message()}' no eligible UADDR targets`);\n          // return transaction to resolve callee\n          pkt.SetData({NOP:`no handler found for '${pkt.Message()}'`});\n          if (pkt.IsType('mcall')) pkt.ReturnTransaction(socket);\n          return;\n        }\n        // got this far? let's skip all server messages for debugging purposes\n        let notsrv = !pkt.Message().startsWith('SRV_');\n        let json = JSON.stringify(pkt.Data());\n        /* MAGICAL ASYNC/AWAIT BLOCK *****************************/\n        if (DBG) console.log(PR,`${pkt.Info()} FORWARD ${pkt.Message()} to ${promises.length} remotes`);\n        // if (notsrv) console.log(PR,`>> '${pkt.Message()}' queuing ${promises.length} Promises w/ data ${json}'`);\n        let pktArray = await Promise.all(promises);\n        // if (notsrv) console.log(PR,`<< '${pkt.Message()}' resolved`);\n        if (DBG) console.log(PR,`${pkt.Info()} RETURN ${pkt.Message()} from ${promises.length} remotes`);\n        /* END MAGICAL ASYNC/AWAIT BLOCK *************************/\n\n        // (4) only mcall packets need to receive the data back return\n        if (!pkt.IsType('mcall')) return;\n\n        // (5) got this far? this is a call, so gather data and return it\n        let data = pktArray.reduce((d,p) => {\n          let pdata = (p instanceof NetMessage) ? p.Data() : p;\n          let retval = Object.assign(d,pdata);\n          // if (notsrv) console.log(PR,`'${pkt.Message()}' reduce`,JSON.stringify(retval));\n          return retval;\n        },{});\n        // json = JSON.stringify(data);\n        // if (notsrv) console.log(PR,`'${pkt.Message()}' returning transaction data ${json}`);\n        pkt.SetData(data);\n        pkt.ReturnTransaction(socket);\n    } // m_HandleMessage()\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ m_PromiseServerHandlers() returns an array of promises, which should be used\n     by Promises.all() inside an async/await function (m_SocketMessage above)\n    Logic is similar to client-datalink-class.js Call()\n/*/ function m_PromiseServerHandlers( pkt ) {\n      let mesgName = pkt.Message();\n      const handlers = m_server_handlers.get(mesgName);\n      /// create promises for all registered handlers\n      let promises = [];\n      if (handlers) for (let handlerFunc of handlers) {\n        // handlerFunc signature: (data,dataReturn) => {}\n        let p = f_make_resolver_func(pkt,handlerFunc);\n        promises.push(p);\n      }\n      /// return all queued promises\n      return promises;\n\n      /// inline utility function /////////////////////////////////////////////\n      function f_make_resolver_func( srcPkt, handlerFunc ) {\n        return new Promise(( resolve, reject ) => {\n          let retval = handlerFunc(srcPkt);\n          if (retval===undefined) throw `'${mesgName}' message handler MUST return object or error string`;\n          if (typeof retval!=='object') reject(retval);\n          else resolve(retval);\n        });\n      }\n    }\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ If a handler is registered elsewhere on UNET, then dispatch to them for\n    eventual reflection back through server aggregation of data.\n/*/ function m_PromiseRemoteHandlers( pkt ) {\n      // debugging values\n      let s_uaddr = pkt.SourceAddress();\n      // logic values\n      let promises = [];\n      let mesgName = pkt.Message();\n      let type = pkt.Type();\n      // iterate!\n      let handlers = m_message_map.get(mesgName);\n      if (handlers) handlers.forEach((d_uaddr)=>{\n        // don't send packet to originating UADDR because it already has handled it\n        // locally\n        switch (type) {\n          case 'msig':\n            promises.push(f_make_remote_resolver_func(pkt,d_uaddr));\n            break;\n          case 'msend':\n          case 'mcall':\n            if (s_uaddr!==d_uaddr) {\n              promises.push(f_make_remote_resolver_func(pkt,d_uaddr));\n            } else {\n              // console.log(PR,`${type} '${pkt.Message()}' -NO ECHO- ${d_uaddr}`);\n            }\n            break;\n          default:\n            throw Error(`{ERR_UNKNOWN_PKT} ${type}`);\n        }\n      });\n      /// return all queued promises\n      return promises;\n      /// f_make_remote_resolver_function returns the promise created by QueueTransaction()\n      /// made on a new netmessage.\n      function f_make_remote_resolver_func(srcPkt ,d_uaddr,opt={}) {\n        let {verbose} = opt;\n        // get the address of the destination implementor of MESSAGE\n        let d_sock = mu_sockets.get(d_uaddr);\n        if (d_sock===undefined) throw Error(ERR_INVALID_DEST+` ${d_uaddr}`);\n        // Queue transaction from server\n        // sends to destination socket d_sock\n        // console.log(PR,`++ '${pkt.Message()}' FWD from ${pkt.SourceAddress()} to ${d_uaddr}`);\n        let newpkt = new NetMessage(srcPkt);\n        newpkt.MakeNewID();\n        newpkt.CopySourceAddress(srcPkt);\n        if (verbose) {\n          console.log('make_resolver_func:',`PKT: ${srcPkt.Type()} '${srcPkt.Message()}' from ${srcPkt.Info()} to d_uaddr:${d_uaddr} dispatch to d_sock.UADDR:${d_sock.UADDR}`);\n        }\n        return newpkt.QueueTransaction(d_sock);\n      }\n    }\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ function m_SocketAdd( socket ) {\n      // save socket by socket_id\n      let sid = m_GetNewUADDR();\n      // store additional props in socket\n      socket.UADDR = sid;\n      // save socket\n      mu_sockets.set(sid,socket);\n      if (DBG) console.log(PR,`socket ADD ${socket.UADDR} to network`);\n      LOGGER.Write(socket.UADDR,'joined network');\n      if (DBG) m_ListSockets(`add ${sid}`);\n    }\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ function m_GetNewUADDR( prefix='UADDR' ) {\n      ++mu_sid_counter;\n      let cstr = mu_sid_counter.toString(10).padStart(2,'0');\n      return `${prefix}_${cstr}`;\n    }\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ function m_SocketDelete( socket ) {\n      let uaddr = socket.UADDR;\n      if (!mu_sockets.has(uaddr)) throw Error(DBG_SOCK_BADCLOSE);\n      if (DBG) console.log(PR,`socket DEL ${uaddr} from network`);\n      LOGGER.Write(socket.UADDR,'left network');\n      mu_sockets.delete(uaddr);\n      // delete socket reference from previously registered handlers\n      let rmesgs = m_socket_msgs_list.get(uaddr);\n      if (Array.isArray(rmesgs)) {\n        rmesgs.forEach( (msg) => {\n          let handlers = m_message_map.get(msg);\n          if (DBG) console.log(PR,`deleting '${msg}' reference to ${uaddr}`);\n          if (handlers) handlers.delete(uaddr);\n        });\n      }\n      if (DBG) m_ListSockets(`del ${socket.UADDR}`);\n    }\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ function m_ListSockets( change ) {\n      console.log(PR,'SocketList change:',change);\n      // let's use iterators! for..of\n      let values = mu_sockets.values();\n      let count = 1;\n      for (let socket of values) {\n       console.log(PR,`${count} - ${socket.UADDR}`);\n      }\n    }\n\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = UNET;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  UNISYS server loader\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst DBG = false;\n\n///\tLOAD LIBRARIES ////////////////////////////////////////////////////////////\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst UNET      = require('./server-network');\nconst UDB       = require('./server-database');\nconst LOGGER    = require('./server-logger');\n\n/// CONSTANTS /////////////////////////////////////////////////////////////////\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst PROMPTS    = require('../system/util/prompts');\nconst PR         = PROMPTS.Pad('SRV');\n\n/// MODULE VARS ///////////////////////////////////////////////////////////////\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\n/// API CREATE MODULE /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar UNISYS = {};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Initialize() is called by brunch-server.js to define the default UNISYS\n    network values, so it can embed them in the index.ejs file for webapps\n    override = { port }\n/*/ UNISYS.InitializeNetwork = ( override ) => {\n      UDB.InitializeDatabase(override);\n      return UNET.InitializeNetwork(override);\n    };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ RegisterHandlers() is called before network is started, so they're\n    ready to run. These are server-implemented reserved messages.\n/*/ UNISYS.RegisterHandlers = () => {\n\n      UNET.HandleMessage('SRV_REFLECT',function(pkt) {\n        pkt.Data().serverSays='REFLECTING';\n        pkt.Data().stack.push('SRV_01');\n        if (DBG) console.log(PR,sprint_message(pkt));\n        // return the original packet\n        return pkt;\n      });\n\n      UNET.HandleMessage('SRV_REG_HANDLERS',function(pkt) {\n        if (DBG) console.log(PR,sprint_message(pkt));\n        // now need to store the handlers somehow.\n        let data = UNET.RegisterRemoteHandlers(pkt);\n        // or return a new data object that will replace pkt.data\n        return data;\n      });\n\n      UNET.HandleMessage('SRV_DBGET',function(pkt) {\n        if (DBG) console.log(PR,sprint_message(pkt));\n        return UDB.PKT_GetDatabase(pkt);\n      });\n\n      UNET.HandleMessage('SRV_DBSET',function(pkt) {\n        if (DBG) console.log(PR,sprint_message(pkt));\n        return UDB.PKT_SetDatabase(pkt);\n      });\n\n      // receives a packet from a client\n      UNET.HandleMessage('SRV_DBUPDATE',function(pkt) {\n        if (DBG) console.log(PR,sprint_message(pkt));\n        let data = UDB.PKT_Update(pkt);\n        // add src attribute for client SOURCE_UPDATE to know\n        // this is a remote update\n        data.src = 'remote';\n        // fire update messages\n        if (data.node) UNET.NetSend('SOURCE_UPDATE',data);\n        if (data.edge) UNET.NetSend('EDGE_UPDATE', data);\n        if (data.nodeID!==undefined) UNET.NetSend('NODE_DELETE', data);\n        if (data.edgeID!==undefined) UNET.NetSend('EDGE_DELETE',data);\n        // return SRV_DBUPDATE value (required)\n        return { OK:true, info:'SRC_DBUPDATE' };\n      });\n\n      UNET.HandleMessage('SRV_DBGETNODEID',function(pkt) {\n        if (DBG) console.log(PR,sprint_message(pkt));\n        return UDB.PKT_GetNewNodeID(pkt);\n      });\n\n      UNET.HandleMessage('SRV_DBLOCKNODE',function(pkt) {\n        if (DBG) console.log(PR,sprint_message(pkt));\n        return UDB.PKT_RequestLockNode(pkt);\n      });\n\n      UNET.HandleMessage('SRV_DBUNLOCKNODE',function(pkt) {\n        if (DBG) console.log(PR,sprint_message(pkt));\n        return UDB.PKT_RequestUnlockNode(pkt);\n      });\n\n      UNET.HandleMessage('SRV_DBLOCKEDGE', function (pkt) {\n        if (DBG) console.log(PR, sprint_message(pkt));\n        return UDB.PKT_RequestLockEdge(pkt);\n      });\n\n      UNET.HandleMessage('SRV_DBUNLOCKEDGE', function (pkt) {\n        if (DBG) console.log(PR, sprint_message(pkt));\n        return UDB.PKT_RequestUnlockEdge(pkt);\n      });\n\n      UNET.HandleMessage('SRV_DBUNLOCKALLNODES', function (pkt) {\n        if (DBG) console.log(PR, sprint_message(pkt));\n        return UDB.PKT_RequestUnlockAllNodes(pkt);\n      });\n      UNET.HandleMessage('SRV_DBUNLOCKALLEDGES', function (pkt) {\n        if (DBG) console.log(PR, sprint_message(pkt));\n        return UDB.PKT_RequestUnlockAllEdges(pkt);\n      });\n      UNET.HandleMessage('SRV_DBUNLOCKALL', function (pkt) {\n        if (DBG) console.log(PR, sprint_message(pkt));\n        return UDB.PKT_RequestUnlockAll(pkt);\n      });\n\n      UNET.HandleMessage('SRV_DBGETEDGEID', function (pkt) {\n        if (DBG) console.log(PR,sprint_message(pkt));\n        return UDB.PKT_GetNewEdgeID(pkt);\n      });\n\n      UNET.HandleMessage('SRV_LOG_EVENT',function(pkt) {\n        if (DBG) console.log(PR,sprint_message(pkt));\n        return LOGGER.PKT_LogEvent(pkt);\n      });\n\n      // utility function //\n      function sprint_message(pkt) {\n        return `got '${pkt.Message()}' data=${JSON.stringify(pkt.Data())}`;\n      }\n    };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\tStartNetwork() is called by brunch-server after the Express webserver\n/*/\tUNISYS.StartNetwork = () => {\n      UNET.StartNetwork();\n    };\n\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = UNISYS;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst React = require('react');\nconst UNISYS = require('unisys/client');\n\n/** REACT COMPONENT **********************************************************\\\n    Used by render()'s <Switch> to load a React component (what we call a\n    'view' in the NetCreate app). The component should return its elements\n    wrapped in a div with the suggested flexbox pr\n\n    index.html           | body          min-height: 100%\n    index.html           | div#app\n    init-appshell        |   div         display:flex, flex-flow:column nowrap,\n                                         width:100%, height:100vh\n    init-appshell        |     Navbar    position:fixed\n    --- COMPONENT BELOW ---\n    <RequiredComponent>  |     div       this is a child of a flexbox\n\\* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */\nclass AppDefault extends React.Component {\n  constructor() {\n    super();\n    /* UNISYS LIFECYCLE INITIALIZATION */\n    // initialize UNISYS before declaring any hook functions\n    UNISYS.SystemInitialize('assets/htmldemos/d3forcedemo');\n  }\n  render() {\n    return (\n    <div style={{display:'flex', flexFlow:'row nowrap',\n         width:'100%', height:'100%'}}>\n      <div id=\"left\" style={{flex:'1 0 auto'}}>\n      </div>\n      <div id=\"middle\" style={{flex:'3 0 auto'}}>\n        <p>AppDefault.jsx</p>\n        <h4>NetCreate welcomes you</h4>\n        <p>This is a work in progress.</p>\n      </div>\n      <div id=\"right\" style={{flex:'1 0 auto'}}>\n      </div>\n    </div>\n    );\n  }\n  componentDidMount () {\n    console.log('AppDefault mounted');\n  }\n}\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = AppDefault;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/// SYSTEM INTEGRATION ////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst UNISYS      = require('unisys/client');\nconst REFLECT     = require('system/util/reflection');\n/// MAGIC: DevDBLogic will add UNISYS Lifecycle Hooks on require()\nconst LOGIC       = require('./devdb-logic');\nconst {Switch, Route, Redirect, Link} = require('react-router-dom');\n\nvar   DBG         = false;\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst React       = require('react');\nconst ReactStrap  = require('reactstrap');\nconst PROMPTS     = require('system/util/prompts');\nconst PR          = PROMPTS.Pad('DevDB');\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ This is the root component for the view\n/*/ class DevDB extends UNISYS.Component {\n      constructor(props) {\n        super(props);\n        UNISYS.ForceReloadOnNavigation();\n\n        /* INITIALIZE COMPONENT STATE from UNISYS */\n        // get any state from 'VIEW' namespace; empty object if nothing\n        // UDATA.AppState() returns a copy of state obj; mutate/assign freely\n        let state = this.AppState('VIEW');\n        // initialize some state variables\n        state.description = state.description || 'exerciser for database server testing';\n        // REACT TIP: setting state directly works ONLY in React.Component constructor!\n        this.state = state;\n\n        /* UNISYS STATE CHANGE HANDLERS */\n        // bind 'this' context to handler function\n        // then use for handling UNISYS state changes\n        this.UnisysStateChange = this.UnisysStateChange.bind(this);\n        // NOW set up handlers...\n        this.OnAppStateChange('VIEW', this.UnisysStateChange);\n\n      } // constructor\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// UNISYS state change handler - registered by UNISYS.OnStateChange()\n  /// state is coming from UNISYS\n      UnisysStateChange( state ) {\n        if (DBG) console.log(`.. REACT <- state`,state,`via ${this.udata.UID()}'`);\n        // update local react state, which should force an update\n        this.setState(state);\n      }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// COMPONENT state change handler - registered in render()\n  /// state is coming FROM component, which is updating already\n      handleTextChange( event ) {\n        let target = event.target;\n        let state = {\n          description : target.value\n        }\n        if (DBG) console.log(`REACT -> state`,state,`to ${this.udata.UID()}`);\n        this.SetAppState('VIEW',state,this.uni_id);\n      }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// COMPONENT this interface has composed\n      componentDidMount() {\n        // start the application phase\n        let className = REFLECT.ExtractClassName(this);\n        if (DBG) console.log(`${className} componentDidMount`);\n      } // componentDidMount\n\n      StudentRender ({ match }) {\n        console.log('-- STUDENT RENDER --');\n        return (\n          <p style={{color:'red'}}><small>matching subroute: {match.params.unit} {match.params.user}!</small></p>\n        );\n      }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ Try to route the following\n      http://localhost:3000/#dev-unisys/use/student/UNIT_KEY/USER_KEY/\n  /*/ render() {\n        return (\n            <div id='fdshell' style={{padding:'10px'}}>\n              <h2>DB DEVTEST SHELL</h2>\n              <Route path={`${this.props.match.path}/student/:unit/:user`} component={this.StudentRender}/>\n              <p>{this.state.description}</p>\n            </div>\n        );\n      } // render\n\n    } // class DevUnisys\n\n/// EXPORT UNISYS SIGNATURE ///////////////////////////////////////////////////\n/// used in init.jsx to set module scope early\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nDevDB.UMOD = module.id;\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = DevDB;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    DevDBLogic is the companion module that implements the console CLI for\n    manipulating the database on the server\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/// SYSTEM LIBRARIES //////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    const SETTINGS      = require('settings');\n    const UNISYS        = require('unisys/client');\n    const DATASTORE     = require('system/datastore');\n\n/// DEBUG SUPPORT /////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    const DBG           = { handler:false };\n    const PROMPTS       = require('system/util/prompts');\n    const JSCLI         = require('system/util/jscli');\n\n/// INITIALIZE MODULE /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    // module 1\n    const PR            = PROMPTS.Pad('DevDBLogic');\n    var   MOD           = UNISYS.NewModule(module.id);\n    var   UDATA         = UNISYS.NewDataLink( MOD );\n\n/// COMPATIBILITY MODES  //////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Provide Compatibility with DevUnisys instances\n/*/ MOD.Hook('INITIALIZE', function () {\n      console.log('*** INITIALIZE ***');\n      // without NET_SEND_TEST:\n      // fail netCallHandlr, netData, netDataAdd, netDataMulti, netDataReturn\n      // fail netSendHndlr\n\n      // spy on NET_SEND_TEST\n      // does not affect tests\n      UDATA.HandleMessage('NET_SEND_TEST',function(data) {\n        console.log(PR,'snooping NET_SEND_TEST data',JSON.stringify(data));\n      });\n      // add NET_CALL_TEST handler\n      // netData passes, but not specific data tests\n      UDATA.HandleMessage('NET_CALL_TEST',function(data) {\n        console.log(PR,'snooping NET_CALL_TEST data',JSON.stringify(data));\n        // add data.stack to pass netDataMulti, netDataReturn\n        if (data.stack===undefined) data.stack = [];\n        data.stack.push(`DBLOGIC_SNOOP`);\n        data.stack.push(`DBLOGIC_SNOOP`);\n        // add data.reply to pass netDataAdd\n        data.reply = 'DBLOGIC_SNOOP';\n        // must return data for promise to return data to handler\n        // otherwise returns null\n        return data;\n      });\n    });\n\n/// APP_READY MESSAGE REGISTRATION ////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ The APP_READY hook is fired after all initialization phases have finished\n    and may also fire at other times with a valid info packet\n/*/ MOD.Hook('APP_READY', function( info ) {\n      console.log('*** APP_READY ***');\n      return new Promise((resolve,reject) => {\n        let timeout = setTimeout(()=>{\n          reject(Error('UNISYS REGISTER TIMEOUT'));\n        },5000);\n        UNISYS.RegisterMessagesPromise()\n        .then((data)=>{\n          clearTimeout(timeout);\n          console.log('RegisterMessagesPromise() registered handlers with server',data);\n          console.log('This SocketUADDR is',UNISYS.SocketUADDR());\n          resolve();\n        });\n      });\n    });\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ MOD.Hook('START', function () {\n      console.log('*** START ***');\n    });\n\n/// COMMAND LINE UTILITIES ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    MOD.Hook('INITIALIZE', () => {\n      JSCLI.AddFunction(ncPushDatabase);\n    });\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Command: RESET THE DATABASE from default data\n/*/ function ncPushDatabase( jsonFile ) {\n      jsonFile = jsonFile || 'data.reducedlinks.json';\n      DATASTORE.PromiseJSONFile(jsonFile)\n      .then((data)=>{\n        // data is { nodes, edges }\n        console.log(PR,`Sending data from ${jsonFile} to Server`,data);\n        // UDATA.Call() returns a promise, so return it to\n        // continue the asynchronous chain\n        return UDATA.Call('SRV_DBSET', data);\n      })\n      .then((d)=>{\n        if (d.OK) {\n          console.log(`${PR} %cServer Database has been overwritten with ${jsonFile}`,'color:blue');\n          console.log(`${PR} Reload apps to see new data`);\n        } else {\n          console.error(PR,'Server Error',d);\n        }\n      });\n      // return syntax help\n      return \"FYI: ncPushDatabase(jsonFile) can load file in assets/data\";\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n/// EXPORT MODULE /////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = MOD;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/// SYSTEM INTEGRATION ////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst UNISYS      = require('unisys/client');\nconst REFLECT     = require('system/util/reflection');\nconst LOGIC       = require('./devreact-logic');\nconst {Route}     = require('react-router-dom');\n\nvar   DBG         = true;\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst React       = require('react');\nconst PROMPTS     = require('system/util/prompts');\nconst PR          = PROMPTS.Pad('DevReact');\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ This is the root component for the view\n/*/ class DevReact extends UNISYS.Component {\n      constructor(props) {\n        super(props);\n        UNISYS.ForceReloadOnNavigation()\n\n        /* INITIALIZE COMPONENT STATE from UNISYS */\n        // get any state from 'VIEW' namespace; empty object if nothing\n        // UDATA.AppState() returns a copy of state obj; mutate/assign freely\n        let state = this.AppState('VIEW');\n        // initialize some state variables\n        state.description = state.description || 'exerciser for database server testing';\n        // REACT TIP: setting state directly works ONLY in React.Component constructor!\n        this.state = state;\n\n        /* UNISYS STATE CHANGE HANDLERS */\n        // bind 'this' context to handler function\n        // then use for handling UNISYS state changes\n        this.AppStateChange = this.AppStateChange.bind(this);\n        // NOW set up handlers...\n        this.OnAppStateChange('VIEW',this.AppStateChange);\n\n      } // constructor\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// UNISYS state change handler - registered by UNISYS.OnStateChange()\n  /// state is coming from UNISYS\n      AppStateChange( state ) {\n        if (DBG) console.log(`.. REACT <- state`,state,`via ${this.UDATA.UID()}'`);\n        // update local react state, which should force an update\n        this.setState(state);\n      }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// COMPONENT this interface has composed\n      componentDidMount() {\n        // start the application phase\n        let className = REFLECT.ExtractClassName(this);\n        if (DBG) console.log(`${className} componentDidMount`);\n      } // componentDidMount\n\n      StudentRender ({ match }) {\n        console.log('-- STUDENT RENDER --');\n        return (\n          <p style={{color:'red'}}><small>matching subroute: {match.params.unit} {match.params.user}!</small></p>\n        );\n      }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ Try to route the following\n      http://localhost:3000/#dev-unisys/use/student/UNIT_KEY/USER_KEY/\n  /*/ render() {\n        return (\n            <div id='fdshell' style={{padding:'10px'}}>\n              <h2>UNISYS-REACT INTEGRATION TEST SHELL</h2>\n              <Route path={`${this.props.match.path}/student/:unit/:user`} component={this.StudentRender}/>\n              <p>{this.state.description}</p>\n            </div>\n        );\n      } // render\n\n\n    } // class DevUnisys\n\n/// EXPORT UNISYS SIGNATURE ///////////////////////////////////////////////////\n/// used in init.jsx to set module scope early\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nDevReact.UMOD = module.id;\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = DevReact;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n    const DBG           = { handler:false };\n    const JSCLI         = require('system/util/jscli');\n\n/// SYSTEM LIBRARIES //////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    const SETTINGS      = require('settings');\n    const UNISYS        = require('unisys/client');\n\n/// DEBUG SUPPORT /////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    const PROMPTS       = require('system/util/prompts');\n    const PR            = PROMPTS.Pad('DevReactLogic');\n\n/// INITIALIZE MODULE /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    // module 1\n    var   MOD           = UNISYS.NewModule(module.id);\n    var   UDATA         = UNISYS.NewDataLink( MOD );\n\n/// COMPATIBILITY MODES  //////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Provide Compatibility with DevUnisys instances\n/*/ MOD.Hook('INITIALIZE', function () {\n      console.log('*** INITIALIZE ***');\n    });\n\n\n/// APP START HOOK\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ MOD.Hook('START', function () {\n      console.log('*** START ***');\n  /*/ call counter function 3 times 500ms apart, then check that all tests passed\n      set a periodic timer update\n  /*/ var TESTCOUNTER = 3;\n      var TESTINTERVAL = setInterval( function() {\n        if (--TESTCOUNTER<0) {\n          clearInterval(TESTINTERVAL);\n        }\n        // https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\n        function u_random_string() {\n          var text = \"\";\n          var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n          for (var i = 0; i < 5; i++) {\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n          }\n          return text;\n        }\n        let state = { random: u_random_string() };\n        UDATA.SetAppState('VIEW',state,UDATA.UID());\n      },500);\n    });\n\n/// APP_READY HOOK REGISTRATION ///////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ The APP_READY hook is fired after all initialization phases have finished\n    and may also fire at other times with a valid info packet\n/*/ MOD.Hook('APP_READY', function( info ) {\n      info = info || {};\n      console.log('*** APP_READY ***');\n    });\n\n/// COMMAND LINE UTILITIES ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    let CMD = [];\n    MOD.Hook('INITIALIZE', () => {\n      JSCLI.AddFunction(ncTest);\n    });\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Command: RESET THE DATABASE from default data\n/*/ function ncTest( jsonFile ) {\n      return \"ncTest() exiting\";\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n/// EXPORT MODULE /////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = MOD;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/// SYSTEM INTEGRATION ////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst UNISYS      = require('unisys/client');\nconst REFLECT     = require('system/util/reflection');\n/// MAGIC: DevDBLogic will add UNISYS Lifecycle Hooks on require()\nconst LOGIC       = require('./devsession-logic');\nconst {Switch, Route, Redirect, Link} = require('react-router-dom');\n\nvar   DBG         = false;\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst React       = require('react');\nconst ReactStrap  = require('reactstrap');\nconst PROMPTS     = require('system/util/prompts');\nconst PR          = PROMPTS.Pad('DevSession');\nconst SESSION     = require('unisys/common-session');\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ This is the root component for the view\n/*/ class DevSession extends UNISYS.Component {\n      constructor(props) {\n        super(props);\n        UNISYS.ForceReloadOnNavigation();\n\n        /* INITIALIZE COMPONENT STATE from UNISYS */\n        // get any state from 'VIEW' namespace; empty object if nothing\n        // UDATA.AppState() returns a copy of state obj; mutate/assign freely\n        let state = this.AppState('VIEW');\n        // initialize some state variables\n        state.description = state.description || 'session logic testbed';\n        // REACT TIP: setting state directly works ONLY in React.Component constructor!\n        this.state = state;\n\n        /* UNISYS STATE CHANGE HANDLERS */\n        // bind 'this' context to handler function\n        // then use for handling UNISYS state changes\n        this.UnisysStateChange = this.UnisysStateChange.bind(this);\n        // NOW set up handlers...\n        this.OnAppStateChange('VIEW', this.UnisysStateChange);\n\n      } // constructor\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// UNISYS state change handler - registered by UNISYS.OnStateChange()\n  /// state is coming from UNISYS\n      UnisysStateChange( state ) {\n        if (DBG) console.log(`.. REACT <- state`,state,`via ${this.udata.UID()}'`);\n\n        // update local react state, which should force an update\n        this.setState(state);\n      }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// COMPONENT state change handler - registered in render()\n  /// state is coming FROM component, which is updating already\n      handleTextChange( event ) {\n        let target = event.target;\n        let state = {\n          description : target.value\n        }\n        if (DBG) console.log(`REACT -> state`,state,`to ${this.udata.UID()}`);\n        this.SetAppState('VIEW',state,this.uni_id);\n      }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// COMPONENT this interface has composed\n      componentDidMount() {\n        // start the application phase\n        let className = REFLECT.ExtractClassName(this);\n        if (DBG) console.log(`${className} componentDidMount`);\n      } // componentDidMount\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n      SessionEdit ({ match, location }) {\n        console.log(`SessionEdit edit/${match.params.token}`);\n        let token = match.params.token;\n        let decoded = SESSION.DecodeToken(token);\n        if (decoded) {\n          console.log('DECODED',decoded);\n          return (\n            <div>\n              <p>\n                <small>matching subroute: [{token}]</small><br/>\n                <span style={{color:'green'}}><small>valid token: groupID {decoded.groupId}</small></span>\n              </p>\n            </div>\n          );\n        } else {\n          return (\n            <div>\n              <p>\n                <small>matching subroute: [{token}]</small><br/>\n                <span style={{color:'red'}}><small>COULD NOT DECODE TO VALID GROUP ID</small></span>\n              </p>\n            </div>\n          );\n        }\n      }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ Try to route the following\n      http://localhost:3000/#dev-unisys/use/student/UNIT_KEY/USER_KEY/\n  /*/ render() {\n        return (\n            <div id='fdshell' style={{padding:'10px'}}>\n              <h2>SESSIONS DEV TESTING</h2>\n              <Route path={`${this.props.match.path}/edit/:token`} component={this.SessionEdit}/>\n              <p>{this.state.description}</p>\n            </div>\n        );\n      } // render\n\n    } // class DevUnisys\n\n/// EXPORT UNISYS SIGNATURE ///////////////////////////////////////////////////\n/// used in init.jsx to set module scope early\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nDevSession.UMOD = module.id;\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = DevSession;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    DevDBLogic is the companion module that implements the console CLI for\n    manipulating the database on the server\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/// SYSTEM LIBRARIES //////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    const SETTINGS      = require('settings');\n    const UNISYS        = require('unisys/client');\n    const DATASTORE     = require('system/datastore');\n    const SESSION       = require('unisys/common-session');\n    const JSCLI         = require('system/util/jscli');\n\n/// DEBUG SUPPORT /////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    const PROMPTS       = require('system/util/prompts');\n    const DBG           = { handler:false };\n\n/// INITIALIZE MODULE /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    // module 1\n    const PR            = PROMPTS.Pad('DevDBLogic');\n    var   MOD           = UNISYS.NewModule(module.id);\n    var   UDATA         = UNISYS.NewDataLink( MOD );\n\n/// COMPATIBILITY MODES  //////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ MOD.Hook('INITIALIZE', function () {\n      console.log('*** INITIALIZE ***');\n    });\n\n/// APP_READY MESSAGE REGISTRATION ////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ The APP_READY hook is fired after all initialization phases have finished\n    and may also fire at other times with a valid info packet\n/*/ MOD.Hook('APP_READY', function( info ) {\n      console.log('*** APP_READY ***');\n      return new Promise((resolve,reject) => {\n        let timeout = setTimeout(()=>{\n          reject(Error('UNISYS REGISTER TIMEOUT'));\n        },5000);\n        UNISYS.RegisterMessagesPromise()\n        .then((data)=>{\n          clearTimeout(timeout);\n          console.log('RegisterMessagesPromise() registered handlers with server',data);\n          console.log('This SocketUADDR is',UNISYS.SocketUADDR());\n          resolve();\n        });\n      });\n    });\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ MOD.Hook('START', function () {\n      console.log('*** INITIALIZE ***');\n    });\n\n\n/// EXPORT MODULE /////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = MOD;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/// SYSTEM INTEGRATION ////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst UNISYS      = require('unisys/client');\nconst REFLECT     = require('system/util/reflection');\n/// MAGIC: DevUnisysLogic will add UNISYS Lifecycle Hooks on require()\nconst LOGIC       = require('./devunisys-logic');\nconst {Switch, Route, Redirect, Link} = require('react-router-dom');\n\n\nconst TEST        = require('test');\nvar   DBG         = false;\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst React       = require('react');\nconst ReactStrap  = require('reactstrap');\nconst { InputGroup, InputGroupAddon, InputGroupText, Input } = ReactStrap;\nconst { Alert }   = ReactStrap;\nconst PROMPTS     = require('system/util/prompts');\nconst PR          = PROMPTS.Pad('DevUnisys');\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ This is the root component for the view\n/*/ class DevUnisys extends UNISYS.Component {\n      constructor(props) {\n        super(props);\n        UNISYS.ForceReloadOnNavigation();\n\n        /* INITIALIZE COMPONENT STATE from UNISYS */\n        // get any state from 'VIEW' namespace; empty object if nothing\n        // UDATA.AppState() returns a copy of state obj; mutate/assign freely\n        let state = this.AppState('VIEW');\n        // initialize some state variables\n        state.description = state.description || 'uninitialized description';\n        // REACT TIP: setting state directly works ONLY in React.Component constructor!\n        this.state = state;\n\n        /* LOCAL INTERFACE HANDLERS */\n        this.handleTextChange  = this.handleTextChange.bind(this);\n\n        /* UNISYS STATE CHANGE HANDLERS */\n        // bind 'this' context to handler function\n        // then use for handling UNISYS state changes\n        this.UnisysStateChange = this.UnisysStateChange.bind(this);\n        // NOW set up handlers...\n        this.OnAppStateChange('VIEW', this.UnisysStateChange);\n        this.OnAppStateChange('LOGIC', this.UnisysStateChange);\n\n        /* UNISYS TEST HANDLERS */\n        // note: in a UNISYS.Component, register your handlers in\n        // the constructor\n        if (TEST('remote')) {\n          this.HandleMessage('REMOTE_CALL_TEST',(data) => {\n            data.cat = 'calico';\n            data.melon += '_ack';\n            return data;\n          });\n        }\n        if (TEST('call')) {\n          this.HandleMessage('TEST_CALL',(data)=>{\n            if (!data.stack) data.stack=[]; data.stack.push('TRI-JSX');\n            return data;\n          });\n        }\n\n      } // constructor\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// UNISYS state change handler - registered by UNISYS.OnStateChange()\n  /// state is coming from UNISYS\n      UnisysStateChange( state ) {\n        if (DBG) console.log(`.. REACT <- state`,state,`via ${this.udata.UID()}'`);\n        // update local react state, which should force an update\n        this.setState(state);\n      }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// COMPONENT state change handler - registered in render()\n  /// state is coming FROM component, which is updating already\n      handleTextChange( event ) {\n        let target = event.target;\n        let state = {\n          description : target.value\n        }\n        if (DBG) console.log(`REACT -> state`,state,`to ${this.udata.UID()}`);\n        this.SetAppState('VIEW',state,this.uni_id);\n      }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// COMPONENT this interface has composed\n      componentDidMount() {\n        // start the application phase\n        let className = REFLECT.ExtractClassName(this);\n        if (DBG) console.log(`${className} componentDidMount`);\n\n        /* UNISYS TEST MESSAGE HANDLER INVOCATION */\n        if (TEST('call')) {\n          // INVOKE remove call\n          this.AppCall('TEST_CALL',{ source : 'DevUnisysJSX' })\n          // test data return\n          .then((data)=>{\n            if (data && data.source && data.source==='DevUnisysLogic-Return') TEST.Pass('callDataReturn');\n            if (data && data.extra && data.extra==='AddedData') TEST.Pass('callDataAdd');\n            if (data && data.multi && data.stack && data.stack.length===3 && data.multi==='MultiData') TEST.Pass('callDataMulti');\n          });\n        }\n      } // componentDidMount\n\n      StudentRender ({ match }) {\n        console.log('-- STUDENT RENDER --');\n        return (\n          <p style={{color:'red'}}><small>matching subroute: {match.params.unit} {match.params.user}!</small></p>\n        );\n      }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ Try to route the following\n      http://localhost:3000/#dev-unisys/use/student/UNIT_KEY/USER_KEY/\n  /*/ render() {\n        return (\n            <div id='fdshell' style={{padding:'10px'}}>\n              <h2>Unisys Feature Development Shell</h2>\n              <Route path={`${this.props.match.path}/student/:unit/:user`} component={this.StudentRender}/>\n              <h4>UISTATE TESTS</h4>\n              <p>{this.state.description}</p>\n              <Input type=\"text\" name=\"desc\" id=\"desc\" placeholder=\"text to change\" onChange={this.handleTextChange} />\n              <p>random string from LOGIC: {this.state.random || 'notset'}</p>\n            </div>\n        );\n      } // render\n\n\n    } // class DevUnisys\n\n/// EXPORT UNISYS SIGNATURE ///////////////////////////////////////////////////\n/// used in init.jsx to set module scope early\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nDevUnisys.UMOD = module.id;\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = DevUnisys;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    TEST REACT INTEGRATION through UNISYS\n\n    Things that UNISYS has to do:\n    [x] handle startup phases\n    [ ] how to handle the update cycle? need to review bencode\n    [ ] how to handle loading of app settings? punt\n    [ ] using subscribers\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/// SYSTEM LIBRARIES //////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    const SETTINGS      = require('settings');\n    const UNISYS        = require('unisys/client');\n    // master TEST enable is in DevUnisys.JSX constructor()\n    // but most are tested and passed in this module\n    const TEST          = require('test');\n\n/// DEBUG SUPPORT /////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    const DBG           = { handler:false };\n    const PROMPTS       = require('system/util/prompts');\n    const JSCLI         = require('system/util/jscli');\n    // these constants are used in m_StartTests()\n    const TEST_WAIT     = 3000;\n    var   TEST_TIMER    = null;\n\n/// INITIALIZE MODULE /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    // module 1\n    const PR            = PROMPTS.Pad('DUL');\n    var   MOD           = UNISYS.NewModule(module.id);\n    var   UDATA         = UNISYS.NewDataLink( MOD );\n    // module 2\n    var   MOD2          = UNISYS.NewModule(module.id);\n    var   UDATA2        = UNISYS.NewDataLink(MOD2,'SimRemote');\n    const PR2           = PROMPTS.Pad('DUL-REM');\n\n/// CONFIGURE TESTS ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ TEST_CONF lifecycle hook runs before anything else except for unscoped\n    code in a module\n/*/ MOD.Hook('TEST_CONF', function () {\n      /* CONFIGURE UNISYS TESTS */\n      // enable debug output and tests\n      // true = enabled, false = skip\n      TEST('state'  , true);  // state events and changes\n      TEST('hook'   , true);  // lifecycle hooks\n      TEST('call'   , true);  // internal instance calls\n      TEST('remote' , true);  // instance-to-instance calls\n      TEST('server' , true);  // server calls\n      TEST('net'    , true);  // network initialization\n      TEST();\n    });\n\n/// LIFECYCLE TESTS ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ First INITIALIZE Hook takes some time to resolve asynchronously\n    Enable this feature by returning a Promise\n/*/ MOD.Hook('INITIALIZE', function () {\n      if (!TEST('hook')) return Promise.resolve('immediate');\n      TEST.Pass('hookInit1');\n      let tms = 1000;\n      let p = new Promise(function (resolve,reject) {\n        setTimeout(\n          () => {\n            // if a hook returns a promise, then lifecycle waits\n            // until all promises are resolved\n            TEST.Pass('hookInitDeferred');\n            resolve('hookInitDeferred');\n          },\n          tms\n        );\n      }); // new Promise\n      return p;\n    });\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Second INITIALIZE Hook just runs a normal function.\n    Enable this feature by returning a Function\n/*/ MOD.Hook('INITIALIZE', function() {\n      if (TEST('hook')) TEST.Pass('hookInit2');\n    }); // end INITIALIZE 2\n\n\n/// OTHER TESTS ///////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Initialize message handlers during INITIALIZE so we can run them later\n    during START\n/*/ MOD.Hook('INITIALIZE', function() {\n      if (TEST('call')) {\n\n        // 'TEST_CALL' is invoked from DevUnisys.jsx\n        UDATA.HandleMessage('TEST_CALL',(data)=>{\n          if (data && data.source) TEST.Pass('callHndlrReg');\n          if (typeof data==='object') TEST.Pass('callHndlrData');\n          if (typeof data.source==='string' && data.source==='DevUnisysJSX') TEST.Pass('callHndlrDataProp');\n          data.source = 'DevUnisysLogic-Return';\n          if (!data.stack) data.stack=[]; data.stack.push('TRI-1');\n          data.extra = 'AddedData';\n          return data;\n        });\n        // a second 'TEST_CALL' to test aggregate data return\n        UDATA.HandleMessage('TEST_CALL',(data)=>{\n          if (!data.stack) data.stack=[]; data.stack.push('TRI-2');\n          return Object.assign(data,{ multi : 'MultiData' });\n        });\n      }\n\n      // 'REMOTE_CALL_TEST' is invoked from MOD2\n      // note that there are multiple handlers for 'REMOTE_CALL_TEST'\n      // to test collecting data from all of them\n      if (TEST('remote')) {\n        UDATA.HandleMessage('REMOTE_CALL_TEST',(data,ucontrol) => {\n          if (DBG.handler) console.log('REMOTE_CALL_TEST got data',data);\n          TEST.Pass('remoteCall');\n          if (data&&Array.isArray(data.results)) {\n            TEST.Pass('remoteData');\n            data.results.push('UDATA_instance');\n          }\n          // caller should check remoteDataAdd and remoteDataMulti\n          return data;\n        });\n      }\n    }); // end INITIALIZE 3\n\n/// TEST STATE ////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Initialize in module 1\n/*/ MOD.Hook('INITIALIZE', function () {\n      let state = {\n        deep : { deep_a : 1 },\n        arr : [ 1, 3, 2 ],\n        a : 1\n      };\n      UDATA.MergeAppState('testmerge', state);\n      state = {\n        arr : [ 1, 2, 3 ]\n      }\n      UDATA.ConcatAppState('testconcat', state);\n    });\n/*/ Initialize in module 2\n/*/ MOD2.Hook('INITIALIZE', function () {\n      let state = {\n        deep : { deep_b : 2 },\n        arr : [ 10, 11, 12 ],\n        b : 2\n      };\n      UDATA2.MergeAppState('testmerge', state);\n      state = {\n        arr : [ 1, 2, 3 ]\n      }\n      UDATA.ConcatAppState('testconcat', state);\n    });\n/*/ test merging in module 2\n/*/ MOD2.Hook('START', function () {\n      let expected = '{\"deep\":{\"deep_a\":1,\"deep_b\":2},\"arr\":[1,3,2,10,11,12],\"a\":1,\"b\":2}';\n      let serialized = JSON.stringify(UDATA2.AppState('testmerge'));\n      if (expected===serialized) TEST.Pass('stateMerge');\n      expected = '{\"arr\":[1,2,3,1,2,3]}';\n      serialized = JSON.stringify(UDATA.AppState('testconcat'));\n      if (expected===serialized) TEST.Pass('stateConcat');\n      console.log(serialized);\n    });\n\n\n/// APP_READY MESSAGE REGISTRATION ////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ The APP_READY hook is fired after all initialization phases have finished\n    and may also fire at other times with a valid info packet\n/*/ MOD.Hook('APP_READY', function( info ) {\n      info = info || {};\n      if (TEST('hook')) TEST.Pass('hookStart');\n      UNISYS.RegisterMessagesPromise()\n      .then((data)=>{\n        // console.log('RegisterMessagesPromise() registered handlers with server',data);\n        if (TEST('net')) TEST.Pass('netMessageReg');\n      });\n    });\n\n/// SECOND MODULE for MODULE-to-MODULE TESTS //////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ MOD2 is a completely different UNISYS MODULE declaration for ensuring that\n    modules can access data in other modules. Has its own LIFECYCLE naturally.\n    First declare message handlers during INITIALIZE\n/*/ MOD2.Hook('INITIALIZE', function() {\n      if (TEST('remote')) {\n        UDATA2.HandleMessage('REMOTE_CALL_TEST',(data) => {\n          if (data&&Array.isArray(data.results)) {\n            data.results.push('UDATA2_instance');\n            if (DBG.handler) console.log(PR2,'got REMOTE_CALL_TEST message with data',data);\n            TEST.Pass('remoteData2');\n          }\n        });\n      }\n    });\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Now test message handlers during START\n/*/ MOD2.Hook('START', function() {\n      if (TEST('remote')) {\n        // test remote data call (local, not network)\n        UDATA2.LocalCall('REMOTE_CALL_TEST',{ mycat:'kitty',results:[] })\n        .then((data)=>{\n          if (data.mycat==='kitty') TEST.Pass('remoteDataReturn');\n        });\n      }\n    });\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Test State is set during start\n    'test' a,b were set by separate INITIALIZE methods\n    in different modules\n/*/ MOD2.Hook('START', function() {\n      if (TEST('remote')) {\n        // test remote data call (local, not network)\n        UDATA2.LocalCall('REMOTE_CALL_TEST',{ mycat:'kitty',results:[] })\n        .then((data)=>{\n          if (data.mycat==='kitty') TEST.Pass('remoteDataReturn');\n        });\n      }\n    });\n\n\n/// SERVER CALL TESTS /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Now test message handlers during START\n/*/ MOD2.Hook('START', function() {\n      // TEST SERVER NETWORK CALL\n      if (TEST('server')) {\n        // used for order testing\n        let sendorder = [];\n        let recvorder = [];\n        // only test network calls\n        let netOnly = { toLocal : false, toNet : true };\n        for (let i=0; i<5; i++) {\n          setTimeout(function() {\n            sendorder.push(i);\n            UDATA2.Call('SRV_REFLECT',{\n              me    : 'DevUnisysLogic:MOD2.Start',\n              stack : ['DevUnisysLogic'],\n              count : i\n            }, netOnly)\n            .then((data)=>{\n              if (DBG.handler) console.log(PR2,'got SRV_RFLECT',data);\n              TEST.Pass('serverCall');\n              if ((data!==undefined)&&(Array.isArray(data.stack))) TEST.Pass('serverData');\n              if ((data.stack)&&(data.stack.length===2)&&(data.stack[1]==='SRV_01')) TEST.Pass('serverDataAdd');\n              if (data.me && data.me==='DevUnisysLogic:MOD2.Start') TEST.Pass('serverReturn');\n              recvorder.push(data.count);\n            });\n          },Math.random()*1000);\n        }\n        TEST.AssessArrayMatch('serverCallOrder',sendorder,recvorder);\n      } // end TEST('server')\n    });\n\n\n/// UNISYS NETWORK SEND/CALL/SIGNAL TESTS /////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ define test handler\n/*/ MOD2.Hook('INITIALIZE', function() {\n      if (TEST('net')) {\n        UDATA2.HandleMessage('NET_CALL_TEST',(data) => {\n          // console.log(`*** NET_CALL_TEST (1) got data called by ${JSON.stringify(data.stack)} from socket ${UNISYS.SocketUADDR()}`);\n          data.reply=`hi from ${UNISYS.SocketUADDR()}`;\n          if (data.stack===undefined) data.stack = [];\n          data.stack.push(`${UNISYS.SocketUADDR()}_01`);\n          TEST.Pass('netCallHndlr');\n          return data;\n        });\n        UDATA2.HandleMessage('NET_CALL_TEST',(data) => {\n          // console.log(`*** NET_CALL_TEST (2) got data called by ${JSON.stringify(data.stack)} from socket ${UNISYS.SocketUADDR()}`);\n          if (data.stack===undefined) data.stack = [];\n          data.stack.push(`${UNISYS.SocketUADDR()}_02`);\n          return data;\n        });\n        UDATA2.HandleMessage('NET_SIGNAL_TEST',(data) => {\n          if (typeof data.source==='string') TEST.Pass('netSignal');\n          if (data.source===UNISYS.SocketUADDR()) TEST.Pass('netSignalEcho');\n        });\n        UDATA2.HandleMessage('NET_SEND_TEST',(data) => {\n          // send only targets other instances, not the sending one\n          // console.log(`*** NET_SEND_TEST got data called by ${data.source} from socket ${UNISYS.SocketUADDR()}`);\n          if (data.source===UNISYS.SocketUADDR()) {\n            TEST.Fail('netSendNoEcho');\n            // console.log(`*** NET_SEND_TEST fail netSendNoEcho`);\n          } else {\n            // this triggers if the data source DOES NOT MATCH our own data socket\n            TEST.Pass('netSendHndlr');\n            // console.log(`*** NET_SEND_TEST pass netSend`);\n          }\n        });\n      }\n    });\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ invoke test handler on OTHER instance\n/*/ MOD2.Hook('START', function() {\n      setTimeout(delayed_send,2000);\n      // inline function\n      function delayed_send() {\n        if (!TEST('net')) return;\n        let uaddr = UNISYS.SocketUADDR();\n        let greeting = `hi from ${uaddr}`;\n        let call = { test:'netcall', greeting };\n        // test signal\n        UDATA2.NetSignal('NET_SIGNAL_TEST',{ test:'netsignal', source : uaddr });\n        // test call (note this is from UDATA, not UDATA2)\n        UDATA.NetCall('NET_CALL_TEST', call)\n        .then((d)=>{\n          // console.log(`*** NET_CALL_TEST (REPLY) got data returned ${JSON.stringify(d.stack)} from socket ${UNISYS.SocketUADDR()}`);\n          if ((typeof d==='object')&&(!d.NOP)) TEST.Pass('netData');\n          if (typeof d.reply==='string') TEST.Pass('netDataAdd');\n          if (d.greeting===greeting) TEST.Pass('netDataReturn');\n          if (Array.isArray(d.stack) && d.stack.length>1) TEST.Pass('netDataMulti');\n        });\n        // test send\n        UDATA2.NetSend('NET_SEND_TEST',{ test:'netsend', source : uaddr  });\n      }\n    });\n\n/// TEST STARTUP //////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ The START phase executes after INITIALIZE has completed.\n    we register handlers to the VIEW state namespace,\n    and also set different namespace states on timers\n/*/ MOD.Hook('START', function () {\n  /// ASSESS TESTS AFTER TEST_WAIT MS\n      console.log('*** RUNNING UNISYS TESTS ***');\n      TEST.SetTitle('RUNNING TESTS');\n      TEST.SetMeta('socket',UNISYS.SocketUADDR());\n      TEST_TIMER = setTimeout(TEST.Assess,TEST_WAIT);\n\n  /// STATE CHANGE TESTING\n  /*/ register state change handler for 'VIEW' namespace\n  /*/ if (TEST('state')) {\n        UDATA.OnAppStateChange('VIEW',(state)=>{\n          TEST.Pass('stateChange');\n        });\n        // Do the state change test!\n        setTimeout( function () {\n          let state = { description : 'test stateChange succeeded' };\n          UDATA.SetAppState('VIEW',state,UDATA.UID());\n        },1000);\n      } // if TEST state\n\n  /// NETWORK TESTING\n  /*/ remote method invocation of REMOTE_CALL_TEST is expected to return data in a callback\n  /*/ if (TEST('remote')) {\n        UDATA.HandleMessage('REMOTE_CALL_TEST',(data, msgcon) => {\n          // 'REMOTE_CALL_TEST' is also implemented in DevUnisys.jsx\n          // so its return data will be merged with this\n          return { dog : 'spotted' };\n        });\n        // Do the call test!\n        UDATA.LocalCall('REMOTE_CALL_TEST',{melon:'logicmelon'})\n        .then((data) => {\n          if (data && data.melon && data.cat) TEST.Pass('remoteData');\n          if (data.melon==='logicmelon_ack' && data.cat==='calico') TEST.Pass('remoteDataAdd');\n          if (data.dog && data.dog==='spotted') TEST.Pass('remoteDataMulti');\n        });\n      } // if TEST remote\n\n  /*/ call counter function 3 times 500ms apart, then check that all tests passed\n      set a periodic timer update\n  /*/ var TESTCOUNTER = 3;\n      var TESTINTERVAL = setInterval( function() {\n        if (--TESTCOUNTER<0) {\n          clearInterval(TESTINTERVAL);\n        }\n        // https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\n        function u_random_string() {\n          var text = \"\";\n          var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n          for (var i = 0; i < 5; i++) {\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n          }\n          return text;\n        }\n        let state = { random: u_random_string() };\n        UDATA.SetAppState('LOGIC',state,UDATA.UID());\n      },500);\n  }); // end START TEST HOOK\n\n\n/// EXPORT MODULE /////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = MOD;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    NetCreate\n\n    The basic React Component structure of the app looks like this:\n\n        NetCreate\n        +- NodeSelector\n        |  +- NodeDetail\n        |  +- AutoComplete\n        |  |  +- AutoSuggest\n        |  +- EdgeEntry\n        |     +- *AutoComplete (for Target Node)*\n        +- NetGraph\n           +- D3SimpleNetGraph\n              +- D3\n\n    `NetCreate` is the root element. It is a wrapper for the key app\n    elements `NodeSelector` and `NetGraph`.\n\n    It does not do any data or event handling.  Those are handled individually\n    by the respective Components.\n\n  * All state is maintained in `nc-logic.js`\n  * It handles events from NodeSelector, EdgeEntry, and NetGraph components\n      and passes data and upates across them.\n\n    PROPS  ... (none)\n    STATE  ... (none)\n    EVENTS ... (none)\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/// UNISYS INITIALIZE REQUIRES for REACT ROOT /////////////////////////////////\nconst UNISYS       = require('unisys/client');\nconst SessionShell = require('unisys/component/SessionShell');\n\n/// DEBUG SWITCHES ////////////////////////////////////////////////////////////\nvar   DBG          = false;\nconst PROMPTS      = require('system/util/prompts');\nconst PR           = PROMPTS.Pad('ACD');\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst React        = require('react');\nconst { Route }    = require('react-router-dom');\nconst NetGraph     = require('./components/NetGraph');\nconst Search       = require('./components/Search');\nconst NodeSelector = require('./components/NodeSelector');\nconst InfoPanel    = require('./components/InfoPanel');\nconst NCLOGIC      = require('./nc-logic'); // require to bootstrap data loading\n\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ class NetCreate extends UNISYS.Component {\n      constructor () {\n        super();\n        UNISYS.ForceReloadOnNavigation();\n        this.OnDOMReady(()=>{\n          if (DBG) console.log(PR,'OnDOMReady');\n        });\n        this.OnReset(()=>{\n          if (DBG) console.log(PR,'OnReset');\n        });\n        this.OnStart(()=>{\n          if (DBG) console.log(PR,'OnStart');\n        });\n        this.OnAppReady(()=>{\n          if (DBG) console.log(PR,'OnAppReady');\n        });\n        this.OnRun(()=>{\n          if (DBG) console.log(PR,'OnRun');\n        });\n      }\n\n\n\n\n  /// REACT LIFECYCLE METHODS ///////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ This is the root component, so this fires after all subcomponents have\n      been fully rendered by render().\n  /*/ componentDidMount () {\n        // Init dragger\n        let dragger = document.getElementById('dragger');\n        dragger.onmousedown = this.handleMouseDown;\n      }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ Define the component structure of the web application\n  /*/ render() {\n        return (\n          <div>\n            <div style={{display:'flex', flexFlow:'row nowrap',\n                width:'100%', height:'100vh',overflow:'hidden'}}>\n              <div id=\"left\" style={{backgroundColor:'#EEE',flex:'1 1 25%',maxWidth:'400px',padding:'10px',overflow:'scroll',marginTop:'56px'}}>\n                <div style={{display:'flex',flexFlow:'column nowrap'}}>\n                  <Route path='/edit/:token' exact={true} component={SessionShell}/>\n                  <Route path='/edit' exact={true} component={SessionShell}/>\n                  <Route path='/' exact={true} component={SessionShell}/>\n                  <Search/>\n                  <NodeSelector/>\n                </div>\n              </div>\n              <div id=\"middle\" style={{backgroundColor:'#fcfcfc', flex:'3 0 60%', padding:'10px',marginTop:'56px'}}>\n                <InfoPanel/>\n                <NetGraph/>\n                <div style={{fontSize:'10px',position:'absolute',left:'0px',bottom:'0px',zIndex:'1500',color:'#aaa',backgroundColor:'#eee',padding:'5px 10px'}}>Please contact Professor\n                Kalani Craig, Institute for Digital Arts & Humanities at\n                (812) 856-5721 (BH) or\n                craigkl@indiana.edu with questions or concerns and/or to\n                request information contained on this website in an accessible\n                format.</div>\n              </div>\n            </div>\n          </div>\n        ); // end return\n      } // end render()\n    } // end class NetCreate\n\n/// EXPORT UNISYS SIGNATURE ///////////////////////////////////////////////////\n/// used in init.jsx to set module scope early\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nNetCreate.UMOD = module.id;\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NetCreate\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n      ## OVERVIEW\n\n      AutoComplete is the text input field for entering node labels to:\n      * search for nodes,\n      * edit existing nodes,\n      * and add new nodes.\n      * view the current selection/setting when searching for a node\n      * view the current selection/setting for an edge source or target\n\n\n\n      ## MAIN FEATURES\n\n      * It interactively provides a list of suggestions that match the current\n        input, e.g. typing \"ah\" will display a list of suggestions including \"Ah\n        Long\", \"Ah Seung\", and \"Oahu Railroad Station\".\n\n      * Users can highlight suggestions (via mouseover or with keyboard arrows)\n\n      * Users can select a suggestion (via clicking or hitting return)\n\n      * Only one AutoComplete component can be active at a time in an app.\n        Since there can be multiple AutoComplete components on a single page\n        (e.g. multiple edges along with the source), we disable the component\n        when it isn't active.\n\n      * When the AutoComplete component is disabled, it will display a\n        generic INPUT component instead of the Autosuggest component.\n\n      * When the AutoComplete component is disabled, since it will not\n        receive SELECTION updates, we need to pass it the current field\n        value via the this.props.disabledValue.\n\n      AutoComplete is a wrapper class for the open source AutoSuggest component,\n      which handles the actual rendering of the suggestions list.  AutoComplete\n      provides an interface to NodeSelector and EdgeEntry.  AutoComplete also\n      provides the handler routines for generating the suggestions list and\n      handling highlights and selections.  Data is passed to AutoComplete via\n      UDATA SELECTION state changes.\n\n      This relies on the react-autosuggest component.\n      See documentation: https://github.com/moroshko/react-autosuggest\n\n\n\n      ## TO USE\n\n          <AutoComplete\n            isDisabled={this.state.canEdit}\n            disabledValue={this.state.formData.label}\n            inactiveMode={'disabled'}\n          />\n\n\n\n      ## TECHNICAL DESCRIPTION\n\n      AutoComplete handles five basic functions:\n\n      1. Show suggestions when the user types in the input search field.\n      2. Mark nodes on graph when the user changes the search field.\n      3. Set selection when user clicks on a suggestion.\n      4. Show the label if the node is selected externally\n         (via a click on the graph)\n      5. Provide an edit field for the label when the user is editing a node\n         (during edit, show suggestions, but don't select anything?)\n\n      The Autosuggest input field is a controlled field.\n      It is controlled via this.state.value.\n      See https://reactjs.org/docs/forms.html#controlled-components\n\n      Sequence of Events\n\n      1. When the user types in the Autosuggest input field,\n      2. AutoComplete makes a UDATA SOURCE_SEARCH call\n      3. nc-logic handles the call and returns a SELECTION state update\n      4. AutoComplete then sets the Autosuggest input field value via\n         this.state.value.\n      5. The updated SELECTION state also contains a list of\n         suggestedNodeLabels that is used by Autosuggest whenever it\n         requests a list of suggestions.\n\n\n\n      ## HIGHLIGHTING vs MARKING\n\n      \"Highlighting\" refers to the temporary rollover highlight of a suggested node\n      in the suggestion list.  \"Marking\" refers to the stroked color of a node\n      circle on the D3 graph.\n\n\n\n      ## PROPS\n\n      identifier\n\n            A unique ID for identifying which AutoComplete component is active\n            within the whole app system.\n\n      disabledValue\n\n            When the AutoComplete component is not active, it should display\n            the currently selected node (rather than be an active input field\n            for selecting a new node).  This is the label for that node.\n\n      inactiveMode\n\n            When the AutoComplete component is not active, it can be either\n            'static' or 'disabled' depending on the parent field.  This prop\n            sets which of these modes the field should default to:\n\n            'static'   -- an unchangeable field, e.g. the Source node for an\n                          edge is always going to be the Source label.  It\n                          cannot be changed.\n            'disabled' -- a changeable field that is not currently activated,\n                          e.g. the Target node for an edge.\n\n      shouldIgnoreSelection\n\n            Used by NodeSelector and EdgeEditor's target node field\n            to prevent user from selecting another node\n            while editing a node.\n\n      Based on example code from https://codepen.io/moroshko/pen/vpBzMr\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nvar DBG = false;\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst React       = require('react');\nconst ReactStrap  = require('reactstrap');\nconst { Input }   = ReactStrap;\nconst Autosuggest = require('react-autosuggest');\n\nconst UNISYS      = require('unisys/client');\n\nconst MODE_STATIC   = 'static';   // Can't be edited ever\nconst MODE_DISABLED = 'disabled'; // Can be edited, but not at the moment\nconst MODE_ACTIVE   = 'active';   // Currently able to edit\n\nvar   _IsMounted  = false;\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass AutoComplete extends UNISYS.Component {\n\n    constructor() {\n      super();\n      this.state = {\n        value       : '',\n        suggestions : [],\n        id          : '',\n        mode        : MODE_DISABLED\n      };\n\n      this.onStateChange_SEARCH        = this.onStateChange_SEARCH.bind(this);\n      this.onStateChange_SELECTION     = this.onStateChange_SELECTION.bind(this);\n      this.onStateChange_AUTOCOMPLETE  = this.onStateChange_AUTOCOMPLETE.bind(this);\n      this.onInputChange               = this.onInputChange.bind(this);\n      this.getSuggestionValue          = this.getSuggestionValue.bind(this);\n      this.renderSuggestion            = this.renderSuggestion.bind(this);\n      this.onSuggestionsFetchRequested = this.onSuggestionsFetchRequested.bind(this);\n      this.onSuggestionsClearRequested = this.onSuggestionsClearRequested.bind(this);\n      this.onSuggestionSelected        = this.onSuggestionSelected.bind(this);\n      this.onSuggestionHighlighted     = this.onSuggestionHighlighted.bind(this);\n      this.shouldRenderSuggestions     = this.shouldRenderSuggestions.bind(this);\n      this.onBlur                      = this.onBlur.bind(this);\n\n      // NOTE: do this AFTER you have used bind() on the class method\n      // otherwise the call will fail due to missing 'this' context\n      this.OnAppStateChange('SEARCH',             this.onStateChange_SEARCH);\n      this.OnAppStateChange('SELECTION',          this.onStateChange_SELECTION);\n      this.OnAppStateChange('ACTIVEAUTOCOMPLETE', this.onStateChange_AUTOCOMPLETE);\n\n    } // constructor\n\n/// UNISYS STATE CHANGE HANDLERS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n/*/ 'SEARCH' handler\n/*/ onStateChange_SEARCH ( data ) {\n      // grab entire global state for 'SELECTION\n      // REVIEW // autocompleteid probab;y should be stored elsewhere or use a\n      // different mechanism\n      if (DBG) console.log('AutoComplete',this.props.identifier,': Got SEARCH',data);\n      let { activeAutoCompleteId } = this.AppState('ACTIVEAUTOCOMPLETE');\n      if (activeAutoCompleteId===this.props.identifier) {\n        // This is the currently active AutoComplete field\n        // Update the autosuggest input field's value with the current search data\n        if (DBG) console.log('...AutoComplete',this.props.identifier,': ACTIVE setting search value to',data.searchLabel);\n        if (data.searchLabel!==undefined) {\n          this.setState({\n            mode  : MODE_ACTIVE,\n            value : data.searchLabel\n          });\n        }\n      } else {\n        // This is not the active AutoComplete field\n        // Use the disabledValue prop to display\n        // REVIEW: this probably is handled better in render()\n        if (_IsMounted) {\n          if (DBG) console.log('...AutoComplete',this.props.identifier,': NOT ACTIVE setting search value to',this.props.disabledValue);\n          this.setState({\n            mode    : this.props.inactiveMode,\n            value   : this.props.disabledValue\n          });\n        } else {\n          if (DBG) console.log('...AutoComplete',this.props.identifier,': NOT ACTIVE, but skipping update because component is unmounted');\n        }\n      }\n    } // onStateChange_SEARCH\n\n/*/ 'SELECTION' handler\n    Update this AutoComplete input value when the currently selected SELECTION has changed\n    AND we are active and have the current activeAutoCompleteId.\n    This is especially important for when adding a target field to a new EdgeEditor.\n/*/ onStateChange_SELECTION ( data ) {\n      if (DBG) console.log('...AutoComplete',this.props.identifier,': Got SELECTION',data);\n      if (this.props.shouldIgnoreSelection) {\n        if (DBG) console.log('...AutComplete',this.props.identifier,': Ignoring SELECTION (probably because NodeSelector is in edit mode).');\n        return;\n      }\n      let activeAutoCompleteId = this.AppState('ACTIVEAUTOCOMPLETE').activeAutoCompleteId;\n      if ( (this.props.identifier===activeAutoCompleteId) ||\n           (activeAutoCompleteId==='search') ) {\n        // Update the searchLabel if either this nodeSelector or the 'search' field is\n        // is the current active AutoComplete field.\n        // We only ignore SELECTION updates if an edge target field has the current focus.\n        // This is necessary for the case when the user clicks on a node in the D3 graph\n        // and the search field has the current AutoComplete focus.  Otherwise the state.value\n        // is never updated.\n        if (DBG) console.log('...AutoComplete',this.props.identifier,': ACTIVE got SELECTION');\n        let nodes = data.nodes;\n        if (nodes!==undefined &&\n            nodes.length>0 &&\n            nodes[0]!==undefined &&\n            nodes[0].label!==undefined) {\n          let searchLabel = nodes[0].label;\n          if (DBG) console.log('...AutoComplete',this.props.identifier,': ACTIVE got SELECTION, searchLabel',searchLabel);\n          // FIX: This line causes the \"Can't call setState (or forceUpdate) on an unmounted component\" error\n          // is it because it's not actually visible (unmounted)?\n          this.setState({value: searchLabel});\n        }\n      }\n    }\n\n/*/ 'AUTOCOMPLETE' handler\n    Update this AutoComplete state when the currently selected AUTOCOMPLETE field has changed\n/*/ onStateChange_AUTOCOMPLETE ( data ) {\n      if (DBG) console.log('...AutoComplete',this.props.identifier,': Got AUTOCOMPLETE',data);\n      let mode = this.state.mode;\n      if (data.activeAutoCompleteId === this.props.identifier) {\n        mode = MODE_ACTIVE;\n      } else {\n        mode = this.props.inactiveMode;\n      }\n      this.setState({mode: mode});\n    }\n\n/// AUTOSUGGEST HANDLERS ////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Handle Autosuggest's input event trigger\n    User has typed something new into the field\n/*/ onInputChange (event, { newValue, method }) {\n      // Pass the input value (node label search string) to UDATA\n      // which will in turn pass the searchLabel back to the SEARCH\n      // state handler in the constructor, which will in turn set the state\n      // of the input value to be passed on to AutoSuggest\n      this.AppCall('SOURCE_SEARCH', { searchString: newValue });\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Handle Autosuggest's request to set the value of the input field when\n    a selection is clicked.\n/*/ getSuggestionValue (suggestion) {\n      return suggestion.label;\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Handle Autosuggest's request for HTML rendering of suggestions\n/*/ renderSuggestion (suggestion) {\n      return suggestion.label;\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Handle Autosuggest's request for list of suggestions\n    lexicon =  string array of node labels\n\n    lexicon is a one-dimensional string array that represents the complete list\n    of all possible suggestions that are then filtered based on the user typing\n    for suggestions.\n\n    We construct the list on the fly based on the D3DATA data.  If the data model\n    changes, we'll need to update this lexicon constructor.\n/*/ onSuggestionsFetchRequested () {\n      let data = this.AppState('SEARCH');\n      if (data.suggestedNodes) {\n        this.setState({\n          suggestions: (data.suggestedNodes)\n        });\n      } else {\n        if (DBG) console.log('AutoComplete.onSuggestionsFetchRequested: No suggestions.');\n      }\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Handle Autosuggest's request to clear list of suggestions\n/*/ onSuggestionsClearRequested () {\n      this.setState({\n        suggestions: []\n      });\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Autosuggest's callback when a selection is made\n    If a new value is suggested, we call SOURCE_SELECT.\n    Autocomplete-logic should handle the creation of a new data object.\n/*/ onSuggestionSelected (event, { suggestion }) {\n      // User selected an existing node in the suggestion list\n      this.AppCall('SOURCE_SELECT',{ nodeIDs: [suggestion.id] });\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Autosuggest calls this whenever the user has highlighted a different suggestion\n    from the suggestion list.\n/*/ onSuggestionHighlighted ({ suggestion }) {\n      if (suggestion && suggestion.id) this.AppCall('SOURCE_HILITE',{ nodeID: suggestion.id });\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Autosuggest checks this before rendering suggestions\n    Set the prop to turn off suggestions\n/*/ shouldRenderSuggestions (value) {\n      return this.state.mode===MODE_ACTIVE;\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ The AutoComplete field has lost focus.\n    Check to see if it references a valid node, if so, select it\n/*/ onBlur (value) {\n      // User selected an existing node in the suggestion list\n      this.AppCall('SOURCE_SEARCH_AND_SELECT', { searchString: this.state.value } );\n    }\n\n/// REACT LIFECYCLE /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ AutoComplete fields are routinely constructed and deconstructed as different\n    edges and nodes are selected.  We need to keep track of whether it's\n    mounted or not so that we know when it's valid to call setState.  Otherwise\n    we might call setState on an unmounted component and generate a React warning.\n    https://reactjs.org/blog/2015/12/16/ismounted-antipattern.html\n/*/ componentDidMount () {\n      _IsMounted = true;\n      this.setState({ mode: this.props.inactiveMode });\n    }\n/*/\n/*/\n  componentWillUnmount() {\n    _IsMounted = false;\n    // deregister ACTIVEAUTOMPLETE when component unmounts\n    // otherwise state updates trigger a setState on unmounted component error\n    this.AppStateChangeOff('ACTIVEAUTOCOMPLETE', this.onStateChange_AUTOCOMPLETE);\n  }\n\n/*/ Conditionally render components based on current 'mode'. The mode\n    is passed\n/*/ render () {\n      const { value, suggestions } = this.state;\n      const inputProps = {\n        placeholder : \"Type node name...\",\n        value       : value,\n        onChange    : this.onInputChange,\n        onBlur      : this.onBlur\n      };\n      let jsx;\n\n      // Show different widgets depending on mode.\n      // If MODE_ACTIVE is just show the active state,\n      // otherwise, use the current inactive mode in this.props.inactiveMode\n      // to define the inactive state\n      // because this.state.mode may not be up to date if the mode is inactive\n      // due to prop changes not triggering mode updates.\n      // e.g. if the parent container changed props from a disabled to\n      // static state, it does not trigger a mode update in AUTOCOMPLETE.\n      // This is mostly an edge case with EDGE_EDITs which will update props\n      // without a corresponding UNISYS message call to trigger the mode\n      // change.\n      if (this.state.mode === MODE_ACTIVE) {\n        jsx = (\n          <Autosuggest\n            suggestions={suggestions}\n            shouldRenderSuggestions={this.shouldRenderSuggestions}\n            // Map to Local Handlers for Autosuggest event triggers (requests)\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            getSuggestionValue={this.getSuggestionValue}\n            renderSuggestion={this.renderSuggestion}\n            // Receive Data from Autosuggest\n            onSuggestionHighlighted={this.onSuggestionHighlighted}\n            onSuggestionSelected={this.onSuggestionSelected}\n            // Pass Data to Autosuggest\n            inputProps={inputProps}\n          />\n        );\n      } else if (this.props.inactiveMode === MODE_STATIC) {\n        jsx = (<p>{this.props.disabledValue}</p>);\n      } else if (this.props.inactiveMode === MODE_DISABLED) {\n        jsx = (<Input type=\"text\" value={this.props.disabledValue} readOnly={true} />);\n      } else {\n        throw Error(`AutoComplete: Unhandled mode '${this.state.mode}'`);\n      }\n\n      // OLD METHOD\n      // This relied on mode being updated, but a change in props does not\n      // trigger a corresponding change in mode.\n      // switch (this.state.mode) {\n      //   case MODE_STATIC:\n      //     jsx = ( <p>{this.props.disabledValue}</p> );\n      //     break;\n      //   case MODE_DISABLED:\n      //     jsx = ( <Input type=\"text\" value={this.props.disabledValue} readOnly={true}/> );\n      //     break;\n      //   case MODE_ACTIVE:\n      //     jsx = (\n      //       <Autosuggest\n      //         suggestions={suggestions}\n      //         shouldRenderSuggestions={this.shouldRenderSuggestions}\n      //         // Map to Local Handlers for Autosuggest event triggers (requests)\n      //         onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n      //         onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n      //         getSuggestionValue={this.getSuggestionValue}\n      //         renderSuggestion={this.renderSuggestion}\n      //         // Receive Data from Autosuggest\n      //         onSuggestionHighlighted={this.onSuggestionHighlighted}\n      //         onSuggestionSelected={this.onSuggestionSelected}\n      //         // Pass Data to Autosuggest\n      //         inputProps={inputProps}\n      //       />\n      //     );\n      //     break;\n      //   default:\n      //     throw Error(`AutoComplete: Unhandled mode '${this.state.mode}'`);\n      // }\n\n      return jsx;\n    } // render()\n\n/// END OF CLASS //////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n}\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = AutoComplete;\n\n\n\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  ## OVERVIEW\n\n    EdgeEditor is used to to view, edit, and create new edges.\n\n    The EdgeEditor has two basic views:\n\n    1. Minimized Summary view displays just the source and target node info.\n    2. Expanded View shows the full edge information.\n\n    You can get an expanded view by clicking on the minized view.\n    The expanded view has two modes:\n\n    1. View Mode displays the edge data but does not allow editing.\n    2. Edit Mode displays an editable form.\n\n    We assume that when you create an edge, you will have already identified\n    the source node, so the source node is never editable.\n\n    We assume that once you create an edge, the only editing you might do\n    is to change the relationship, notes, and citations.  You wouldn't\n    change the source or target nodes.  If you need to change them, you'd\n    use DELETE.\n\n\n  ## TO USE\n\n    EdgeEditors are usually included as a repeating element, e.g.\n\n      <FormText>EDGES</FormText>\n      {this.state.edges.map( (edge,i) =>\n        <EdgeEditor key={i}\n          edgeID={edge.id}\n          parentNodeLabel={this.state.formData.label}\n        />\n      )}\n\n\n  ## PROPS\n\n    edgeID            edgeID provides a unique identifier for the EdgeEditor\n                      displaying the particular edge.  The edgeID is\n                      used to also uniquely identify the AutoComplete\n                      fields within the EdgeEditor.\n\n    parentNodeLabel   parentNodeLabel is the label of the source node that\n                      the EdgeEditor is displayed within.  This is used\n                      by the EdgeEditor to determine whether it should\n                      display the edge nodes as targets or sources.\n\n  ## STATES\n\n      dbIsLocked\n                      If someone else has selected the edge for editing,\n                      this flag will cause the dbIsLockedMessage\n                      to be displayed.  This is only checked when\n                      the user clicks \"Edit\".\n\n\n  ## TECHNICAL DESCRIPTION\n\n\n  ## TESTING\n\n\n    Displaying Current Edge(s)\n        0. When the app starts, no edges should be displayed in the Node Selector.\n        1. Click on \"Board of Health\"\n              * A summary view of the four nodes connected to Board of Health\n                should be displayed.\n        2. Click on \"me -> Residents of Chinatown\"\n              * The form information should be displayed, including ID,\n                relationship, info, and notes.\n              * The form fields should be disabled (not able to be edited)\n              * A \"Done\" button should appear.\n              * A \"Edit Edge\" button should appear.\n        3. Click \"Done\"\n              * The \"Residents of Chinatown\" edge editor should collapse.\n              * The other 3 Board of Health edges should still be dispalyed.\n        4. Click outside of \"Board of Health\"\n              * All edges should be removed.\n        5. Click on a node without an edge, e.g. \"Ah Sop\"\n              * No edges should be displayed\n              * The \"Add New Edge\" button should be displayed in the EDGES area.\n\n    Edit Existing Edge\n        1. Click on \"Board of Health\"\n        2. Click on \"me -> Residents of Chinatown\"\n        3. Click on \"Edit Edge\"\n              * The \"NOTES\" and \"DATE\" fields will become editable.\n        4. Click \"Save\"\n        5. Select the updated edge.\n              * The changed notes and dates should appear.\n\n    Create New Edge\n        1. Click on \"Board of Health\"\n        2. Click on \"Add New Edge\"\n              * \"Board of Health\" should be automatically set as the Source field\n              * A new ID \"59\" should be automatically inserted.\n              * All fields except \"Source\" and \"ID\" should be editable.\n              * A \"Save\" button should appear.\n              * A \"Done\" button should NOT appear.\n        3. Select a Type\n              * There should be multiple type options available.\n        4. Select a Target\n              * The AutoComplete field should allow typing.\n              * As you type you should see suggestions.\n              * Each suggestion should be marked in the graph\n              * You should be able to click on a suggestion from\n                the suggestions list, or use the keyboard to\n                select a suggestion.\n        5. Type in some info.\n              * The field text should update with whatever you type.\n        6. Type in some notes.\n              * The field text should update with whatever you type.\n        7. Click \"Save\"\n              * The selected target node should be connected to Board of Health\n                in the graph.\n              * The EdgeEditor form should be cleared.\n              * The NodeSelector form should be cleared.\n        8. Click on \"Board of Health\"\n              * The new edge should be displayed as one of the edges.\n        9. Click on the new target node summary view\n              * You should see the relationship, type, and info changes.\n        10. Click on the new target node in the graph\n              * You should see the component along with an edge\n                linked to \"Board of Health\"\n\n    Delete Edge\n        1. Click on \"Board of Health\"\n        2. Click on \"me -> Residents of Chinatown\"\n        3. Click on \"DELETE\"\n              * The edge should be removed.\n              * The graph should update with the edge remvoed.\n              * The EdgeEditor for the deleted edge shoudl close.\n              * The source node should remain selected.\n              * The non-deleted edges should still be listed.\n\n    Swap\n        1. Select an edge where the node is the source (the edge should read \"this -> OtherNode\".\n        2. Click \"Edit Edge\"\n              * You should see a swap button with up/down arrows and a \"Change Target\" button.\n        3. Click on the swap button\n              * The selected node should now be the target.\n        4. Click \"Save\" to save the change.\n        5. Review the node to make sure the change took place.\n        6. Reload the graph to make sure the change was saved.\n\n    Change Target\n        1. Select an edge where the node is the source (the edge should read \"this -> OtherNode\".\n        2. Click \"Edit Edge\"\n              * You should see a swap button with up/down arrows and a \"Change Target\" button.\n        3. Click on the \"Change Target\" button\n              * You should be able to search for another target node, or click on the graph to select a target node.\n        4. When you've selected a target node, the Target Node field should become disabled (light blue, can't type in it).\n        5. Click on \"Change Target\" again to pick a different target.\n        6. Click \"Save\" to save the change.\n        7. Review the node to make sure the change took place.\n        8. Reload the graph to make sure the change was saved.\n\n    Change Source\n        1. Select an edge where the node is the source (the edge should read \"this -> OtherNode\".\n        2. Click \"Edit Edge\"\n              * You should see a \"Change Source\" button next to the source, and just the swap button next to the target.\n        3. Click on the \"Change Source\" button\n        4. You should be able to search for another source node, or click on the graph to select a source node.\n        5. When you've selected a source node, the Source Node field should become disabled (light blue, can't type in it).\n        6. Click on \"Change Source\" again to pick a different source.\n        7. Click \"Save\" to save the change.\n        8. Review the node to make sure the change took place.\n        9. Reload the graph to make sure the change was saved.\n\n    Save\n        * The \"Save\" button should only be visible when the edge is being edited\n        * The \"Save\" button should only be enabled if both the Source and Target\n          fields point to valid nodes.\n        * Otherwise, the \"Save\" button should be disabled.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst DBG = true;\nconst PR  = \"EdgeEditor\";\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst React        = require('react');\nconst ReactStrap   = require('reactstrap');\nconst { Button, Col, Form, FormGroup, FormText, Input, Label } = ReactStrap;\nconst AutoComplete = require('./AutoComplete');\nconst NodeDetail   = require('./NodeDetail');\n\nconst UNISYS   = require('unisys/client');\nvar   UDATA    = null;\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass EdgeEditor extends UNISYS.Component {\n    constructor (props) {\n      super(props);\n      this.state = {\n        edgePrompts:    this.AppState('TEMPLATE').edgePrompts,\n        formData: {                 // Holds the state of the form fields\n          sourceId:     '',\n          targetId:     '',\n          relationship: '',\n          info:         '',\n          notes:        '',\n          citation:     '',\n          id:           '',\n          isNewEdge:    true\n        },\n        sourceNode: {               // Holds the current selected source node\n            label:     '',\n            type:      '',\n            info:      '',\n            notes:     '',\n            id:        ''\n        },\n        targetNode: {               // Holds the current selected target node\n            label:     '',\n            type:      '',\n            info:      '',\n            notes:     '',\n            id:        ''\n        },\n        isLocked:        true,       // User has not logged in, don't allow edge edit\n        dbIsLocked:      false,      // Server Database is locked because someone else is editing\n        isEditable:      false,      // Form is in an edtiable state\n        isExpanded:      false,      // Show EdgeEditor Component in Summary view vs Expanded view\n        sourceIsEditable:false,      // Source ndoe field is only editable when source is not parent\n        hasValidSource:  false,      // Used by SwapSourceAndTarget and the Change Source button\n        targetIsEditable:false,      // Target ndoe field is only editable when target is not parent\n        hasValidTarget:  false       // Used by SwapSourceAndTarget and the Change Target button\n      };\n\n      /// Initialize UNISYS DATA LINK for REACT\n      UDATA = UNISYS.NewDataLink(this);\n\n      this.handleSelection        = this.handleSelection.bind(this);\n      this.handleEdgeSelection    = this.handleEdgeSelection.bind(this);\n      this.handleEdgeEdit         = this.handleEdgeEdit.bind(this);\n      this.onStateChange_SESSION  = this.onStateChange_SESSION.bind(this);\n      this.onButtonClick          = this.onButtonClick.bind(this);\n      this.onDeleteButtonClick    = this.onDeleteButtonClick.bind(this);\n      this.onEditButtonClick      = this.onEditButtonClick.bind(this);\n      this.requestEdit = this.requestEdit.bind(this);\n      this.onSwapSourceAndTarget  = this.onSwapSourceAndTarget.bind(this);\n      this.onChangeSource         = this.onChangeSource.bind(this);\n      this.onChangeTarget         = this.onChangeTarget.bind(this);\n      this.onRelationshipChange   = this.onRelationshipChange.bind(this);\n      this.onNotesChange          = this.onNotesChange.bind(this);\n      this.onInfoChange           = this.onInfoChange.bind(this);\n      this.onCitationChange       = this.onCitationChange.bind(this);\n      this.onSubmit               = this.onSubmit.bind(this);\n\n      // Always make sure class methods are bind()'d before using them\n      // as a handler, otherwise object context is lost\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ SESSION is called by SessionShell when the ID changes\n      set system-wide. data: { classId, projId, hashedId, groupId, isValid }\n  /*/ this.OnAppStateChange('SESSION',this.onStateChange_SESSION);\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n      this.OnAppStateChange('SELECTION',(data) => {\n        this.handleSelection(data);\n      });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n      UDATA.HandleMessage('EDGE_SELECT',(data) => {\n        this.handleEdgeSelection(data);\n      });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n      UDATA.HandleMessage('EDGE_EDIT',(data) => {\n        this.handleEdgeEdit(data);\n      });\n\n      // Template handler\n      this.OnAppStateChange('TEMPLATE',(data) => {\n        this.setState({edgePrompts: data.edgePrompts});\n      });\n\n    } // constructor\n\n\n/// UTILITIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ clearForm () {\n      this.setState({\n        formData: {\n          sourceId:     '',\n          targetId:     '',\n          relationship: '',\n          info:         '',\n          notes:        '',\n          citation:     '',\n          id:           '',\n          isNewEdge:    true\n        },\n        sourceNode: {\n            label:     '',\n            type:      '',\n            info:      '',\n            notes:     '',\n            id:        ''\n        },\n        targetNode: {\n            label:     '',\n            type:      '',\n            info:      '',\n            notes:     '',\n            id:        ''\n        },\n        isEditable:           false,\n        isExpanded:           false,      // Summary view vs Expanded view\n        dbIsLocked:           false,\n        sourceIsEditable:     false,      // Source ndoe field is only editable when source is not parent\n        hasValidSource:       false,      // Used by SwapSourceAndTarget and the Change Source button\n        targetIsEditable:     false,      // Target ndoe field is only editable when target is not parent\n        hasValidTarget:       false       // Used by SwapSourceAndTarget and the Change Target button\n      });\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ populate formdata from D3DATA\n/*/ loadSourceAndTarget () {\n      if (DBG) console.log('EdgeEditor.loadSourceAndTarget!')\n\n      let edgeID = this.props.edgeID || '';\n      // Clean Data\n      if (isNaN(edgeID)) { edgeID = parseInt(edgeID); }\n\n      let D3DATA = this.AppState('D3DATA');\n\n      // parseInt in case of old bad string id\n      let edges = D3DATA.edges.filter( edge=>parseInt(edge.id)===edgeID );\n      if (!edges) {\n        throw 'EdgeEditor: Passed edgeID'+edgeID+'not found!';\n      }\n      let edge = edges[0];\n      if (DBG) console.log('EdgeEditor.loadSourceAndTarget: Loading edge', edge);\n\n      let sourceNode, sourceNodes, targetNode, targetNodes;\n\n      if (edge===undefined) {\n\n        // DEFINE NEW EDGE\n\n        // Create a dummy empty edge object\n        // This will be edited and saved\n        if (DBG) console.log('...EdgeEditor.loadSourceAndTarget: New edge!  No target yet!');\n        // Get a real source node, since we know the parent of this link is the currently\n        // selected source node.\n        sourceNodes = D3DATA.nodes.filter( node => node.label===this.props.parentNodeLabel );\n        // We don't know what target the user is going to pick yet, so just display a\n        // placeholder for now, otherwise, the render will choke on an invalid targetNode.\n        targetNodes = [{label:'pick one...'}];\n        // set this autoComplete field as current\n        this.AppCall('AUTOCOMPLETE_SELECT',{id:'edge'+this.props.edgeID+'target'});\n        // Define `edge` so it can be loaded later during setState.\n        edge = {\n          id: edgeID,\n          source: parseInt(sourceNodes[0].id),  // REVIEW: d3data 'source' is id, rename this to 'sourceId'?\n                                      // though after d3 processes, source does become an object.\n          target: undefined,\n          attributes: {\n            Relationship: '',\n            Info: '',\n            Citations: '',\n            Notes: ''\n          }\n        }\n        // Expand this EdgeEditor and set it to Edit mode.\n        this.setState({\n          isExpanded:           true,\n          targetIsEditable:     true,\n          isEditable:           true\n        });\n\n        this.AppCall('EDGEEDIT_LOCK', { edgeID: this.props.edgeID });\n\n      } else {\n\n        // LOAD EXISTING EDGE\n\n        sourceNodes = D3DATA.nodes.filter( node => parseInt(node.id)===parseInt(edge.source.id) );\n        targetNodes = D3DATA.nodes.filter( node => parseInt(node.id)===parseInt(edge.target.id) );\n\n        // Assume we have a valid target node\n        this.setState({\n          hasValidSource:       true,\n          hasValidTarget:       true\n        });\n\n      }\n\n      if (!sourceNodes) {\n        throw 'EdgeEditor: Source ID'+edge.source+'not found!';\n      }\n      sourceNode = sourceNodes[0];\n      if (!targetNodes) {\n        throw 'EdgeEditor: Target ID'+edge.target+'not found!';\n      }\n      targetNode = targetNodes[0];\n\n      if (DBG) console.log('...EdgeEditor.loadSourceAndTarget: Setting formData sourceID to',edge.source,'and sourceNode to',sourceNode,'and targetNode to',targetNode);\n      this.setState({\n        formData: {\n          id:           parseInt(edge.id) || '',\n          sourceId:     edge.source,\n          targetId:     edge.target,\n          relationship: edge.attributes[\"Relationship\"] || '',   // Make sure there's valid data\n          info:         edge.attributes[\"Info\"] || '',\n          citation:     edge.attributes[\"Citations\"] || '',\n          notes:        edge.attributes[\"Notes\"] || '',\n          isNewEdge:    false\n        },\n        sourceNode: sourceNode,\n        targetNode: targetNode,\n        dbIsLocked: false\n      })\n    }\n\n\n\n/// UDATA STATE HANDLERS //////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ When the user is creating a new node, they need to set a target node.\n    The target node is set via an AutoComplete field.\n    When a node is selected via the AutoComplete field, the SELECTION state is updated.\n    So EdgeEditor needs to listen to the SELECTION state in order to\n    know the target node has been selected.\n    SELECTION is also triggered when the network updates an edge.\n/*/ handleSelection ( data ) {\n      if (DBG) console.log('EdgeEditor',this.props.edgeID,'got SELECTION data',data);\n\n      // If we're one of the edges that have been updated, and we're not currently being edited,\n      // then update the data.\n      // If we're not currently being edited, then if edges have been updated, update self\n      if (data.edges !== undefined) {\n        let updatedEdge = data.edges.find((edge) => { return edge.id === this.state.formData.id; });\n        if (!this.state.isEditable && updatedEdge !== undefined) {\n          if (DBG) console.log('EdgeEditor: Updating edges with', updatedEdge);\n          this.loadSourceAndTarget();\n          return;\n        }\n      }\n\n      // We're being edited, and the updated node is either our source or target\n      // Technically we probably ought to also check to make sure we're the current\n      // activeAutoCompleteId, but we wouldn't be editable if we weren't.\n      if (this.state.isEditable && data.nodes && data.nodes.length > 0) {\n        // A node was selected, so load it\n\n          let node = data.nodes[0];\n\n        // Are we editing the source or the target?\n        if (this.state.sourceIsEditable) {\n          // SOURCE\n          if (DBG) console.log('EdgeEditor.handleSelection:',this.props.edgeID,'setting source node to',node);\n\n          // Set sourceNode state\n          this.setState({\n            sourceNode: node\n          });\n          // Also update the formdata\n          let formData = this.state.formData;\n          formData.sourceId = node.id;\n          this.setState({\n            formData: formData\n          });\n          // And let the switch button know we have a valid target\n          // And exit edit mode\n          this.setState({\n            hasValidSource:   true,\n            sourceIsEditable: false\n          });\n\n        } else if (this.state.targetIsEditable) {\n          // TARGET\n          if (DBG) console.log('EdgeEditor.handleSelection:',this.props.edgeID,'setting target node to',node);\n\n          // Set targetNode state\n          this.setState({\n            targetNode: node\n          });\n          // Also update the formdata\n          let formData = this.state.formData;\n          formData.targetId = node.id;\n          this.setState({\n            formData: formData\n          });\n          // And let the switch button know we have a valid target\n          // And exit edit mode\n          this.setState({\n            hasValidTarget:   true,\n            targetIsEditable: false\n          });\n\n        }\n        // pass currentAutoComplete back to search\n        this.AppCall('AUTOCOMPLETE_SELECT',{id:'search'});\n        this.setState({ isExpanded: true });\n      } else {\n        // No node selected, so we don't need to do anything\n        // AutoComplete will take care of its own search label updates\n      }\n\n    } // handleSelection\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Someone externally has selected an edge.\n    Usually someone has clicked a button in the EdgeList to view/edit an edge\n/*/ handleEdgeSelection ( data ) {\n      if (DBG) console.log('EdgeEditor',this.props.edgeID,': got state EDGE_SELECT',data);\n\n      if (this.state.formData.id === data.edgeID) {\n        // pass currentAutoComplete back to search\n        this.AppCall('AUTOCOMPLETE_SELECT',{id:'search'});\n        this.setState({ isExpanded: true });\n      }\n\n    } // handleEdgeSelection\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Someone externally has selected an edge for editing.\n    Usually someone has clicked a button in the EdgeTable to edit an edge\n/*/ handleEdgeEdit ( data ) {\n      if (DBG) console.log('EdgeEditor',this.state.formData.id,': got state EDGE_EDIT',data,'formData is',this.state.formData);\n\n      if (this.state.formData.id === data.edgeID) {\n        this.requestEdit();\n      }\n\n    } // handleEdgeEdit\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Handle change in SESSION data\n    Called both by componentDidMount() and AppStateChange handler.\n    The 'SESSION' state change is triggered in two places in SessionShell during\n    its handleChange() when active typing is occuring, and also during\n    SessionShell.componentWillMount()\n/*/ onStateChange_SESSION( decoded ) {\n      let update = { isLocked:   !decoded.isValid };\n      this.setState(update);\n    }\n\n\n/// UI EVENT HANDLERS /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Expand if the edge is collapsed.\n    Cancel editing if the edge is expanded.\n/*/ onButtonClick () {\n      // REVIEW: Rename Cancel or Expand?\n      // Cancel/Close\n      if (this.state.isExpanded) {\n        // collapse\n        this.setState({ isExpanded: false });\n\n        // If we were editing, then revert and exit\n        if (this.state.isEditable) {\n          this.loadSourceAndTarget();\n          this.setState({ isEditable: false, targetIsEditable: false });\n          this.AppCall('EDGEEDIT_UNLOCK', { edgeID: this.props.edgeID });\n          this.AppCall('AUTOCOMPLETE_SELECT',{id:'search'});\n          // unlock\n          this.NetCall('SRV_DBUNLOCKEDGE', { edgeID: this.state.formData.id })\n            .then((data) => {\n              if (data.NOP) {\n                if (DBG) console.log(`SERVER SAYS: ${data.NOP} ${data.INFO}`);\n              } else if (data.unlocked) {\n                if (DBG) console.log(`SERVER SAYS: unlock success! you have released Edge ${data.edgeID}`);\n                this.setState({ dbIsLocked: false });\n              }\n            });\n        }\n      } else {\n        // expand, but don't set the autocomplete field, since we're not editing\n        this.setState({ isExpanded: true });\n      }\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ onDeleteButtonClick () {\n      this.clearForm();\n      this.AppCall('EDGEEDIT_UNLOCK', { edgeID: this.props.edgeID }); // inform NodeSelector\n      this.AppCall('DB_UPDATE',{edgeID:this.props.edgeID});\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ onEditButtonClick () {\n      this.requestEdit(this.state.formData.id);\n\n      // Don't allow editing of the source or target fields.\n      // If you want to change the edge, delete this one and create a new one.\n      // if (this.props.parentNodeLabel===this.state.sourceNode.label) {\n      //   // The source node is the currently selected node in NodeSelector.  Edit the target.\n      //   UDATA.LocalCall('AUTOCOMPLETE_SELECT',{id:'edge'+this.props.edgeID+'target', searchString: this.state.targetNode.label});\n      // } else {\n      //   // The NodeSelector node is the target.  Allow editing the source.\n      //   UDATA.LocalCall('AUTOCOMPLETE_SELECT',{id:'edge'+this.props.edgeID+'source', searchString: this.state.sourceNode.label});\n      // }\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ requestEdit() {\n      let edgeID = this.state.formData.id;\n      if (edgeID && edgeID!=='' && !isNaN(edgeID) && (typeof edgeID ===\"number\")) {\n        this.NetCall('SRV_DBLOCKEDGE', { edgeID: edgeID })\n          .then((data) => {\n            if (data.NOP) {\n              // Edge is locked, can't edit\n              if (DBG) console.log(`SERVER SAYS: ${data.NOP} ${data.INFO}`);\n              this.setState({ dbIsLocked: true });\n            } else if (data.locked) {\n              if (DBG) console.log(`SERVER SAYS: lock success! you can edit Edge ${data.edgeID}`);\n              if (DBG) console.log(`SERVER SAYS: unlock the edge after successful DBUPDATE`);\n              this.setState({\n                isEditable: true,\n                isExpanded: true,\n                dbIsLocked: false\n              });\n              this.AppCall('EDGEEDIT_LOCK', { edgeID: this.props.edgeID }); // inform NodeSelector\n            }\n          });\n      }\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ onSwapSourceAndTarget () {\n      let formData = this.state.formData;\n\n      // swap formadata\n      let targetId = formData.targetId;\n      formData.targetId = formData.sourceId;\n      formData.sourceId = targetId;\n\n      // swap this.state.source and target\n      let swap   = this.state.sourceNode;\n      let source = this.state.targetNode;\n      let target = swap;\n\n      // REVIEW\n      // Get rid of separate this.state.source and this.state.target\n      // and just use formData?!?\n\n      this.setState({\n        formData: formData,\n        sourceNode: source,\n        targetNode: target\n      });\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ onChangeSource () {\n      this.setState({\n        sourceIsEditable: true,\n        hasValidSource: false\n      });\n      this.AppCall('AUTOCOMPLETE_SELECT',{id:'edge'+this.props.edgeID+'source'});\n      // Whenever we set the autocomplete to source, we have to update the label\n      this.AppCall('SOURCE_SEARCH', { searchString: this.state.sourceNode.label });\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ onChangeTarget () {\n      this.setState({\n        targetIsEditable: true,\n        hasValidTarget: false\n      });\n      this.AppCall('AUTOCOMPLETE_SELECT',{id:'edge'+this.props.edgeID+'target'});\n      // Whenever we set the autocomplete to target, we have to update the label\n      this.AppCall('SOURCE_SEARCH', { searchString: this.state.targetNode.label });\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ onRelationshipChange (event) {\n      let formData = this.state.formData;\n      formData.relationship = event.target.value;\n      this.setState({formData: formData});\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ onInfoChange (event) {\n      let formData = this.state.formData;\n      formData.info = event.target.value;\n      this.setState({formData: formData});\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ onCitationChange (event) {\n      let formData = this.state.formData;\n      formData.citation = event.target.value;\n      this.setState({formData: formData});\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ onNotesChange (event) {\n      let formData = this.state.formData;\n      formData.notes = event.target.value;\n      this.setState({formData: formData});\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ onSubmit ( event ) {\n      event.preventDefault()\n      let formData = this.state.formData\n      // Read current edge values\n      // This is necessary because the SOURCE and TARGET labels\n      // are bound to selectedSourceNode and selectedTargetNode, not selectedEdge\n      let edge = {\n        id:             formData.id,\n        source:         this.state.sourceNode.id,   // REVIEW: d3data 'source' is id, rename this to 'sourceId'?\n                                                    // though after d3 processes, source does become an object.\n        target:         this.state.targetNode.id,   // REVIEW: d3data 'target' is id, rename this to 'targetId'?\n        attributes: {\n          Relationship: formData.relationship,\n          Info:         formData.info,\n          Citations:    formData.citation,\n          Notes:        formData.notes\n        }\n      }\n      if (DBG) console.group('EdgeEntry.onSubmit submitting',edge)\n\n      this.AppCall('EDGEEDIT_UNLOCK', { edgeID: this.props.edgeID }); // inform NodeSelector\n      // pass currentAutoComplete back to nodeselector\n      this.AppCall('AUTOCOMPLETE_SELECT',{id:'search'});\n      this.setState({ isEditable: false, sourceIsEditable: false, targetIsEditable: false });\n      this.AppCall('DB_UPDATE', { edge })\n        .then(() => {\n          this.NetCall('SRV_DBUNLOCKEDGE', { edgeID: edge.id })\n            .then((data) => {\n              if (data.NOP) {\n                if (DBG) console.log(`SERVER SAYS: ${data.NOP} ${data.INFO}`);\n              } else if (data.unlocked) {\n                if (DBG) console.log(`SERVER SAYS: unlock success! you have released Edge ${data.edgeID}`);\n                this.setState({ dbIsLocked: false });\n              }\n            });\n        });\n\n  } // onSubmit\n\n\n\n/// REACT LIFECYCLE METHODS ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ This is not yet implemented as of React 16.2.  It's implemented in 16.3.\n    getDerivedStateFromProps (props, state) {\n      console.error('getDerivedStateFromProps!!!');\n    }\n/*/\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ render () {\n      const { edgeID, parentNodeLabel } = this.props;\n      const { formData, sourceNode, targetNode, edgePrompts } = this.state;\n      const me = <span style={{color:\"rgba(0,0,0,0.2)\",fontStyle:\"italic\"}}>this node</span>;\n      return (\n        <div>\n\n          <Button\n            className={this.state.isExpanded?'d-none':''}\n            outline\n            size=\"sm\"\n            style={{backgroundColor:\"#a9d3ff\",borderColor:'transparent',width:'100%',marginBottom:'3px',textAlign:\"left\"}}\n            onClick={this.onButtonClick}\n          >{parentNodeLabel===sourceNode.label ? me : sourceNode.label}\n          &nbsp;&#x2794;&nbsp;\n          {parentNodeLabel===targetNode.label ? me : targetNode.label}</Button>\n\n          <div className={this.state.isExpanded?'':'d-none'}>\n            <Form className=\"nodeEntry\"\n                  style={{backgroundColor:\"#C9E1FF\",minHeight:'300px',padding:'5px',marginBottom:'10px'}}\n                  onSubmit={this.onSubmit}>\n              <FormText><b>EDGE {formData.id}</b></FormText>\n              <FormGroup row>\n                <Col sm={3}>\n                  <Label for=\"source\" className=\"small text-muted\">Source</Label>\n                </Col>\n                <Col sm={9}>\n                  <AutoComplete\n                    identifier={'edge'+edgeID+'source'}\n                    disabledValue={sourceNode.label}\n                    inactiveMode={parentNodeLabel===sourceNode.label ? 'static' : 'disabled'}\n                    shouldIgnoreSelection={!this.state.sourceIsEditable}\n                  />\n                  <Button outline size=\"sm\" className=\"float-right\"\n                    hidden={ !(this.state.isEditable &&\n                               this.state.hasValidSource &&\n                               (sourceNode.label!==this.props.parentNodeLabel)) }\n                    onClick={this.onChangeSource}\n                    title=\"Select a different source node\"\n                  >Change Source</Button>\n                </Col>\n              </FormGroup>\n              <FormGroup row hidden={edgePrompts.type.hidden}>\n                <Col sm={3}>\n                  <Label for=\"relationship\" className=\"small text-muted\">Type</Label>\n                </Col>\n                <Col sm={9}>\n                  <Input type=\"select\" name=\"relationship\" id=\"relationship\"\n                    value={formData.relationship}\n                    onChange={this.onRelationshipChange}\n                    disabled={!this.state.isEditable}\n                    >\n                    {edgePrompts.type.options.map( (option,i) => (\n                      <option id={option.id} key={option.id}>{option.label}</option>\n                    ))}\n                  </Input>\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col sm={3}>\n                  <Label for=\"nodeLabel\" className=\"small text-muted\">Target</Label>\n                </Col>\n                <Col sm={9}>\n                  <AutoComplete\n                    identifier={'edge'+edgeID+'target'}\n                    disabledValue={targetNode.label}\n                    inactiveMode={parentNodeLabel===targetNode.label ? 'static' : 'disabled'}\n                    shouldIgnoreSelection={!this.state.targetIsEditable}\n                  />\n                  <Button outline size=\"sm\" className=\"float-right\"\n                    hidden={ !(this.state.isEditable &&\n                               this.state.hasValidTarget &&\n                               (targetNode.label!==this.props.parentNodeLabel)) }\n                    onClick={this.onChangeTarget}\n                    title=\"Select a different target node\"\n                  >Change Target</Button>\n                  <Button outline size=\"sm\" className=\"float-right\" style={{marginRight:'5px'}}\n                    hidden={!(this.state.isEditable && this.state.hasValidTarget)}\n                    onClick={this.onSwapSourceAndTarget}\n                    title=\"Swap 'Source' and 'Target' nodes\"\n                  >&uarr;&darr;</Button>\n                </Col>\n              </FormGroup>\n              <FormGroup row hidden={edgePrompts.citation.hidden}>\n                <Col sm={3}>\n                  <Label for=\"citation\" className=\"small text-muted\">{edgePrompts.citation.label}</Label>\n                </Col>\n                <Col sm={9}>\n                  <Input type=\"text\" name=\"citation\" id=\"citation\"\n                    value={formData.citation}\n                    onChange={this.onCitationChange}\n                    readOnly={!this.state.isEditable}\n                  />\n                </Col>\n              </FormGroup>\n              <FormGroup row hidden={edgePrompts.notes.hidden}>\n                <Col sm={3}>\n                  <Label for=\"notes\" className=\"small text-muted\">{edgePrompts.notes.label}</Label>\n                </Col>\n                <Col sm={9}>\n                  <Input type=\"textarea\" name=\"notes\" id=\"notes\"\n                    value={formData.notes}\n                    onChange={this.onNotesChange}\n                    readOnly={!this.state.isEditable}\n                  />\n                </Col>\n              </FormGroup>\n              <FormGroup row hidden={edgePrompts.info.hidden}>\n                <Col sm={3}>\n                  <Label for=\"info\" className=\"small text-muted\">{edgePrompts.info.label}</Label>\n                </Col>\n                <Col sm={9}>\n                  <Input type=\"text\" name=\"info\" id=\"info\"\n                    value={formData.info}\n                    onChange={this.onInfoChange}\n                    readOnly={!this.state.isEditable}\n                  />\n                </Col>\n              </FormGroup>\n              <FormGroup className=\"text-right\" style={{paddingRight:'5px'}}>\n                <Button className=\"small text-muted float-left btn btn-outline-light\" size=\"sm\"\n                 hidden={this.state.isLocked}\n                 onClick={this.onDeleteButtonClick}\n                >Delete</Button>&nbsp;\n                <Button outline size=\"sm\"\n                  hidden={this.state.isLocked || this.state.isEditable}\n                  onClick={this.onEditButtonClick}\n                >{this.state.isEditable ? \"Add New Edge\" : \"Edit Edge\"}</Button>&nbsp;\n                <Button size=\"sm\"\n                  outline={this.state.isEditable}\n                  onClick={this.onButtonClick}\n                >{this.state.isEditable?'Cancel':'Close'}</Button>&nbsp;\n                <Button color=\"primary\" size=\"sm\"\n                  hidden={!this.state.isEditable}\n                  disabled={ !(this.state.isEditable && this.state.hasValidTarget) }\n                >Save</Button>\n                <p hidden={!this.state.dbIsLocked} className=\"small text-danger\">{edgePrompts.edgeIsLockedMessage}</p>\n              </FormGroup>\n            </Form>\n          </div>\n\n        </div>\n      );\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ componentDidMount () {\n      if (DBG) console.log('EdgeEditor.componentDidMount!');\n      this.loadSourceAndTarget();\n      this.onStateChange_SESSION(this.AppState('SESSION'));\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Release the lock if we're unmounting\n/*/ componentWillUnmount() {\n      if (DBG) console.log('EdgeEditor.componentWillUnMount!');\n      if (this.state.isEditable) {\n        this.NetCall('SRV_DBUNLOCKEDGE', { edgeID: this.state.formData.id })\n          .then((data) => {\n            if (data.NOP) {\n              if (DBG) console.log(`SERVER SAYS: ${data.NOP} ${data.INFO}`);\n            } else if (data.unlocked) {\n              if (DBG) console.log(`SERVER SAYS: unlock success! you have released Edge ${data.edgeID}`);\n              this.setState({ dbIsLocked: false });\n            }\n          });\n      }\n    }\n} // class EdgeEditor\n\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = EdgeEditor;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  ## OVERVIEW\n\n    EdgeTable is used to to display a table of edges for review.\n\n\n  ## TO USE\n\n    EdgeTable is self contained and relies on global D3DATA to load.\n\n      <EdgeTable/>\n\n\n    Set `DBG` to true to show the `ID` column.\n\n  ## 2018-12-07 Update\n\n    Since we're not using tab navigation:\n    1. The table isExpanded is now true by default.\n    2. The \"Show/Hide Table\" button is hidden.\n\n    Reset these to restore previous behavior.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nvar DBG = false;\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst React        = require('react');\nconst ReactStrap   = require('reactstrap');\nconst { Button, Table }    = ReactStrap;\n\nconst UNISYS   = require('unisys/client');\nvar   UDATA    = null;\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass EdgeTable extends UNISYS.Component {\n    constructor (props) {\n      super(props);\n\n      this.state = {\n        edgePrompts:  this.AppState('TEMPLATE').edgePrompts,\n        edges:        [],\n        isExpanded:   true,\n        sortkey:      'Citations'\n      };\n\n      this.onButtonClick            = this.onButtonClick.bind(this);\n      this.onToggleExpanded         = this.onToggleExpanded.bind(this);\n      this.m_FindMatchingObjsByProp = this.m_FindMatchingObjsByProp.bind(this);\n      this.m_FindMatchingEdgeByProp = this.m_FindMatchingEdgeByProp.bind(this);\n      this.m_FindEdgeById           = this.m_FindEdgeById.bind(this);\n      this.setSortKey               = this.setSortKey.bind(this);\n\n\n      /// Initialize UNISYS DATA LINK for REACT\n      UDATA = UNISYS.NewDataLink(this);\n\n      // Always make sure class methods are bind()'d before using them\n      // as a handler, otherwise object context is lost\n      this.OnAppStateChange('D3DATA',(data) => {\n        this.handleDataUpdate(data);\n      });\n\n      // Handle Template updates\n      this.OnAppStateChange('TEMPLATE',(data) => {\n        this.setState({edgePrompts: data.edgePrompts});\n      });\n    } // constructor\n\n\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Handle updated SELECTION\n/*/ handleDataUpdate ( data ) {\n      if (data && data.edges) {\n        this.setState({edges: data.edges});\n        this.sortTable();\n      }\n    }\n\n\n/// UTILITIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ sortByID (edges) {\n      if (edges) {\n        return edges.sort( (a,b) => {\n          let akey = a.id,\n              bkey = b.id;\n          if (akey<bkey) return -1;\n          if (akey>bkey) return 1;\n          return 0;\n        });\n      }\n      return undefined;\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ sortBySourceLabel (edges) {\n      if (edges) {\n        return edges.sort( (a,b) => {\n          let akey = a.source.label,\n              bkey = b.source.label;\n          if (akey<bkey) return -1;\n          if (akey>bkey) return 1;\n          return 0;\n        });\n      }\n      return undefined;\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ sortByTargetLabel (edges) {\n      if (edges) {\n        return edges.sort( (a,b) => {\n          let akey = a.target.label,\n              bkey = b.target.label;\n          if (akey<bkey) return -1;\n          if (akey>bkey) return 1;\n          return 0;\n        });\n      }\n      return undefined;\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ sortByAttribute (edges, key) {\n      if (edges) {\n        return edges.sort( (a,b) => {\n          let akey = a.attributes[key],\n              bkey = b.attributes[key];\n          if (akey<bkey) return -1;\n          if (akey>bkey) return 1;\n          if (akey===bkey) {\n            // Secondary sort on Source label\n            let source_a = a.source.label;\n            let source_b = b.source.label;\n            if (source_a<source_b) return -1;\n            if (source_a>source_b) return 1;\n          }\n          return 0;\n        });\n      }\n      return undefined;\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ If no `sortkey` is passed, the sort will use the existing state.sortkey\n/*/ sortTable ( sortkey=this.state.sortkey) {\n      let edges = this.state.edges;\n      switch (sortkey) {\n        case 'id':\n          this.sortByID(edges);\n          break;\n        case 'source':\n          this.sortBySourceLabel(edges);\n          break;\n        case 'target':\n          this.sortByTargetLabel(edges);\n          break;\n        case 'Relationship':\n          this.sortByAttribute(edges, 'Relationship');\n          break;\n        case 'Info':\n          this.sortByAttribute(edges, 'Info');\n          break;\n        case 'Notes':\n          this.sortByAttribute(edges, 'Notes');\n          break;\n        case 'Citations':\n        default:\n          this.sortByAttribute(edges, 'Citations');\n          break;\n      }\n      this.setState({edges});\n    }\n\n/// UI EVENT HANDLERS /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ onButtonClick (event) {\n      event.preventDefault();\n\n      let edgeID = parseInt( event.target.value );\n      let edge = this.m_FindEdgeById( edgeID );\n\n      if (DBG) console.log('EdgeTable: Edge id',edge.id,'selected for editing');\n\n      // Load Source then Edge\n      UDATA.LocalCall('SOURCE_SELECT',{ nodeIDs: [edge.source.id] })\n      .then(()=>{\n        UDATA.LocalCall('EDGE_EDIT',{ edgeID: edge.id });\n      });\n\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ onToggleExpanded (event) {\n      this.setState({\n        isExpanded: !this.state.isExpanded\n      })\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ setSortKey (key) {\n      this.setState({sortkey: key});\n      this.sortTable(key);\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ selectNode (id, event) {\n      event.preventDefault();\n\n      // Load Source\n      if (DBG) console.log('EdgeTable: Edge id',id,'selected for editing');\n      UDATA.LocalCall('SOURCE_SELECT',{ nodeIDs: [id] });\n    }\n\n\n/// OBJECT HELPERS ////////////////////////////////////////////////////////////\n/// these probably should go into a utility class\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Return array of objects that match the match_me object keys/values\n    NOTE: make sure that strings are compared with strings, etc\n/*/ m_FindMatchingObjsByProp( obj_list, match_me={} ) {\n      // operate on arrays only\n      if (!Array.isArray(obj_list)) throw Error(\"FindMatchingObjectsByProp arg1 must be array\");\n      let matches = obj_list.filter( obj => {\n        let pass = true;\n        for (let key in match_me) {\n          if (match_me[key]!==obj[key]) pass=false; break;\n        }\n        return pass;\n      });\n      // return array of matches (can be empty array)\n      return matches;\n    }\n\n/// EDGE HELPERS //////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Return array of nodes that match the match_me object keys/values\n    NOTE: make sure that strings are compared with strings, etc\n/*/ m_FindMatchingEdgeByProp( match_me={} ) {\n      return this.m_FindMatchingObjsByProp(this.state.edges,match_me);\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Convenience function to retrieve edge by ID\n/*/ m_FindEdgeById( id ) {\n      return this.m_FindMatchingEdgeByProp({ id })[0];\n    }\n\n\n\n/// REACT LIFECYCLE METHODS ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ This is not yet implemented as of React 16.2.  It's implemented in 16.3.\n    getDerivedStateFromProps (props, state) {\n      console.error('getDerivedStateFromProps!!!');\n    }\n/*/\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ render () {\n      let { edgePrompts } = this.state;\n      let { tableHeight } = this.props;\n      let styles = `thead, tbody { display: block; }\n                    thead { position: relative; }\n                    tbody { overflow: auto; }\n                    .edgetable td:nth-child(1), .edgetable th:nth-child(1) {width: 3em; min-width: 3em;}\n                    .edgetable td:nth-child(2), .edgetable th:nth-child(2) {width: 3em; min-width: 3em;}\n                    .edgetable td:nth-child(3), .edgetable th:nth-child(3) {width: 4em; min-width: 4em;}\n                    .edgetable td:nth-child(4), .edgetable th:nth-child(4) {width: 6em; min-width: 6em;}\n                    .edgetable td:nth-child(5), .edgetable th:nth-child(5) {width: 14em; min-width: 14em;}\n                    .edgetable td:nth-child(6), .edgetable th:nth-child(6) {width: 6em; min-width: 6em;}\n                    .edgetable td:nth-child(7), .edgetable th:nth-child(7) {width: 6em; min-width: 6em;}\n                    .edgetable td:nth-child(8), .edgetable th:nth-child(8) {min-width: 6em; }`\n      return (\n        <div style={{backgroundColor:'#f3f3ff'}}>\n          <style>{styles}</style>\n          <Button size=\"sm\" outline hidden\n            onClick={this.onToggleExpanded}\n          >{this.state.isExpanded ? \"Hide Edge Table\" : \"Show Edge Table\"}</Button>\n          <Table hidden={!this.state.isExpanded} hover size=\"sm\"\n                 responsive striped\n                 className=\"edgetable\"\n          >\n            <thead>\n              <tr>\n                <th hidden={!DBG}><Button size=\"sm\"\n                      disabled={this.state.sortkey===\"id\"}\n                      onClick={()=>this.setSortKey(\"id\")}\n                    >ID</Button></th>\n                <th hidden={!DBG}>Size</th>\n                <th></th>\n                <th><Button size=\"sm\"\n                      disabled={this.state.sortkey===\"source\"}\n                      onClick={()=>this.setSortKey(\"source\")}\n                    >{edgePrompts.source.label}</Button></th>\n                <th><Button size=\"sm\"\n                      disabled={this.state.sortkey===\"Relationship\"}\n                      onClick={()=>this.setSortKey(\"Relationship\")}\n                    >{edgePrompts.type.label}</Button></th>\n                <th><Button size=\"sm\"\n                      disabled={this.state.sortkey===\"target\"}\n                      onClick={()=>this.setSortKey(\"target\")}\n                    >{edgePrompts.target.label}</Button></th>\n                <th hidden={edgePrompts.citation.hidden}><Button size=\"sm\"\n                      disabled={this.state.sortkey===\"Citations\"}\n                      onClick={()=>this.setSortKey(\"Citations\")}\n                    >{edgePrompts.citation.label}</Button></th>\n                <th hidden={edgePrompts.notes.hidden}><Button size=\"sm\"\n                      disabled={this.state.sortkey===\"Notes\"}\n                      onClick={()=>this.setSortKey(\"Notes\")}\n                    >{edgePrompts.notes.label}</Button></th>\n                <th hidden={edgePrompts.info.hidden}><Button size=\"sm\"\n                      disabled={this.state.sortkey===\"Info\"}\n                      onClick={()=>this.setSortKey(\"Info\")}\n                    >{edgePrompts.info.label}</Button></th>\n              </tr>\n            </thead>\n            <tbody style={{ maxHeight: tableHeight }}>\n            {this.state.edges.map( (edge,i) => (\n              <tr key={i}>\n                <td hidden={!DBG}>{edge.id}</td>\n                <td hidden={!DBG}>{edge.size}</td>\n                <td><Button size=\"sm\" outline\n                      value={edge.id}\n                      onClick={this.onButtonClick}\n                    >Edit</Button>\n                </td>\n                <td><a href=\"#\" onClick={(e)=>this.selectNode(edge.source.id,e)}\n                    >{edge.source.label || edge.source}</a></td>\n                <td>{edge.attributes[\"Relationship\"]}</td>\n                <td><a href=\"#\" onClick={(e)=>this.selectNode(edge.target.id,e)}\n                    >{edge.target.label || edge.target}</a></td>\n                <td hidden={edgePrompts.citation.hidden}>{edge.attributes[\"Citations\"]}</td>\n                <td hidden={edgePrompts.notes.hidden}>{edge.attributes[\"Notes\"]}</td>\n                <td hidden={edgePrompts.info.hidden}>{edge.attributes[\"Info\"]}</td>\n              </tr>\n            ))}\n            </tbody>\n          </Table>\n        </div>\n      );\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ componentDidMount () {\n      if (DBG) console.log('EdgeTable.componentDidMount!');\n    }\n} // class EdgeTable\n\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = EdgeTable;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  ## OVERVIEW\n\n    Help displays a hideable generic help screen.\n\n\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nvar DBG = true;\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst React        = require('react');\nconst ReactStrap   = require('reactstrap');\nconst { Button, Table }    = ReactStrap;\n\nconst UNISYS   = require('unisys/client');\n\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass Help extends UNISYS.Component {\n    constructor (props) {\n      super(props);\n      this.state = {isExpanded: true};\n      this.onToggleExpanded = this.onToggleExpanded.bind(this);\n    } // constructor\n\n\n\n/// UI EVENT HANDLERS /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ onToggleExpanded (event) {\n      this.setState({\n        isExpanded: !this.state.isExpanded\n      })\n    }\n\n\n\n/// REACT LIFECYCLE METHODS ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ This is not yet implemented as of React 16.2.  It's implemented in 16.3.\n    getDerivedStateFromProps (props, state) {\n      console.error('getDerivedStateFromProps!!!');\n    }\n/*/\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ render () {\n      return (\n        <div className=\"help\"\n             style={{maxWidth:'50%',overflow:'scroll',\n                     position:'fixed',right:'10px',zIndex:2000\n             }}>\n          <Button size=\"sm\" outline hidden\n            style={{float:'right'}}\n            onClick={this.onToggleExpanded}\n          >{this.state.isExpanded ? \"Hide Help\" : \"Help\"}</Button>\n          <div hidden={!this.state.isExpanded}\n            style={{backgroundColor:'rgba(240,240,240,0.95)',padding:'10px'}}>\n            <h1>Why Net.Create</h1>\n            <p>In Net.Create, users can simultaneously do data entry on nodes and the edges between them.</p>\n            <h1>Navigation</h1>\n            <ul>\n              <li>Recenter the graph -- press the * button</li>\n              <li>Zoom --\n                <ul>\n                  <li>on screen -- use the +/- buttons</li>\n                  <li>mouse -- use mousewheel</li>\n                  <li>trackpad -- two fingers up/down</li>\n                  <li>tablet -- two fingers pinch</li>\n                </ul>\n              </li>\n              <li>Pan -- drag empty space</li>\n            </ul>\n            <h1>Nodes</h1>\n            <ul>\n              <li>Select -- Click on a node, or start typing the node label in\n              the Label field and select a node from the suggestions.</li>\n            </ul>\n            <h1>Edges</h1>\n            <ul>\n              <li>Create -- To create an edge, first select the source node, then\n              click \"Add New Edge\".</li>\n              <li>Select -- To select an edge, select either of the nodes it is attached to.</li>\n              <li>Editing -- To change the source or target of an existing edge,\n              delete it and create a new one.</li>\n              <li>View Full List -- Click on \"Show Edge Table\" to view a table\n              of all the edges.  Click on a column header to sort the table by\n              that parameter.</li>\n            </ul>\n            <h1>About Net.Create</h1>\n            <p>Net.Create is funded through the <a href=\"https://www.nsf.gov/pubs/policydocs/pappguide/nsf09_1/gpg_2.jsp#IID2\" target=\"NSF\">EAGER program</a> at <a href=\"https://www.nsf.gov/\" target=\"NSF\">NSF</a> under award #<a href=\"https://www.nsf.gov/awardsearch/showAward?AWD_ID=1848655\" target=\"NSF\">1848655</a>. <a href=\"http://www.kalanicraig.com\" target=\"Craig\">Kalani Craig</a> is the PI, with Co-PIs <a href=\"http://www.joshuadanish.com\" target=\"Danish\">Joshua Danish</a> and <a href=\"https://education.indiana.edu/about/directory/profiles/hmelo-silver-cindy.html\" target=\"Hmelo-Silver\">Cindy Hmelo-Silver</a>. Software development provided by <a href=\"http://inquirium.net\" target=\"Inquirium\">Inquirium</a>. For more information, see <a href=\"http://netcreate.org\" target=\"NetCreateOrg\">Net.Create.org</a></p>\n\n          </div>\n        </div>\n      );\n    }\n\n} // class Help\n\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = Help;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  ## OVERVIEW\n\n  InfoPanel shows a tab panel for selecting:\n  * hiding (showing the Graph)\n  * Nodes Table\n  * Edges Table\n  * Help\n\n  The panel itself can be resized vertically.\n\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nvar DBG = true;\n\n\n/// UNISYS INITIALIZE REQUIRES for REACT ROOT /////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst UNISYS = require('unisys/client');\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst React = require('react');\nconst ReactStrap = require('reactstrap');\nconst { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col, Button } = ReactStrap;\nconst classnames = require('classnames');\n\nconst Help = require('./Help');\nconst Vocabulary = require('./Vocabulary');\nconst NodeTable = require('./NodeTable');\nconst EdgeTable = require('./EdgeTable');\n\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass InfoPanel extends UNISYS.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: '1',\n      tabpanelTop: '0',\n      draggerMouseOffsetY: '0',   // Mouse click position inside dragger\n                                  // Allows user to grab dragger from the middle\n      tabpanelHeight: '50px',\n      tableHeight: '350px',\n      savedTabpanelHeight: '350px',\n      draggerTop: 'inherit',\n      hideDragger: true\n    }\n\n    this.toggle = this.toggle.bind(this);\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.endDrag = this.endDrag.bind(this);\n    this.handleDrag = this.handleDrag.bind(this);\n\n  } // constructor\n\n\n\n  /// UI EVENT HANDLERS /////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/\n  /*/\n  toggle(tab) {\n    window.event.stopPropagation();\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab });\n      if ((tab === `1`) ||  (tab === '5')) {\n        this.setState({\n          tabpanelHeight: '50px', // show only tab buttons\n          hideDragger: true\n        });\n      } else {\n        this.setState({\n          tabpanelHeight: this.state.savedTabpanelHeight,\n          hideDragger: false\n        });\n      }\n    } else {\n      // Second click on currently open tab\n      // so select tab 1\n      this.setState({ activeTab: `1` });\n      this.setState({\n        tabpanelHeight: '50px', // show only tab buttons\n        hideDragger: true\n      });\n    }\n  }\n\n  handleMouseDown(e) {\n    e.stopPropagation();\n\n    let dragger = e.target;\n    this.setState({ draggerMouseOffsetY: dragger.offsetTop - e.clientY });\n\n    document.onmouseup = this.endDrag;\n    document.onmousemove = this.handleDrag;\n  }\n  handleDrag(e) {\n    e.stopPropagation();\n    let top = e.clientY + this.state.draggerMouseOffsetY;\n    this.setState({\n      tabpanelHeight: (top - this.state.tabpanelTop) + 'px',\n      tableHeight: (top - this.state.tabpanelTop - 95) + 'px',    // Hacked tab button + thead offset\n      draggerTop: top + 'px',\n      savedTabpanelHeight: (top - this.state.tabpanelTop) + 'px'  // remember height when switching tabs\n    });\n  }\n  endDrag() {\n    document.onmouseup = null;\n    document.onmousemove = null;\n  }\n\n\n  /// REACT LIFECYCLE METHODS ///////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ This is not yet implemented as of React 16.2.  It's implemented in 16.3.\n      getDerivedStateFromProps (props, state) {\n        console.error('getDerivedStateFromProps!!!');\n      }\n  /*/\n  /*/ This this fires after render().\n  /*/\n  componentDidMount() {\n    let tabpanel = document.getElementById('tabpanel');\n    this.setState({\n      tabpanelTop: tabpanel.offsetTop\n    });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/\n  /*/\n  render() {\n    let { tabpanelHeight, tableHeight, hideDragger, draggerTop } = this.state;\n    return (\n      <div>\n        <div id='tabpanel'\n          style={{ height: tabpanelHeight, overflow: 'hidden', backgroundColor: '#eee', padding: '5px' }}>\n          <Nav tabs>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: this.state.activeTab === '1' })}\n                onClick={() => { this.toggle('1'); ga('send', { hitType: 'event', eventCategory: 'Tab', eventAction: 'Graph', eventLabel: '' + window.location  }); } }\n              >\n                Graph\n                        </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: this.state.activeTab === '2' })}\n                onClick={() => { this.toggle('2'); ga('send', { hitType: 'event', eventCategory: 'Tab', eventAction: 'Nodes Table', eventLabel: '' + window.location }); }}\n              >\n                Nodes Table\n                        </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: this.state.activeTab === '3' })}\n                onClick={() => { this.toggle('3'); ga('send', { hitType: 'event', eventCategory: 'Tab', eventAction: 'Edges Table', eventLabel: '' + window.location  }); }}\n              >\n                Edges Table\n                        </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: this.state.activeTab === '4' })}\n                onClick={() => { this.toggle('4'); ga('send', { hitType: 'event', eventCategory: 'Tab', eventAction: 'Vocabulary', eventLabel: '' + window.location  }); }}\n              >\n                Vocabulary\n                        </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: this.state.activeTab === '5' })}\n                onClick={() => { this.toggle('5'); ga('send', { hitType: 'event', eventCategory: 'Tab', eventAction: 'Help', eventLabel: '' + window.location  }); }}\n              >\n                Help\n                        </NavLink>\n            </NavItem>\n          </Nav>\n          <TabContent activeTab={this.state.activeTab} >\n            <TabPane tabId=\"1\">\n            </TabPane>\n            <TabPane tabId=\"2\">\n              <Row>\n                <Col sm=\"12\">\n                  <NodeTable tableHeight={tableHeight} />\n                </Col>\n              </Row>\n            </TabPane>\n            <TabPane tabId=\"3\">\n              <Row>\n                <Col sm=\"12\">\n                  <EdgeTable tableHeight={tableHeight} />\n                </Col>\n              </Row>\n            </TabPane>\n            <TabPane tabId=\"4\">\n              <Row>\n                <Col sm=\"12\">\n                  <Vocabulary tableHeight={tableHeight} />\n                </Col>\n              </Row>\n            </TabPane>\n            <TabPane tabId=\"5\">\n              <Row>\n                <Col sm=\"12\">\n                  <Help />\n                </Col>\n              </Row>\n            </TabPane>\n          </TabContent>\n        </div>\n\n        <div id='dragger' hidden={hideDragger}\n          style={{\n            top: draggerTop,\n            position: 'absolute', width: '100%', height: '10px', backgroundColor: 'gray',\n            cursor: 'ns-resize'\n          }}\n          onMouseDown={this.handleMouseDown}\n        ></div>\n\n      </div>\n    );\n  }\n\n} // class InfoPanel\n\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = InfoPanel;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    NetGraph is a React wrapper for a D3 net graph component.\n\n    This component uses React to create the base dom element, but D3NetGraph\n    handles the data updates, rendering and animation updates.\n\n    React is explicitly prevented from updating the component (see\n    shouldComponentUpdate)\n\n    ## TO USE\n\n            <NetGraph/>\n\n    ## Why not use FauxDom?\n\n    https://lab.oli.me.uk/react-faux-dom-state/\n    This article suggests that maybe using force graphs with react-faux-dom\n    not quite work.\n        \"If you want to animate things, use a React animation library (they’re\n         great and work fine with faux DOM), you have to find the React way to\n         do things, sadly some D3 concepts just don’t translate. If you want\n         some physics based graph full of state then you’re probably better\n         off keeping to the original way of embedding D3 in React, dropping\n         out of React and letting D3 mutate that element.\"\n    Indeed, in our testing, the animation updates were not optimal.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nvar DBG = false;\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst React      = require('react')\nconst ReactDOM   = require('react-dom')\nconst ReactStrap = require('reactstrap');\nconst { Button } = ReactStrap;\nconst D3NetGraph = require('./d3-simplenetgraph')\nconst UNISYS     = require('unisys/client');\n\n\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass NetGraph extends UNISYS.Component {\n    constructor (props) {\n      super(props)\n      this.state = {\n        d3NetGraph: {}\n      }\n\n      this.onZoomReset = this.onZoomReset.bind(this);\n      this.onZoomIn    = this.onZoomIn.bind(this);\n      this.onZoomOut   = this.onZoomOut.bind(this);\n\n    } // constructor\n\n\n/// CLASS PRIVATE METHODS /////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ onZoomReset() {\n      this.AppCall('ZOOM_RESET', {});\n    }\n/*/\n/*/ onZoomIn() {\n      this.AppCall('ZOOM_IN', {});\n    }\n/*/\n/*/ onZoomOut() {\n      this.AppCall('ZOOM_OUT', {});\n    }\n\n/// REACT LIFECYCLE ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ componentDidMount () {\n      // D3NetGraph Constructor\n      let el = ReactDOM.findDOMNode(this);\n      let d3NetGraph = new D3NetGraph(el);\n      this.setState({ d3NetGraph });\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ shouldComponentUpdate () {\n      // This prevents React from updating the component,\n      // allowing D3 to handle the simulation animation updates\n      // This is also necessary for D3 to handle the\n      // drag events.\n      return false;\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ render () {\n      return (\n        <div style={{ height: '100%' }}>\n          <div><span style={{ fontSize: '9px' }}>NETGRAPH</span></div>\n          <div style={{ position: 'absolute', right: '10px', width: '50px', zIndex:1001 }}>\n            <Button outline onClick={this.onZoomIn} style={{width:'35px'}}>+</Button>&nbsp;\n            <Button outline onClick={this.onZoomReset} style={{ width: '35px' }}>&bull;</Button>&nbsp;\n            <Button outline onClick={this.onZoomOut} style={{ width: '35px' }}>-</Button>\n          </div>\n        </div>\n      )\n    }\n} // class NetGraph\n\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NetGraph;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Node Detail is a display widget that shows all of the meta information\n  contained in each data node.\n\n  If label is undefined the component will not be shown.\n\n  Node Detail automatically shows the SELECTION.hilitedNode object.\n\n\n  ## TO USE\n\n    Add the following to the render() of the parent component:\n\n      render() {\n        return (\n          ...\n                <NodeDetail/>\n          ...\n        )\n      }\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nvar DBG = false;\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst React = require('react')\nconst ReactStrap = require('reactstrap')\nconst { Table, FormText } = ReactStrap\n\nconst UNISYS   = require('unisys/client');\n\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass NodeDetail extends UNISYS.Component {\n    constructor (props) {\n      super(props)\n      this.state = {\n        label: undefined,\n        type: '',\n        info: '',\n        notes: ''\n      }\n      this.handleSelection  = this.handleSelection.bind(this);\n\n      // Always make sure that class methods are bind()'d before\n      // assigning them to a handler\n      this.OnAppStateChange('SELECTION',( stateChange ) => {\n        this.handleSelection(stateChange.hilitedNode);\n      });\n    } // constructor\n\n\n\n/// UI HANDLERS ///////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ handleSelection( hilitedNode ) {\n      let node = hilitedNode || {};\n      node.attributes = node.attributes || {};    // validate attributes\n      this.setState({\n        label : node.label,\n        type  : node.attributes[\"Node_Type\"],     // HACK This needs to be updated when\n        info  : node.attributes[\"Extra Info\"],    // the data format is updated\n        notes : node.attributes[\"Notes\"]          // These were bad keys from Fusion Tables.\n      });\n    } // handleSelection\n\n\n\n/// REACT LIFECYCLE METHODS ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ render () {\n      return (\n        <div className={this.state.label===undefined ? \"d-none\" : \"\"}\n             style={{minHeight:'300px',minWidth:'240px',backgroundColor:'#c7f1f1',padding:'5px',marginBottom:'10px'}}>\n          <FormText>NODE DETAIL (RF)</FormText>\n          <Table borderless striped size=\"sm\"><tbody>\n            <tr><td>Label:&nbsp;&nbsp;</td><td>{this.state.label}</td></tr>\n            <tr><td>Type: </td><td>{this.state.type}</td></tr>\n            <tr><td>Notes:</td><td>{this.state.notes}</td></tr>\n            <tr><td>Info: </td><td>{this.state.info}</td></tr>\n          </tbody></Table>\n        </div>\n      )\n    }\n} // class NodeDetail\n\n\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NodeDetail;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    ## OVERVIEW\n\n    NodeSelector is a form for searching for, viewing, selecting, and editing\n    Node information.\n\n    NodeSelector does not modify any data.  It passes all events (text updates,\n    highlights, and suggestion selections) up to nc-logic. it\n    should process the events and update the data accordingly.  The\n    updated data is then rendered by NodeSelector.\n\n    ## USAGE\n\n      <NodeSelector/>\n\n    ## TECHNICAL DESCRIPTION\n\n    NodeSelector handles three basic functions:\n\n    1. Display the current SELECTION.nodes[0]\n    2. Support input of node fields\n    3. Send updated node field data to SOURCE_UPDATE\n\n    As the user edits the form, we locally save the changes and send it to UNISYS\n    when the user clicks \"SAVE\"\n\n    The currently selected/editing node is set via SELECTION.nodes.\n\n    Updates are sent to UNISYS via SOURCE_UPDATE.\n\n    The AutoComplete search field is handled a little differently from the other\n    input fields because it is independent of NodeSelector.  In order to keep\n    NodeSelector's internal representation of form data up-to-date, we rely on\n    the SELECTION updates' searchLabel field to update the label.\n\n    There are two different levels of write-access:\n\n      isLocked        Nodes can be selected for viewing, but editing\n                      cannot be enabled.\n\n      isEditable      The form fields are active and can be edited.\n\n\n    Delete Button\n    The Delete button is only displayed for an admin user.  Right now we are detecting\n    this by displaying it only when the user is on `localhost`,\n\n\n    ## STATES\n\n      formData        Node data that is shown in the form\n\n      isLocked        If true (defauilt), nodes can be displayed, but\n                      \"Add New Node\" and \"Edit Node\" buttons are hidden.\n                      The state is unlocked when the user logs in.\n\n      isEditable      If true, form fields are enabled for editing\n                      If false, form is readonly\n                      \n      dbIsLocked\n                      If someone else has selected the node for editing,\n                      this flag will cause the dbIsLockedMessage\n                      to be displayed.  This is only checked when\n                      the user clicks \"Edit\".\n\n\n    ## TESTING\n\n    Edit Existing Node\n\n      1. Type 'ah'\n            * Nodes on graph should hilite\n            * Suggestions should be displayed\n            * \"Add New Node\" should be shown.\n      2. Highlight 'Ah Sing'\n            * Ah Sing node detail should be shown\n      3. Unhighlight all selections (move mouse out)\n            * NodeDetail should disappear\n      4. Click 'Ah Sing'\n            * 'Ah Sing's details should load in form\n            * \"Edit Node\" button should be shown.\n      5. Click \"Edit Node\"\n            * \"Save\" should be shown\n            * All fields should be enabled\n      6. Edit 'Ah Sing' to 'Ah Sing A'\n            * Form should not change\n            * Hilited graph node should go away\n      7. Edit fields (add text)\n      8. Click \"Save\"\n            * Form should clear\n      9. Check 'Ah Sing' contents to make sure changes were saved\n\n    Create New Node\n\n      1. Type 'ah'\n            * Nodes on graph should hilite\n            * Suggestions should be displayed\n            * \"Add New Node\" should be shown.\n      2. Click 'Add New Node'\n            * Fields should be enabled\n            * A new ID should be added\n            * \"Save\" button should appear\n      3. Edit fields\n      4. Click \"Save\"\n            * New node should appear in graph\n            * The node should have the label you added 'ah'\n      5. Select the node to verify the contents\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst DBG = false;\nconst PR  = 'NodeSelector';\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst React        = require('react');\nconst ReactStrap   = require('reactstrap');\nconst { Button, Col, Form, FormGroup, FormFeedback, FormText, Label, Input } = ReactStrap;\nconst AutoComplete = require('./AutoComplete');\nconst NodeDetail   = require('./NodeDetail');\nconst EdgeEditor   = require('./EdgeEditor');\n\nconst UNISYS       = require('unisys/client');\nconst DATASTORE    = require('system/datastore');\nconst SETTINGS     = require('settings');\n\nconst thisIdentifier = 'nodeSelector';   // SELECTION identifier\n\nconst isLocalHost  = (SETTINGS.EJSProp('client').ip === '127.0.0.1');\n\nvar   UDATA        = null;\n\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass NodeSelector extends UNISYS.Component {\n    constructor (props) {\n      super(props);\n      this.state = {\n        nodePrompts:   this.AppState('TEMPLATE').nodePrompts,\n        formData: {\n            label:     '',\n            type:      '',\n            info:      '',\n            notes:     '',\n            id:        '',   // Always convert this to a Number\n            isNewNode: true\n        },\n        edges:         [],\n        isLocked:       true,\n        edgesAreLocked: false,\n        dbIsLocked: false,\n        isEditable:    false,\n        isValid:       false,\n        isDuplicateNodeLabel: false,\n        duplicateNodeID:   '',\n        replacementNodeID: '',\n        isValidReplacementNodeID: true\n      };\n      // Bind functions to this component's object context\n      this.clearForm                             = this.clearForm.bind(this);\n      this.getNewNodeID                          = this.getNewNodeID.bind(this);\n      this.handleSelection                       = this.handleSelection.bind(this);\n      this.onStateChange_SEARCH                  = this.onStateChange_SEARCH.bind(this);\n      this.onStateChange_SESSION                 = this.onStateChange_SESSION.bind(this);\n      this.loadFormFromNode                      = this.loadFormFromNode.bind(this);\n      this.validateForm                          = this.validateForm.bind(this);\n      this.onLabelChange                         = this.onLabelChange.bind(this);\n      this.onTypeChange                          = this.onTypeChange.bind(this);\n      this.onNotesChange                         = this.onNotesChange.bind(this);\n      this.onInfoChange                          = this.onInfoChange.bind(this);\n      this.onReplacementNodeIDChange             = this.onReplacementNodeIDChange.bind(this);\n      this.onNewNodeButtonClick                  = this.onNewNodeButtonClick.bind(this);\n      this.onDeleteButtonClick                   = this.onDeleteButtonClick.bind(this);\n      this.onEditButtonClick                     = this.onEditButtonClick.bind(this);\n      this.editNode = this.editNode.bind(this);\n      this.onAddNewEdgeButtonClick               = this.onAddNewEdgeButtonClick.bind(this);\n      this.onCancelButtonClick                   = this.onCancelButtonClick.bind(this);\n      this.onEditOriginal                        = this.onEditOriginal.bind(this);\n      this.onCloseDuplicateDialog                = this.onCloseDuplicateDialog.bind(this);\n      this.onSubmit                              = this.onSubmit.bind(this);\n\n      // NOTE: assign UDATA handlers AFTER functions have been bind()'ed\n      // otherwise they will lose context\n\n      /// Initialize UNISYS DATA LINK for REACT\n      UDATA = UNISYS.NewDataLink(this);\n\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ SESSION is called by SessionSHell when the ID changes\n      set system-wide. data: { classId, projId, hashedId, groupId, isValid }\n  /*/ this.OnAppStateChange('SESSION',this.onStateChange_SESSION);\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n      this.OnAppStateChange('SELECTION',(change) => {\n        this.handleSelection(change);\n      });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n      this.OnAppStateChange('SEARCH', this.onStateChange_SEARCH);\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n      // Handle Template updates\n      this.OnAppStateChange('TEMPLATE',(data) => {\n        this.setState({nodePrompts: data.nodePrompts});\n      });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ If someone on the network updates a node or edge, SOURCE_UPDATE is broadcast.\n      We catch it here and update the selection if the node we're displaying matches\n      the updated node.\n      This basically handles updated Node labels in both the main node and in related\n      edges.\n  /*/\n      UDATA.HandleMessage(\"SOURCE_UPDATE\", (data) => {\n        let needsUpdate = false;\n        let currentNodeID = this.state.formData.id;\n        let updatedNodeID = data.node.id;\n        if (currentNodeID === updatedNodeID) needsUpdate = true;\n        this.state.edges.forEach(edge => {\n          if ((edge.source.id === updatedNodeID) || (edge.target.id === updatedNodeID)) needsUpdate = true;\n        })\n        if (needsUpdate) UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [currentNodeID] });\n      });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ This will add any new edges that have links to the currently selected node\n      to the list of edges in the NodeSelector.\n      IMPORTANT: We ignore edge updates if an edge is currently being edited to\n      prevent edge updates from clobbering the edit.  The list of edges is\n      updated after the edit is completed, so new edges are added then.\n  /*/\n      UDATA.HandleMessage(\"EDGE_UPDATE\", (data) => {\n        if (DBG) console.log('NodeSelector: Received EDGE_UPDATE edgesAreLocked', this.state.edgesAreLocked, data);\n        let currentNodeID = this.state.formData.id;\n        /* EDGE_UPDATES are triggered under two circumnstances:\n           a. When an existing edge is updated\n           b. When a new edge is created\n           The call sequence is:\n           1. EdgeEditor.Submit calls datastore.DB_UPDATE\n           2. datastore.DB_UPDATE calls server.SRV_DBUPDATE\n           3. server.SRV_DBUPDATE broadcasts EDGE_UPDATE\n              At this point, edge.source and edge.target are broadcast as Numbers.\n           4. EDGE_UPDATE is handled by:\n              a. nc-logic.handleMessage(\"EDGE_UPDATE\"), and\n              b. NodeSelector.handlemMessage(\"EDGE_UPDATE\") (this method)\n           5. nc-logic.handleMessage(\"EDGE_UPDATE\") processes the data and\n              actually adds a new edge or updates the existing edge in D3DATA.\n              *** The key is that there is a difference in how it's handled.\n              For updates, the edge is simply updated.\n              But for new edges, the edge object is updated and then pushed to D3DATA.\n           6. When the edge object is pushed to D3DATA, D3 processes it and converts\n              edge.source and edge.target into node objects.\n              *** By the time NodeSelector receives the edge data, edge.source and\n              edge.target are node objects, not numbers.\n           So this method needs to account for the fact that edge.source and edge.target might be\n           received as either numbers or objects.\n        */\n        let sourceID = typeof data.edge.source === \"number\" ? data.edge.source : data.edge.source.id;\n        let targetID = typeof data.edge.target === \"number\" ? data.edge.target : data.edge.target.id;\n        let updatedNodeIDs = [sourceID, targetID];\n        if (updatedNodeIDs.includes(currentNodeID) && !this.state.edgesAreLocked) {\n          if (DBG) console.log('NodeSelector: EDGE UPDATE: Calling SOURCE_SELECT!');\n          UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [currentNodeID] });\n        }\n      });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n      // This handler is not necessary because SELECTION event clears the form\n      // UDATA.HandleMessage(\"NODE_DELETE\", (data) => {\n      // });\n      // This handler is not necessary because SELECTION event will update the edges\n      // UDATA.HandleMessage(\"EDGE_DELETE\", (data) => {\n      // });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ This keeps track of whether an edge is being edited to prevent network\n      updates from clobbering an in-process edit.\n  /*/\n      UDATA.HandleMessage(\"EDGEEDIT_LOCK\", (data) => {\n        this.setState({ edgesAreLocked: true });\n      });\n      UDATA.HandleMessage(\"EDGEEDIT_UNLOCK\", (data) => {\n        this.setState({ edgesAreLocked: false });\n      });\n\n    } // constructor\n\n/// UTILITIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Clear the form with optional label\n/*/ clearForm ( label='' ) {\n      this.setState({\n        formData: {\n            label,\n            type:      '',\n            info:      '',\n            notes:     '',\n            id:         '',   // Always convert this to a Number\n            isNewNode: true\n        },\n        edges: [],\n        dbIsLocked: false,\n        isEditable:      false,\n        isValid:         false,\n        isDuplicateNodeLabel: false,\n        duplicateNodeID:   '',\n        replacementNodeID: '',\n        isValidReplacementNodeID: true\n      });\n    } // clearFform\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Return a new unique ID\n    REVIEW: Should this be in nc-logic?\n    ANSWER: YES. There shouldn't be ANY data-synthesis code in a component!\n    HACK: Replace this code with a server call\n/*/ getNewNodeID () {\n      throw new Error(\"Don't use getNewNodeID() because it is not network safe\");\n      /*/\n      let highestID = 0;\n      let ids  = this.AppState('D3DATA').nodes.map( node => { return Number(node.id) } );\n      if (ids.length>0) {\n        highestID = ids.reduce( (a,b) => { return Math.max(a,b) } );\n      }\n      // REVIEW: Should ids be strings or numbers?\n      // Right now most edge ids are strings\n      return (highestID+1).toString();\n      /*/\n    } // getNewNodeID\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Return a new unique ID\n/*/ getNewEdgeID () {\n      throw new Error(\"Don't use getNewEdgeID() because it is not network safe\");\n      /*/\n      let highestID = 0;\n      let ids  = this.AppState('D3DATA').edges.map( edge => { return Number(edge.id) } )\n      if (ids.length>0) {\n        highestID = ids.reduce( (a,b) => { return Math.max(a,b) } );\n      }\n      // REVIEW: Should ids be strings or numbers?\n      // Right now most edge ids are strings\n      return (highestID+1).toString();\n      /*/\n    } // getNewEdgeID\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Handle updated SELECTION\n/*/ handleSelection ( data ) {\n      if (DBG) console.log('NodeSelector: got state SELECTION',data);\n\n      // Only update if we are the currently active field\n      // otherwise an Edge might be active\n      let { activeAutoCompleteId } = this.AppState('ACTIVEAUTOCOMPLETE');\n      if ( (activeAutoCompleteId!==thisIdentifier) &&\n           (activeAutoCompleteId!=='search')          ) return;\n\n      if (!this.state.isEditable) {\n        if (data.nodes && data.nodes.length>0) {\n\n          // A node was selected, so load it\n          // We're not editing, so it's OK to update the form\n          if (DBG) console.log('NodeSelector: updating selection',data.nodes[0]);\n          // grab the first node\n          let node = data.nodes[0];\n          this.loadFormFromNode( node );\n\n          // Load edges\n          let thisId = this.state.formData.id;\n          // -- First, sort edges by source, then target\n          data.edges.sort( (a,b) => {\n            if (a.source.label === b.source.label) {\n              // same source label, sort on target\n              if (a.target.label < b.target.label) { return -1; }\n              if (a.target.label > b.target.label) { return 1;  }\n            }\n            // Always list `this` node first\n            if (a.source.id === thisId) { return -1; }\n            if (b.source.id === thisId) { return 1;  }\n            // Otherwise sort on source\n            if (a.source.label < b.source.label) { return -1; }\n            if (a.source.label > b.source.label) { return 1;  }\n            return 0;\n          });\n          this.setState({\n            edges: data.edges\n          })\n          // Exit now because we just selected a node and don't want to\n          // override the form label with form updates.  Otherwise, the\n          // the form label is overriden with old form data.\n          return;\n        } else {\n          if (DBG) console.log('NodeSelector: No data.nodes, so clearing form');\n          this.clearForm();\n        }\n      } else {\n        // We're already editing, and another selection has come in.\n        // What should we do?\n        // * force exit?\n        // * prevent load?\n        // * prevent selection?\n        if (DBG) console.log('NodeSelector: Already editing, ignoring SELECTION');\n      }\n\n      this.validateForm();\n\n    } // handleSelection\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Handle change in SESSION data\n    Called both by componentWillMount() and AppStateChange handler.\n    The 'SESSION' state change is triggered in two places in SessionShell during\n    its handleChange() when active typing is occuring, and also during\n    SessionShell.componentWillMount()\n/*/ onStateChange_SESSION( decoded ) {\n      let update = { isLocked:   !decoded.isValid };\n      this.setState(update);\n    }\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Handle updated SEARCH\n    AutoComplete handles its internal updates, but we do need to validate the form\n    When AutoComplete's input field is updated, it sends a SOURCE_SEARCH to ACL\n    which returns the updated value in SEARCH state.  AutoComplete updates\n    the input field using SEARCH.  We need to update the form data here\n    and validate it for NodeSelector.\n/*/ onStateChange_SEARCH ( data ) {\n      // Only update if we are the currently active field\n      // otherwise an Edge might be active\n      let { activeAutoCompleteId } = this.AppState('ACTIVEAUTOCOMPLETE');\n      if ( activeAutoCompleteId!==thisIdentifier ) return;\n      let formData = this.state.formData;\n      formData.label = data.searchLabel;\n\n      // \"Duplicate Node Label\" is only a warning, not an error.\n      // We want to allow students to enter a duplicate label if necessary\n      // This is a case insensitive search\n      let isDuplicateNodeLabel = false;\n      let duplicateNodeID;\n      if (\n        formData.label !== '' &&\n        this.AppState('D3DATA').nodes.find(node => {\n            if ((node.id !== formData.id) &&\n              (node.label.localeCompare(formData.label, 'en', { usage: 'search', sensitivity: 'base' })) === 0) {\n              duplicateNodeID = node.id;\n              return true;\n            }\n            return false;\n        })) {\n        isDuplicateNodeLabel = true;\n      }\n\n      this.setState({\n        formData,\n        isDuplicateNodeLabel,\n        duplicateNodeID\n      });\n\n      this.validateForm();\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Copy the node data passed via SELECTION in the form\n/*/ loadFormFromNode ( newNode ) {\n      if (DBG) console.log('NodeSelector.loadFormFromNode',newNode);\n      if (newNode===undefined) {\n        throw \"NodeSelector.loadFormFromNode called with undefined newNode!\";\n      }\n      // Clean data\n      // REVIEW: Basic data structure probably needs updating\n      let node = {attributes:{}};\n      if (newNode.attributes === undefined) { newNode.attributes = {} }\n      // Backward Compatibility: Always convert ids to a Number or loki lookups will fail.\n      if (isNaN(newNode.id)) { newNode.id = parseInt(newNode.id); }\n      //\n      node.label                    = newNode.label || '';\n      node.id                       = newNode.id    || '';\n      node.attributes[\"Node_Type\"]  = newNode.attributes[\"Node_Type\"]  || '';\n      node.attributes[\"Extra Info\"] = newNode.attributes[\"Extra Info\"] || '';\n      node.attributes[\"Notes\"]      = newNode.attributes[\"Notes\"]      || '';\n      // Copy to form\n      this.setState({\n        formData: {\n          label:     node.label,\n          type:      node.attributes[\"Node_Type\"],     // HACK This needs to be updated when\n          info:      node.attributes[\"Extra Info\"],    // the data format is updated\n          notes:     node.attributes[\"Notes\"],         // These were bad keys from Fusion Tables.\n          id:        node.id,\n          isNewNode: false\n        },\n        dbIsLocked: false,\n        isEditable: false,\n        isDuplicateNodeLabel: false\n      });\n\n      this.validateForm();\n    } // loadFormFromNode\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ validateForm () {\n      let isValid = false;\n      let formData = this.state.formData;\n\n      if (formData.label!=='') isValid=true;\n      if (DBG) console.log('NodeSElector.validateForm: Validating',isValid,'because label is',formData.label,'!');\n      this.setState({\n        isValid: isValid\n      })\n    }\n\n/// UI EVENT HANDLERS /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// REVIEW: Do we really need to manage each input field change with a state update\n/// or can we just grab the final text during the \"SAVE\"?\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ onLabelChange (label) {\n      // REVIEW: Currently this is not being called because AutoComplete\n      // doesn't have a change handler\n      let node = this.state.formData;\n      node.label = label;\n      this.setState({ formData: node });\n      this.validateForm();\n    } // onLabelChange\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ onTypeChange (event) {\n      let node = this.state.formData;\n      node.type = event.target.value;\n      this.setState({ formData: node });\n    } // onTypeChange\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ onNotesChange (event) {\n      let node = this.state.formData;\n      node.notes = event.target.value;\n      this.setState({ formData: node });\n    } // onNotesChange\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ onInfoChange (event) {\n      let node = this.state.formData;\n      node.info = event.target.value;\n      this.setState({ formData: node });\n    } // onInfoChange\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/\n  onReplacementNodeIDChange(event) {\n    let replacementNodeID = parseInt( event.target.value );\n    let isValid = false;\n    // Allow `` because we use a a blank field to indicate delete node without relinking edges.\n    if ((event.target.value === '') ||\n        (this.AppState('D3DATA').nodes.find(node => { return node.id === replacementNodeID; })) ) {\n      isValid = true;\n    }\n    this.setState({\n      replacementNodeID: replacementNodeID,\n      isValidReplacementNodeID: isValid\n    });\n  } // onReplacementNodeIDChange\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ onNewNodeButtonClick (event) {\n      event.preventDefault();\n\n      // Save the search label to re-insert into the new node\n      let label = this.AppState('SEARCH').searchLabel;\n\n      // claim the AutoComplete form and populate it with the\n      // current search term\n      this.AppCall('AUTOCOMPLETE_SELECT',{id:thisIdentifier})\n      .then(()=>{\n        this.AppCall('SOURCE_SEARCH', { searchString: label });\n      });\n      // HACK: call server to retrieve an unused node ID\n      // FIXME: this kind of data manipulation should not be in a GUI component\n      DATASTORE.PromiseNewNodeID()\n      .then((newNodeID)=>{\n        this.setState({\n          formData: {\n              label:     label,\n              type:      '',\n              info:      '',\n              notes:     '',\n              id:        newNodeID,\n              isNewNode: true\n          },\n          edges: [],\n          isEditable:      true,\n          isValid:         false\n        });\n\n        this.validateForm();\n      });\n    } // onNewNodeButtonClick\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/\n  /*/\n  onDeleteButtonClick() {\n    // nodeID needs to be a Number.  It should have been set in loadFormFromNode\n    let nodeID = this.state.formData.id;\n\n    // Re-link edges or delete edges?\n    // `NaN` is not valid JSON, so we need to pass -1\n    let replacementNodeID = this.state.replacementNodeID==='' ? -1 : parseInt( this.state.replacementNodeID );   // '' = Delete edges by default\n\n    this.clearForm();\n    this.AppCall('DB_UPDATE', {\n      nodeID: nodeID,\n      replacementNodeID: replacementNodeID\n    });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/\n  /*/\n  onEditButtonClick(event) {\n    event.preventDefault();\n\n    // nodeID needs to be a Number.  It should have been set in loadFormFromNode\n    let nodeID = this.state.formData.id;\n\n    this.NetCall('SRV_DBLOCKNODE', { nodeID: nodeID })\n    .then((data)=>{\n      if (data.NOP) {\n        console.log(`SERVER SAYS: ${data.NOP} ${data.INFO}`);\n        this.setState({ dbIsLocked: true });\n      } else if (data.locked) {\n        console.log(`SERVER SAYS: lock success! you can edit Node ${data.nodeID}`);\n        console.log(`SERVER SAYS: unlock the node after successful DBUPDATE`);\n        this.setState({ dbIsLocked: false });\n        this.editNode();\n      }\n    });\n  } // onEditButtonClick\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/\n  /*/\n  editNode() {\n    this.setState({ isEditable: true });\n    // Add ID if one isn't already defined\n    let formData = this.state.formData;\n    if (formData.id==='') {\n      throw Error('NodeSelector.onEditButtonClick trying to edit a node with no id!  This shouldn\\'t happen!');\n    }\n    this.AppCall('AUTOCOMPLETE_SELECT',{id:thisIdentifier}).then(()=>{\n      // Set AutoComplete field to current data, otherwise, previously canceled label\n      // might be displayed\n      this.AppCall('SOURCE_SEARCH', { searchString: formData.label });\n    });\n    this.setState({ formData });\n    this.validateForm();\n  } // editNode\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ onAddNewEdgeButtonClick (event) {\n      event.preventDefault();\n      /*\n            When creating a new edge, we first\n            1. Add a bare bones edge object with a new ID to the local state.edges\n            2. Pass it to render, so that a new EdgeEditor will be created.\n            3. In EdgeEditor, we create a dummy edge object\n      */\n\n      // HACK: call server to retrieve an unused edge ID\n      // FIXME: this kind of data manipulation should not be in a GUI component\n      DATASTORE.PromiseNewEdgeID()\n      .then((newEdgeID)=>{\n        // Add it to local state for now\n        let edge = {\n          id          : newEdgeID,\n          source      : undefined,\n          target      : undefined,\n          attributes  : {}\n        };\n        let edges = this.state.edges;\n        edges.push(edge);\n        this.setState({ edges: edges });\n      });\n    } // onAddNewEdgeButtonClick\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ onCancelButtonClick () {\n      // If we were editing, then revert and exit\n      if (this.state.isEditable) {\n        let originalNode = this.AppState('D3DATA').nodes.filter( node => { return node.id === this.state.formData.id; } )[0];\n        if (originalNode===undefined) {\n          // user abandoned editing a new node that was never saved\n          this.clearForm();\n        } else {\n          // restore original node\n          this.loadFormFromNode( originalNode );\n          this.setState({ isEditable: false });\n          // unlock\n          this.NetCall('SRV_DBUNLOCKNODE', { nodeID: this.state.formData.id })\n            .then((data) => {\n              if (data.NOP) {\n                console.log(`SERVER SAYS: ${data.NOP} ${data.INFO}`);\n              } else if (data.unlocked) {\n                console.log(`SERVER SAYS: unlock success! you have released Node ${data.nodeID}`);\n                this.setState({ dbIsLocked: false });\n              }\n            });\n        }\n        this.AppCall('AUTOCOMPLETE_SELECT', {id:'search'});\n      }\n    } // onCancelButtonClick\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ Select the node for editing\n  /*/\n  onEditOriginal(event) {\n    event.preventDefault();\n    let duplicateNodeID = parseInt(this.state.duplicateNodeID);\n    this.clearForm();\n    this.setState({\n      isEditable: false,\n      isDuplicateNodeLabel: false\n    }, () => {\n        // Wait for the edit state to clear, then open up the original node\n        UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [duplicateNodeID] });\n    });\n    this.AppCall('AUTOCOMPLETE_SELECT', { id: 'search' });\n  }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ User confirms they want to edit the existing node.\n  /*/\n  onCloseDuplicateDialog() {\n    this.setState({ isDuplicateNodeLabel: false });\n  }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ onSubmit ( event ) {\n      event.preventDefault();\n      // Update the data with the selectedNode\n      let formData = this.state.formData;\n      let node = {\n        label : formData.label,\n        id    : formData.id,\n        attributes: {\n          'Node_Type'  : formData.type,\n          'Extra Info' : formData.info,\n          'Notes'      : formData.notes\n        }\n      };\n      this.setState({ isEditable: false });\n      // clear AutoComplete form\n      this.AppCall('AUTOCOMPLETE_SELECT',{id:'search'})\n      .then(()=>{\n        // Reselect the saved node\n        this.AppCall('SOURCE_SEARCH', { searchString: node.label });\n      });\n      // write data to database\n      // setting dbWrite to true will distinguish this update\n      // from a remote one\n      this.AppCall('DB_UPDATE', { node })\n      .then(()=>{\n        this.NetCall('SRV_DBUNLOCKNODE', { nodeID: formData.id })\n          .then((data) => {\n            if (data.NOP) {\n              console.log(`SERVER SAYS: ${data.NOP} ${data.INFO}`);\n            } else if (data.unlocked) {\n              console.log(`SERVER SAYS: unlock success! you have released Node ${data.nodeID}`);\n              this.setState({ dbIsLocked: false });\n            }\n        });\n      });\n      // probably should unlock the node:\n\n    } // onSubmit\n\n\n/// REACT LIFECYCLE ///////////////////////////////////////////////////////////\n/*/ REACT calls this to receive the component layout and data sources\n/*/ render () {\n      let { nodePrompts } = this.state;\n      return (\n        <div>\n          <FormGroup className=\"text-right\" style={{paddingRight:'5px'}}>\n            <Button outline size=\"sm\"\n              hidden={this.state.isLocked || this.state.isEditable}\n              onClick={this.onNewNodeButtonClick}\n            >{\"Add New Node\"}</Button>\n          </FormGroup>\n          <Form className='nodeEntry' style={{minHeight:'300px',backgroundColor:'#B8EDFF',padding:'5px',marginBottom:'0px'}}\n            onSubmit={this.onSubmit}>\n            <FormText><b>NODE {this.state.formData.id||''}</b></FormText>\n            <FormGroup row>\n              <Col sm={3}>\n                <Label for=\"nodeLabel\" className=\"small text-muted\">Label</Label>\n              </Col>\n              <Col sm={9}>\n                <AutoComplete\n                  identifier={thisIdentifier}\n                  disabledValue={this.state.formData.label}\n                  inactiveMode={'disabled'}\n                  shouldIgnoreSelection={this.state.isEditable}\n                />\n              </Col>\n              <div hidden={!this.state.isDuplicateNodeLabel}\n                style={{ width: '200px', height: '150px', backgroundColor: '#B8EDFF', position: 'fixed', left: '350px', zIndex: '1000', padding: '10px' }}>\n                <p className=\"text-danger small\">{nodePrompts.label.duplicateWarning}</p>\n                <Button size=\"sm\" onClick={this.onEditOriginal}>View Existing</Button>\n                <Button outline size=\"sm\" onClick={this.onCloseDuplicateDialog}>Continue</Button>\n              </div>\n            </FormGroup>\n            <div style={{position:'absolute',left:'300px',maxWidth:'300px'}}>\n              <NodeDetail/>\n            </div>\n            <FormGroup row hidden={nodePrompts.type.hidden}>\n              <Col sm={3}>\n                <Label for=\"type\" className=\"small text-muted\">Type</Label>\n              </Col>\n              <Col sm={9}>\n                <Input type=\"select\" name=\"type\" id=\"typeSelect\"\n                  value={this.state.formData.type||''}\n                  onChange={this.onTypeChange}\n                  disabled={!this.state.isEditable}\n                  >\n                  {nodePrompts.type.options.map( (option,i) => (\n                    <option id={option.id} key={option.id}>{option.label}</option>\n                  ))}\n                </Input>\n              </Col>\n            </FormGroup>\n            <FormGroup row hidden={nodePrompts.notes.hidden}>\n              <Col sm={3}>\n                <Label for=\"notes\" className=\"small text-muted\">{nodePrompts.notes.label}</Label>\n              </Col>\n              <Col sm={9}>\n                <Input type=\"textarea\" name=\"note\" id=\"notesText\"\n                  value={this.state.formData.notes||''}\n                  onChange={this.onNotesChange}\n                  readOnly={!this.state.isEditable}\n                  />\n              </Col>\n            </FormGroup>\n            <FormGroup row hidden={nodePrompts.info.hidden}>\n              <Col sm={3}>\n                <Label for=\"info\" className=\"small text-muted\">Geocode or Date</Label>\n              </Col>\n              <Col sm={9}>\n                <Input type=\"text\" name=\"info\" id=\"info\"\n                  value={this.state.formData.info||''}\n                  onChange={this.onInfoChange}\n                  readOnly={!this.state.isEditable}\n                  />\n              </Col>\n            </FormGroup>\n            <FormGroup className=\"text-right\" style={{ paddingRight: '5px' }}>\n              <Button outline size=\"sm\"\n                hidden={this.state.isLocked || this.state.isEditable || (this.state.formData.id==='') }\n                onClick={this.onEditButtonClick}\n              >Edit Node</Button>\n              <p hidden={!this.state.dbIsLocked} className=\"small text-danger\">{nodePrompts.label.sourceNodeIsLockedMessage}</p>\n              <Button outline size=\"sm\"\n                hidden={!this.state.isEditable}\n                onClick={this.onCancelButtonClick}\n              >{this.state.isEditable?'Cancel':'Close'}</Button>&nbsp;\n              <Button color=\"primary\" size=\"sm\"\n                disabled={!this.state.isValid}\n                hidden={!this.state.isEditable}\n              >Save</Button>\n            </FormGroup>\n            <FormGroup row className=\"text-left\" style={{\n              padding: '10px 5px', margin: '0 -4px', backgroundColor: '#c5e0ef' }}\n              hidden={\n                !isLocalHost ||\n                this.state.isLocked || (this.state.formData.id === '') || nodePrompts.delete.hidden}\n            >\n              <Col sm={6}>\n                <FormText>Re-link edges to this Node ID (leave blank to delete edge)</FormText>\n              </Col>\n              <Col sm={6}>\n                <Input type=\"text\" name=\"replacementNodeID\" id=\"replacementNodeID\"\n                  value={this.state.replacementNodeID || ''}\n                  onChange={this.onReplacementNodeIDChange}\n                  className=\"\" style={{ width: `4em` }} bsSize=\"sm\"\n                  invalid={!this.state.isValidReplacementNodeID}\n                />\n                <FormFeedback>Invalid Node ID!</FormFeedback>\n                <Button className=\"small text-muted btn btn-outline-light\" size=\"sm\"\n                  onClick={this.onDeleteButtonClick}\n                >Delete</Button>\n              </Col>\n            </FormGroup>\n          </Form>\n          <div style={{backgroundColor:'#B9DFFF',padding:'5px',marginBottom:'10px'}}>\n            <FormText>EDGES</FormText>\n            {/* `key` is needed during edge deletion so EdgeEditors are properly\n                 removed when an edge is deleted.\n                 REVIEW: Can we replace edgeID with key?  */}\n            {this.state.edges.map( (edge,i) => (\n              <EdgeEditor\n                edgeID={edge.id}\n                key={edge.id}\n                parentNodeLabel={this.state.formData.label}\n              />\n            ))}\n            <FormGroup className=\"text-right\">\n              <Button outline size=\"sm\"\n                hidden={this.state.isLocked || this.state.formData.id===''||this.state.isEditable}\n                onClick={this.onAddNewEdgeButtonClick}\n              >Add New Edge</Button>\n            </FormGroup>\n          </div>\n        </div>\n      )\n    }\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ componentDidMount () {\n      this.onStateChange_SESSION(this.AppState('SESSION'));\n      this.validateForm();\n    }\n\n} // class NodeSelector\n\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NodeSelector;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  ## OVERVIEW\n\n    NodeTable is used to to display a table of nodes for review.\n\n\n  ## TO USE\n\n    NodeTable is self contained and relies on global D3DATA to load.\n\n      <NodeTable/>\n\n  ## 2018-12-07 Update\n\n    Since we're not using tab navigation:\n    1. The table isExpanded is now true by default.\n    2. The \"Show/Hide Table\" button is hidden.\n\n    Reset these to restore previous behavior.\n\n\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nvar DBG = false;\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst React        = require('react');\nconst ReactStrap   = require('reactstrap');\nconst { Button, Table }    = ReactStrap;\n\nconst UNISYS   = require('unisys/client');\nvar   UDATA    = null;\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass NodeTable extends UNISYS.Component {\n    constructor (props) {\n      super(props);\n\n      this.state = {\n        nodePrompts:  this.AppState('TEMPLATE').nodePrompts,\n        nodes: [],\n        edgeCounts: {},         // {nodeID:count,...}\n        isExpanded:   true,\n        sortkey:      'label'\n      };\n\n      this.onButtonClick            = this.onButtonClick.bind(this);\n      this.onToggleExpanded         = this.onToggleExpanded.bind(this);\n      this.setSortKey               = this.setSortKey.bind(this);\n\n\n      /// Initialize UNISYS DATA LINK for REACT\n      UDATA = UNISYS.NewDataLink(this);\n\n      // Always make sure class methods are bind()'d before using them\n      // as a handler, otherwise object context is lost\n      this.OnAppStateChange('D3DATA',(data) => {\n        this.handleDataUpdate(data);\n      });\n\n      // Handle Template updates\n      this.OnAppStateChange('TEMPLATE',(data) => {\n        this.setState({nodePrompts: data.nodePrompts});\n      });\n\n    } // constructor\n\n\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Handle updated SELECTION\n/*/\nhandleDataUpdate(data) {\n  if (data && data.nodes) {\n    this.countEdges();\n    this.setState({nodes: data.nodes});\n    this.sortTable();\n  }\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Build table of counts\n/*/\ncountEdges() {\n  let edgeCounts = this.state.edgeCounts;\n  this.AppState('D3DATA').edges.forEach( edge => {\n    edgeCounts[edge.source] = edgeCounts[edge.source]!==undefined ? edgeCounts[edge.source]+1 : 1;\n    edgeCounts[edge.target] = edgeCounts[edge.target]!== undefined ? edgeCounts[edge.target]+1 : 1;\n  })\n  this.setState({ edgeCounts: edgeCounts });\n}\n\n\n/// UTILITIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ sortByID (nodes) {\n      if (nodes) {\n        return nodes.sort( (a,b) => {\n          let akey = a.id,\n              bkey = b.id;\n          if (akey<bkey) return -1;\n          if (akey>bkey) return 1;\n          return 0;\n        });\n      }\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ sortByEdgeCount(nodes) {\n      if (nodes) {\n        let edgeCounts = this.state.edgeCounts;\n        return nodes.sort( (a, b) => {\n          let akey = edgeCounts[a.id] || 0,\n            bkey = edgeCounts[b.id] || 0;\n          // sort descending\n          if (akey > bkey) return -1;\n          if (akey < bkey) return 1;\n          return 0;\n        });\n      }\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ sortByLabel (nodes) {\n      if (nodes) {\n        return nodes.sort( (a,b) => {\n          let akey = a.label,\n              bkey = b.label;\n          if (akey<bkey) return -1;\n          if (akey>bkey) return 1;\n          return 0;\n        });\n      }\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ sortByAttribute (nodes, key) {\n      if (nodes) {\n        return nodes.sort( (a,b) => {\n          let akey = a.attributes[key],\n              bkey = b.attributes[key];\n          if (akey<bkey) return -1;\n          if (akey>bkey) return 1;\n          return 0;\n        });\n      }\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ If no `sortkey` is passed, the sort will use the existing state.sortkey\n/*/ sortTable ( sortkey=this.state.sortkey) {\n      let nodes = this.state.nodes;\n      switch (sortkey) {\n        case 'id':\n          this.sortByID(nodes);\n          break;\n        case 'edgeCount':\n          this.sortByEdgeCount(nodes);\n          break;\n        case 'type':\n          this.sortByAttribute(nodes, 'Node_Type');\n          break;\n        case 'notes':\n          this.sortByAttribute(nodes, 'Notes');\n          break;\n        case 'info':\n          this.sortByAttribute(nodes, 'Extra Info');\n          break;\n        case 'label':\n        default:\n          this.sortByLabel(nodes);\n          break;\n      }\n      this.setState({nodes: nodes});\n    }\n\n/// UI EVENT HANDLERS /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ onButtonClick (event) {\n      event.preventDefault();\n\n      // REVIEW: For some reason React converts the integer IDs into string\n      // values when returned in event.target.value.  So we have to convert\n      // it here.\n      let nodeID = parseInt( event.target.value );\n      UDATA.LocalCall('SOURCE_SELECT',{ nodeIDs: [nodeID] });\n\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ onToggleExpanded (event) {\n      this.setState({\n        isExpanded: !this.state.isExpanded\n      })\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ setSortKey (key) {\n      this.setState({sortkey: key});\n      this.sortTable(key);\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ selectNode (id, event) {\n      event.preventDefault();\n\n      // REVIEW: For some reason React converts the integer IDs into string\n      // values when returned in event.target.value.  So we have to convert\n      // it here.\n      // Load Source\n      UDATA.LocalCall('SOURCE_SELECT',{ nodeIDs: [parseInt(id)] });\n    }\n\n\n\n/// REACT LIFECYCLE METHODS ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ This is not yet implemented as of React 16.2.  It's implemented in 16.3.\n    getDerivedStateFromProps (props, state) {\n      console.error('getDerivedStateFromProps!!!');\n    }\n/*/\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ render () {\n      let { nodePrompts } = this.state;\n      let { tableHeight } = this.props;\n      let styles = `thead, tbody { display: block; }\n                    thead { position: relative; }\n                    tbody { overflow: auto; }\n                    .nodetable td:nth-child(1), .nodetable th:nth-child(1) {width: 4em; min-width: 4em;}\n                    .nodetable td:nth-child(2), .nodetable th:nth-child(2) {width: 5em; min-width: 5em;}\n                    .nodetable td:nth-child(3), .nodetable th:nth-child(3) {width: 10em; min-width: 10em;}\n                    .nodetable td:nth-child(4), .nodetable th:nth-child(4) {width: 4em; min-width: 4em;}\n                    .nodetable td:nth-child(5), .nodetable th:nth-child(5) {width: 4em; min-width: 4em;}\n                    .nodetable td:nth-child(6), .nodetable th:nth-child(6) {width: 25em; min-width: 25em;}`\n      return (\n        <div style={{backgroundColor:'#eafcff'}}>\n          <style>{styles}</style>\n          <Button size=\"sm\" outline hidden\n            onClick={this.onToggleExpanded}\n          >{this.state.isExpanded ? \"Hide Node Table\" : \"Show Node Table\"}</Button>\n          <Table hidden={!this.state.isExpanded} hover size=\"sm\"\n                 responsive striped\n                 className=\"nodetable\"\n          >\n            <thead>\n              <tr>\n                <th></th>\n                <th><Button size=\"sm\"\n                      disabled={this.state.sortkey === \"edgeCount\"}\n                      onClick={() => this.setSortKey(\"edgeCount\")}\n                    >{nodePrompts.degrees.label}</Button></th>\n                <th><Button size=\"sm\"\n                      disabled={this.state.sortkey===\"label\"}\n                      onClick={()=>this.setSortKey(\"label\")}\n                    >{nodePrompts.label.label}</Button></th>\n                <th hidden={nodePrompts.type.hidden}>\n                    <Button size=\"sm\"\n                      disabled={this.state.sortkey===\"type\"}\n                      onClick={()=>this.setSortKey(\"type\")}\n                    >{nodePrompts.type.label}</Button></th>\n                <th hidden={nodePrompts.info.hidden}>\n                    <Button size=\"sm\"\n                      disabled={this.state.sortkey===\"info\"}\n                      onClick={()=>this.setSortKey(\"info\")}\n                    >{nodePrompts.info.label}</Button></th>\n                <th width=\"45%\" hidden={nodePrompts.notes.hidden}>\n                    <Button size=\"sm\"\n                      disabled={this.state.sortkey===\"notes\"}\n                      onClick={()=>this.setSortKey(\"notes\")}\n                    >{nodePrompts.notes.label}</Button></th>\n              </tr>\n            </thead>\n            <tbody style={{maxHeight: tableHeight}}>\n            {this.state.nodes.map( (node,i) =>\n              <tr key={i}>\n                <td><Button size=\"sm\" outline\n                      value={node.id}\n                      onClick={this.onButtonClick}\n                    >Edit</Button>\n                </td>\n                <td>{this.state.edgeCounts[node.id]}</td>\n                <td><a href=\"#\" onClick={(e)=>this.selectNode(node.id,e)}\n                    >{node.label}</a></td>\n                <td hidden={nodePrompts.type.hidden}>{node.attributes[\"Node_Type\"]}</td>\n                <td hidden={nodePrompts.info.hidden}>{node.attributes[\"Extra Info\"]}</td>\n                <td hidden={nodePrompts.notes.hidden}>{node.attributes[\"Notes\"]}</td>\n              </tr>\n            )}\n            </tbody>\n          </Table>\n        </div>\n      );\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ componentDidMount () {\n      if (DBG) console.log('NodeTable.componentDidMount!');\n    }\n} // class NodeTable\n\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NodeTable;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    ## OVERVIEW\n\n       This provides a search field for looking up nodes.\n\n       1. Users type in the field.\n       2. The field will suggest matching nodes.\n       3. User selects something from the suggestion list.\n       4. The node will get loaded in NodeSelector.\n\n\n    ## USAGE\n\n      <Search/>\n\n    ## TECHNICAL DESCRIPTION\n\n       This provides a simple wrapper around AutoSuggest to handle\n       messaging and data passing.\n\n\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nvar DBG = false;\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst React          = require('react');\nconst ReactStrap     = require('reactstrap');\nconst { Col,\n        FormGroup,\n        Label }      = ReactStrap;\nconst AutoComplete   = require('./AutoComplete');\n\nconst UNISYS         = require('unisys/client');\n\nconst thisIdentifier = 'search';   // SELECTION identifier\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass Search extends UNISYS.Component {\n\n    constructor (props) {\n      super(props);\n      this.state = {\n        searchString:  ''\n      };\n      this.OnStart(()=>{\n        // always wrap UNISYS calls in a lifescycle hook otherwise you may try to execute a call\n        // before it has been declared in another module\n        if (DBG) console.log('Search.OnStart: Setting active autocomplete id to',thisIdentifier);\n        this.AppCall('AUTOCOMPLETE_SELECT',{id:thisIdentifier, value:this.state.searchString});\n      });\n    } // constructor\n\n\n\n/// UI EVENT HANDLERS /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n/// REACT LIFECYCLE ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ componentWillMount () {\n    }\n/*/ REACT calls this to receive the component layout and data sources\n/*/ render () {\n      return (\n        <FormGroup row>\n          <Col sm={3}>\n            <Label className=\"small text-muted\">Type to search or add a node:</Label>\n          </Col>\n          <Col sm={9}>\n            <AutoComplete\n              identifier={thisIdentifier}\n              disabledValue={this.state.searchString}\n              inactiveMode={'disabled'}\n            />\n          </Col>\n        </FormGroup>\n      )\n    }\n} // class Search\n\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = Search;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  ## OVERVIEW\n\n    Vocabulary displays a list of common terms\n\n\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nvar DBG = true;\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst React        = require('react');\nconst ReactStrap   = require('reactstrap');\nconst { Button, Table }    = ReactStrap;\n\nconst UNISYS   = require('unisys/client');\n\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass Vocabulary extends UNISYS.Component {\n    constructor (props) {\n      super(props);\n      this.state = {isExpanded: true};\n\n      this.onToggleExpanded         = this.onToggleExpanded.bind(this);\n\n          } // constructor\n\n\n\n/// UI EVENT HANDLERS /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ onToggleExpanded (event) {\n      this.setState({\n        isExpanded: !this.state.isExpanded\n      })\n    }\n\n\n\n/// REACT LIFECYCLE METHODS ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ This is not yet implemented as of React 16.2.  It's implemented in 16.3.\n    getDerivedStateFromProps (props, state) {\n      console.error('getDerivedStateFromProps!!!');\n    }\n/*/\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ render () {\n        let { tableHeight } = this.props;\n\n      return (\n        <div className=\"help\"\n             style={{overflow:'auto',\n                     position:'relative',display: 'block', right:'10px',maxHeight: tableHeight\n             }}>\n          <Button size=\"sm\" outline hidden\n            style={{float:'right'}}\n            onClick={this.onToggleExpanded}\n          >{this.state.isExpanded ? \"Hide Vocabulary\" : \"Vocabulary\"}</Button>\n          <div hidden={!this.state.isExpanded}\n            style={{backgroundColor:'rgba(240,240,240,0.95)',padding:'10px'}}>\n\n            <dl>\n             <dt>Network</dt>\n            <dd>This is a collection of nodes and the edges between them. </dd>\n\n            <dt>Graph</dt>\n            <dd>a graphic representation of a network and its components. <em><strong>Similar terms include:</strong> sociogram, visualization</em></dd>\n\n           <dt>Node</dt>\n            <dd>The thing or <em>entity</em> (shown as circles) that is connected through relationships. This could be individual people, groups of people, institutions (like churches, organizations, schools). One way of thinking about this is that nodes are nouns and edges are verbs - nodes are things that are connected through edges. <em><strong>Similar terms include:</strong> actor, vertex</em></dd>\n             <ul>\n             <dl>\n                <dt>Ego</dt>\n                <dd>This refers to the node you are focused on at the moment and the connections that they have. </dd>\n            </dl>\n            </ul>\n\n            <dt>Edge</dt>\n            <dd>The relationships between nodes you are considering (shown as lines). Relationships can take on many forms: nodes could be connected through somewhat intangible relationships, such as friendship or not liking one another. Edges can be based on interactions, such as talking to one another or being in conflict. They could also be defined by sharing resources, such as money or information. <em><strong>Similar terms include:</strong> line, tie, arc</em></dd>\n\n              <ul><dl>\n              <dt>Edge weight</dt>\n              <dd>Edges can have a value attached to them. So, for instance, an node could sent $10,000 to another actor. Or, they could share three interactions of the same type with one another. This value is referred to as a weight. <em><strong>Similar terms include:</strong> value</em></dd>\n\n              <dt>Directed or undirected edges</dt>\n              <dd>Edges can either be directed or undirected. If a relationship is directed, it is being sent from (originating from) one node to another node. Node A may say they are friends with Node B, but Node B does not say Node A does this. Or Node A gives Node B something, such as resources, information, or an illness. However, in some cases, edges are defined as undirected. Two people who share a meal together or are married are both engaged share an undirected edge. <em>Note: in some academic literatures, the term \"edge\" is reserved for an undirected relationship, while the term \"arc\" is used to refer to directed ties.</em></dd>\n              </dl></ul>\n\n            <dt>Attributes</dt>\n            <dd>Characteristics of the nodes or edges. A node could be designated by gender, for instance or the amount of wealth they possess. They could also be characteristics you find from the network itself - such as how many ties an node has (degree centrality). </dd>\n\n            <dt>Centrality</dt>\n            <dd>This is a way of ranking the importance of individuals within a network. There are many different ways to measure importance, such as degree centrality, betweenness centrality, and eigenvector centrality.  </dd>\n            <ul> <dl>\n\n            <dt>Degree Centrality</dt>\n            <dd>Degree centrality is a measure of how many connections a node has. An node with many ties that are being sent to them has a high in-degree centrality. In a friendship network, this can be easily recognized as popularity. Nodes sending many outgoing ties (high out-degree centrality) may be thought of as expansive in their relationship.</dd>\n\n            <dt>Betweenness Centrality</dt>\n            <dd>Nodes with high betweenness centrality serve as connectors between other individuals who wouldn't otherwise be directly connected. They may not be connected to a large number of people (that would be high degree centrality), but they are unique in their connections. If an actor with high betweenness centrality was removed from a network, the network would be more fragmented and less connected. Often researchers are interested in finding actors with high betweenness centrality because they can control whatever flows in the networks. For instance, military analysts often look for nodes with high betweenness in a terrorist network.</dd>\n\n            <dt>Eigenvector Centrality</dt>\n            <dd>Eigenvector centrality ranks actors based on their connection to other highly central nodes. So, a nodes importance as measured by eigenvector centrality are dependent on the other nodes with whom they share connections. Google's PageRank algorithm was a famous application of a version of this type of centrality, and allowed them to return highly relevant results in search for users.</dd>\n            </dl></ul>\n\n            <dt>Communities</dt>\n            <dd>A community in a network is a way of thinking about grouping, often by finding densely connected sets of nodes. A community within a network that is tightly connected to one another but not to an outside group might be seen as a faction, such as rival political groups. In this case, nodes with high betweenness centrality in a network with multiple factions might be some of the only points of contact between rival groups - a potentially powerful but also difficult position to be in.</dd>\n            </dl>\n          </div>\n        </div>\n      );\n    }\n\n} // class Vocabulary\n\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = Vocabulary;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    D3 Simple NetGraph\n\n    This is designed to work with the NetGraph React component.\n\n    NetGraph calls SetData whenever it receives an updated data object.\n    This triggers D3NetGraph to redraw itself.\n\n    This simplified version derived from D3NetGraph.js was created to address\n    a problem with links not updating properly.\n\n    The first implementation of this removed the fancy force property settings\n    that were needed to handle the realtime UI widgets in 'D3 Force Demo' app.\n    Eventually these were brough back in once the link merging was debugged.\n    However, this hasn't been reconciled with the `D3 Force Demo` widgets.\n    It *might* work, but it *might* not.\n\n    Zooming/panning is handled via D3's zoom() function.  Basically it\n    involves creating a `g` element that wraps the node and link elements\n    and applying transforms on that wrapper.\n\n    This is based on:\n    *  rdpoor's commented version of mbostock's original code\n       https://gist.github.com/rdpoor/3a66b3e082ffeaeb5e6e79961192f7d8\n    *  danilo's v4 update\n       https://bl.ocks.org/tezzutezzu/cd04b3f1efee4186ff42aae66c87d1a7\n    *  mbostock's general update pattern\n       https://bl.ocks.org/mbostock/3808218\n    *  Coderwall's zoom and pan method\n       https://coderwall.com/p/psogia/simplest-way-to-add-zoom-pan-on-d3-js\n    *  Vladyslav Babenko's zoom buttons example\n       https://jsfiddle.net/vbabenko/jcsqqu6j/9/\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst DBG             = false;\nconst PR              = 'd3-simplenetgraph'\n\n/* eslint-disable prefer-reflect */\n/* d3.call() is false-triggering the above rule */\n\n/// SYSTEM LIBRARIES //////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst d3              = require('d3')\nconst UNISYS          = require('unisys/client');\nvar   UDATA           = null;\n\n/// PRIVATE VARS //////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet m_width  = 800;\nlet m_height = 800;\nlet mouseoverNodeId = -1;   // id of the node the mouse is currently over\nlet m_forceProperties = {   // values for all forces\n      center: {\n        x: 0.5,\n        y: 0.5\n      },\n      charge: {\n        enabled: true,\n        strength: -1500,  //-1000, // -20,\n        distanceMin: 20,  //50, // 1,\n        distanceMax: 1000 //2000\n      },\n      collide: {\n        enabled: true,\n        strength: 0.7,\n        iterations: 1,\n        radius: 4\n      },\n      forceX: {\n        enabled: true,\n        strength: 0.2,    // 0.03,\n        x: 0.5\n      },\n      forceY: {\n        enabled: true,\n        strength: 0.2,    // 0.03,\n        y: 0.5\n      },\n      link: {\n        enabled: true,\n        distance: 60, // 30,\n        iterations: 2 // 1\n      }\n    }; // m_forceProperties\n\n\n\n/// D3NetGraph CLASS //////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nclass D3NetGraph {\n\n    constructor ( rootElement ) {\n\n      this.rootElement  = rootElement;\n      this.d3svg        = {};\n      this.zoom = {};\n      this.zoomWrapper  = {};\n      this.simulation   = {};\n      this.data         = {};\n\n      this.clickFn      = {};\n\n      this.defaultSize  = 5;\n\n      /// Initialize UNISYS DATA LINK for REACT\n      UDATA = UNISYS.NewDataLink(this);\n\n\n  /// D3 CODE ///////////////////////////////////////////////////////////////////\n  /// note: this is all inside the class constructor function!\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n      // Set up Zoom\n      this.zoom = d3.zoom().on(\"zoom\", this._HandleZoom);\n\n  /*/ Create svg element which will contain our D3 DOM elements.\n      Add default click handler so when clicking empty space, deselect all.\n      NOTE: the svg element is actualy d3.selection object, not an svg obj.\n  /*/ this.d3svg = d3.select(rootElement).append('svg')\n        .attr('id', 'netgraph')\n        .attr('width',  \"100%\")  // maximize width and height\n        .attr('height', \"100%\")  // then set center dynamically below\n        .on(\"click\", ( e, event ) => {\n            // Deselect\n            UDATA.LocalCall('SOURCE_SELECT',{ nodeLabels: [] });\n            }\n        )\n        .on(\"mouseover\", (d) => {\n          // Deselect edges\n          mouseoverNodeId = -1;\n          d3.selectAll('.edge')\n            .transition()\n            .duration(1500)\n            .style('stroke-width', this._UpdateLinkStrokeWidth)\n          d3.event.stopPropagation();\n        })\n        .call(this.zoom);\n\n      this.zoomWrapper = this.d3svg.append('g').attr(\"class\", \"zoomer\")\n\n      // Set SVG size and centering.\n      let svg = document.getElementById('netgraph');\n      m_width = svg.clientWidth;\n      m_height = svg.clientHeight;\n\n      this.simulation = d3.forceSimulation();\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// END D3 CODE ///////////////////////////////////////////////////////////////\n\n      // bind 'this' to function objects so event handlers can access\n      // contents of this class+module instance\n      this._SetData           = this._SetData.bind(this);\n      this._Initialize        = this._Initialize.bind(this);\n      this._UpdateGraph       = this._UpdateGraph.bind(this);\n      this._UpdateForces      = this._UpdateForces.bind(this);\n      this._Tick              = this._Tick.bind(this);\n      this._HandleZoom        = this._HandleZoom.bind(this);\n      this._Dragstarted       = this._Dragstarted.bind(this);\n      this._Dragged           = this._Dragged.bind(this);\n      this._Dragended         = this._Dragended.bind(this);\n\n      // watch for updates to the D3DATA data object\n      UDATA.OnAppStateChange('D3DATA',(data)=>{\n        // expect { nodes, edges } for this namespace\n        if (DBG) console.log(PR,'got state D3DATA',data);\n        this._SetData(data);\n      });\n\n      // The template may be loaded or changed after D3DATA is loaded.\n      // So we need to explicitly update the colors if the color\n      // definitions have changed.\n      UDATA.OnAppStateChange('NODECOLORMAP',(data)=>{\n        if (DBG) console.log(PR,'got state NODECOLORMAP',data);\n        this._UpdateGraph();\n      });\n\n      UDATA.HandleMessage('ZOOM_RESET', (data) => {\n        if (DBG) console.log(PR, 'ZOOM_RESET got state D3DATA', data);\n        this.d3svg.transition()\n          .duration(200)\n          .call(this.zoom.scaleTo, 1);\n      });\n\n      UDATA.HandleMessage('ZOOM_IN', (data) => {\n        if (DBG) console.log(PR, 'ZOOM_IN got state D3DATA', data);\n        this._Transition(1.2);\n      });\n\n      UDATA.HandleMessage('ZOOM_OUT', (data) => {\n        if (DBG) console.log(PR, 'ZOOM_OUT got state D3DATA', data);\n        this._Transition(0.8);\n      });\n\n  }\n\n\n/// CLASS PUBLIC METHODS //////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\n/// CLASS PRIVATE METHODS /////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ The parent container passes data to the d3 graph via this SetData call\n    which then triggers all the internal updates\n/*/ _SetData ( newData ) {\n      this.data = newData\n      if (newData && newData.nodes) {\n        this._Initialize()\n        this._UpdateForces()\n        this._UpdateGraph()\n        // updates ignored until this is run restarts the simulation\n        // (important if simulation has already slowed down)\n        this.simulation.alpha(1).restart()\n      }\n    }\n/*/ This sets up the force properties for the simulation and tick handler.\n/*/ _Initialize () {\n      // Create the force layout.  After a call to force.start(), the tick\n      // method will be called repeatedly until the layout \"gels\" in a stable\n      // configuration.\n      this.simulation\n        .force(\"link\",    d3.forceLink())\n        .force(\"charge\",  d3.forceManyBody())\n        .force(\"collide\", d3.forceCollide())\n        .force(\"center\",  d3.forceCenter())\n        .force(\"forceX\",  d3.forceX())\n        .force(\"forceY\",  d3.forceY())\n\n        .on(\"tick\", this._Tick)\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Call _UpdateGraph() after new data has been loaded. This creates link and node\n    svg objects and sets their forceProperties.\n    The component `node` structure:\n        <g class=\"node\">  // node group object\n           <circle>\n           <text>         // label\n           <title>        // tooltip\n        </g>\n\n    This method implements the unified enter/exit/update pattern described\n    here: http://d3indepth.com/enterexit/#general-update-pattern\n\n    By convention, selection methods that return the current selection use\n    four spaces of indent, while methods that return a new selection use only two.\n    This helps reveal changes of context by making them stick out of the chain.\n\n    This method actually does more than just \"update\" an existing graph; in D3\n    you can write code that initializes AND updates data.\n\n/*/ _UpdateGraph () {\n\n      let COLORMAP = UDATA.AppState('NODECOLORMAP');\n\n      // DATA JOIN\n      // select all elemnts with class .node in d3svg\n      // bind selected elements with elements in this.data.nodes,\n      // assigning each one an id using the key function.\n\n      // nodeElements is a d3.selection object\n      let nodeElements = this.zoomWrapper.selectAll(\".node\")\n        .data(this.data.nodes, (d) => { return d.id }); // fn returns the calculated key for the data object\n\n      // edges is a d3.selection object\n      let linkElements = this.zoomWrapper.selectAll(\".edge\")\n        .data(this.data.edges, (d) => { return d.id }); // fn returns the calculated key for the data object\n\n      // TELL D3 HOW TO HANDLE NEW NODE DATA\n      // the d3.selection.enter() method sets the operational scope for\n      // subsequent calls\n      let elementG = nodeElements.enter()\n        .append(\"g\")\n          .classed('node',true);\n\n      // enter node: append 'g' (group) element and click behavior\n      elementG\n        .call(d3.drag()\n          .on(\"start\", (d) => { this._Dragstarted(d, this) })\n          .on(\"drag\",  this._Dragged)\n          .on(\"end\",   (d) => { this._Dragended(d, this) }))\n        .on(\"click\",   (d) => {\n            if (DBG) console.log('clicked on',d.label,d.id)\n            UDATA.LocalCall('SOURCE_SELECT',{ nodeIDs: [d.id] });\n            d3.event.stopPropagation();\n        })\n        .on(\"mouseover\", (d) => {\n          mouseoverNodeId = d.id;\n          d3.selectAll('.edge')\n            .transition()\n            .duration(500)\n            .style('stroke-width', this._UpdateLinkStrokeWidth)\n          d3.event.stopPropagation();\n        })\n\n      // enter node: also append 'circle' element of a calculated size\n      elementG\n        .append(\"circle\")\n          // \"r\" has to be set here or circles don't draw.\n          .attr(\"r\", (d) => {\n              let radius = this.data.edges.reduce((acc,ed)=>{\n                return (ed.source===d.id || ed.target===d.id) ? acc+1 : acc;\n              },1);\n              d.weight = radius\n              d.size   = radius // save the calculated size\n              return this.defaultSize + (this.defaultSize * d.weight / 2)\n          })\n  //        .attr(\"r\", (d) => { return this.defaultSize }) // d.size ?  d.size/10 : this.defaultSize; })\n          .attr(\"fill\", (d) => {\n            // REVIEW: Using label match.  Should we use id instead?\n            // The advantage of using the label is backward compatibility with\n            // Google Fusion table data as well as exportability.\n            // If we save the type as an id, the data format will be\n            // less human-readable.\n            // The problem with this approach though is that any changes\n            // to the label text will result in a failed color lookup!\n            return COLORMAP[d.attributes[\"Node_Type\"]];\n          });\n\n      // enter node: also append 'text' element\n      elementG\n        .append(\"text\")\n          .classed('noselect', true)\n          .attr(\"font-size\", 10)\n          .attr(\"dx\", (d=>{return this.defaultSize + 5})) // 8)\n          .attr(\"dy\", \"0.35em\") // \".15em\")\n          .text((d) => { return d.label });\n\n      // enter node: also append a 'title' tag\n      elementG\n        .append(\"title\") // node tooltip\n          .text((d) => { return d.label; });\n\n      /*/ TRICKY D3 CODE CONCEPTS AHEAD\n\n          CONTEXT: The author of this code has assumed that D3DATA may\n          completely changed, so his update code is written with this in mind.\n\n          At this point in the code, nodeElements is operating on the enter()\n          selection set (remember: nodeElements is a REFERENCE to the\n          original d3 selection object, which is being transmutted by every\n          operation).\n\n          Given the above, .merge() will combine the current active d3\n          selection (enter()) with all the nodes (nodeEntry in its entirety).\n\n          It may seem weird because:\n\n          (1) the d3.selection() context isn't always obvious unless you\n              know that d3.selections and key ops like .enter(), .update(),\n              and .exit() affect certain other ops.\n          (2) this code reads like it's executing immediately on nodeElements,\n              but it actually is a PROGRAM being defined for a d3.selection\n              event that runs later. The value of the parameter nodeElements\n              will have a different value in the future than it does at the\n              time of definition here.\n\n          In effect, the merge() operation is used to use the same\n          initialization code for both enter() and manual refresh.\n\n          ASIDE: There is an d3.selection.update() operation, but that  is\n          called when d3 detects that data node bound to an existing DOM\n          element has changed. This code doesn't use update(), and instead\n          relies on manual event detection to force a full data refresh and\n          update. D3 doesn't die because it is aware of the persistent SVG\n          elements  it created, and checks data binding through the id. This\n          is fast, and the SVG elements do not have to be recreated.\n\n      /*/\n\n      // UPDATE circles in each node for all nodes\n      nodeElements.merge(nodeElements)\n        .selectAll(\"circle\")\n          .attr(\"stroke\",       (d) => {\n            if (d.selected)    return d.selected;\n            if (d.strokeColor) return d.strokeColor;\n            return undefined; // don't set stroke color\n          })\n          .attr(\"stroke-width\", (d) => {\n            if (d.selected || d.strokeColor) return '5px';\n            return undefined // don't set stroke width\n          })\n// this \"r\" is necessary to resize after a link is added\n          .attr(\"fill\", (d) => {\n            // REVIEW: Using label match.  Should we use id instead?\n            return COLORMAP[d.attributes[\"Node_Type\"]];\n          })\n          .attr(\"r\", (d) => {\n              let radius = this.data.edges.reduce((acc,ed)=>{\n                return (ed.source.id===d.id || ed.target.id===d.id) ? acc+1 : acc\n              },1);\n              d.weight = radius\n              d.size = radius // save the calculated size\n              return this.defaultSize + (this.defaultSize * d.weight / 2)\n          });\n\n      // UPDATE text in each node for all nodes\n      // (technically this could have proceeded from the previous operation,\n      // but this makes it a little easier to findthe text-specific code as\n      // a block\n      nodeElements.merge(nodeElements)\n        .selectAll(\"text\")\n          .attr(\"color\", (d) => {\n            if (d.selected) return d.selected;\n            return undefined; // don't set color\n          })\n          .attr(\"font-weight\", (d) => {\n            if (d.selected) return 'bold';\n            return undefined; // don't set font weight\n          })\n          .text((d) => { return d.label });  // in case text is updated\n\n      // TELL D3 what to do when a data node goes away\n      nodeElements.exit().remove()\n\n      // NOW TELL D3 HOW TO HANDLE NEW EDGE DATA\n      // .insert will add an svg `line` before the objects classed `.node`\n      // .enter() sets the initial state of links as they are created\n      linkElements.enter()\n        .insert(\"line\",\".node\")\n        .classed('edge', true)\n        .style('stroke', '#999')\n        // .style('stroke', 'rgba(0,0,0,0.1)')  // don't use alpha unless we're prepared to handle layering -- reveals unmatching links\n        .style('stroke-width', this._UpdateLinkStrokeWidth )\n        // old stroke setting\n        // .style('stroke-width', (d) => { return d.size**2 } )    // Use **2 to make size differences more noticeable\n        // Edge selection disabled.\n        // .on(\"click\",   (d) => {\n        //   if (DBG) console.log('clicked on',d.label,d.id)\n        //   this.edgeClickFn( d )\n        // })\n\n      // .merge() updates the visuals whenever the data is updated.\n      linkElements.merge(linkElements)\n        .classed(\"selected\",  (d) => { return d.selected })\n        .style('stroke-width', this._UpdateLinkStrokeWidth)\n\n      linkElements.exit().remove()\n\n      // UPDATE ANIMATED SIMULATION\n      // this is a plugin\n      this.simulation.nodes(this.data.nodes)\n      this.simulation.force(\"link\").links(this.data.edges)\n\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Apply new force properties\n    Call this on construct and if forceProperties have changed.\n/*/ _UpdateForces ( data ) {\n      this.simulation\n        .force(\"link\", d3.forceLink()\n            .id((d) => {return d.id})\n            .distance( (d)=>{return m_forceProperties.link.distance} )\n// this doesn't seem to change anything?!?  The m_forceProperties.link.distance is the only value that seems to matter?\n//            .distance( (d)=>{return m_forceProperties.link.distance+d.size*10 } )\n//            .distance( (d)=>{return m_forceProperties.link.distance * (1/d.size) } )\n//            .distance( m_forceProperties.link.distance )\n            .iterations(m_forceProperties.link.iterations))\n        .force(\"charge\", d3.forceManyBody()\n//            .strength(m_forceProperties.charge.strength * m_forceProperties.charge.enabled)\n//            .strength( (d)=>{return d.size/6 * m_forceProperties.charge.strength * m_forceProperties.charge.enabled} )\n            .strength( (d)=>{return d.size/4 * m_forceProperties.charge.strength * m_forceProperties.charge.enabled} )\n            .distanceMin(m_forceProperties.charge.distanceMin)\n            .distanceMax(m_forceProperties.charge.distanceMax))\n        .force(\"collide\", d3.forceCollide()\n            .strength(m_forceProperties.collide.strength * m_forceProperties.collide.enabled)\n            .radius((d) => {return d.size/m_forceProperties.collide.radius;})\n            .iterations(m_forceProperties.collide.iterations))\n        .force(\"center\", d3.forceCenter()\n            .x(m_width * m_forceProperties.center.x)\n            .y(m_height * m_forceProperties.center.y))\n        .force(\"forceX\", d3.forceX()\n            .strength(m_forceProperties.forceX.strength * m_forceProperties.forceX.enabled)\n            .x(m_width * m_forceProperties.forceX.x))\n        .force(\"forceY\", d3.forceY()\n            .strength(m_forceProperties.forceY.strength * m_forceProperties.forceY.enabled)\n            .y(m_height * m_forceProperties.forceY.y))\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Update the display positions after each simulation tick\n\n    This tick method is called repeatedly until the layout stabilizes.\n\n    NOTE: the order in which we update nodes and links does NOT determine which\n    gets drawn first -- the drawing order is determined by the ordering in the\n    DOM.  See the notes under link_update.enter() above for one technique for\n    setting the ordering in the DOM.\n/*/ _Tick () {\n      // Drawing the nodes: Update the location of each node group element\n      // from the x, y fields of the corresponding node object.\n      this.zoomWrapper.selectAll(\".node\")\n        .attr(\"transform\", (d) => { return \"translate(\"+d.x+\",\"+d.y+\")\" })\n\n      // Drawing the links: Update the start and end points of each line element\n      // from the x, y fields of the corresponding source and target node objects.\n      this.zoomWrapper.selectAll(\".edge\")\n        .attr(\"x1\", (d) => { return d.source.x; })\n        .attr(\"y1\", (d) => { return d.source.y; })\n        .attr(\"x2\", (d) => { return d.target.x; })\n        .attr(\"y2\", (d) => { return d.target.y; })\n    }\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Sets the width of the links during update cycles\n    Used by linElements.enter() and linkElements.merge()\n    and mouseover events.\n/*/\n_UpdateLinkStrokeWidth (edge) {\n  if (edge.selected ||\n    (edge.source.id === mouseoverNodeId) ||\n    (edge.target.id === mouseoverNodeId) ||\n    (mouseoverNodeId === -1)\n  ) {\n    return edge.size ** 2;  // Use **2 to make size differences more noticeable\n  } else {\n    return 0.175;             // Barely visible if not selected\n  }\n}\n\n\n/// UI EVENT HANDLERS /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ This primarily handles mousewheel zooms\n/*/\n_HandleZoom() {\n  d3.select('.zoomer').attr(\"transform\", d3.event.transform);\n}\n/*/ This handles zoom button zooms.\n/*/\n_Transition(zoomLevel) {\n  this.d3svg.transition()\n    //.delay(100)\n    .duration(200)\n    .call(this.zoom.scaleBy, zoomLevel);\n}\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ _Dragstarted (d, self) {\n      if (!d3.event.active) self.simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ _Dragged (d) {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n    }\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/\n/*/ _Dragended (d, self) {\n      if (!d3.event.active) self.simulation.alphaTarget(0.0001);\n      d.fx = null;\n      d.fy = null;\n    }\n    // update window size-related forces\n    // d3.select(window).on(\"resize\", (){ =>\n    //     width = +svg.node().getBoundingClientRect().width;\n    //     height = +svg.node().getBoundingClientRect().height;\n    //     updateForces();\n    // });\n} // class D3NetGraph\n\n/// EXPORT MODULE /////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = D3NetGraph\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  * EVENTS: D3 Graph Updates\n\n    Mark Node/Edge          Nodes in the graph are marked via a stroke around\n                            the circle.  There are two types of marks:\n\n                            1. SEARCH -- when a node matches a search, its\n                            strokeColor is set to green.\n\n                            2. SELECTION -- when a node is selected by the\n                            user and shown in the NodeSelector either by\n                            directly clicking on it or by clicking on a\n                            item in the search suggestion list, the node\n                            data is marked `selected` and a blue strokeColor\n                            is applied.\n\n                            The two marks are orthogonal to each other: a\n                            node can be both searched and selected, though\n                            the selection mark will override the search\n                            mark.\n\n                            The rendering is handled by modifying the\n                            node data in D3DATA.  d3-simplenetgraph will\n                            then read any D3DATA updates and redraw\n                            the graph based on the updated data.\n\n    Add New Node/Edge       When the user adds a new edge or node, handlers in\n                            NetCreate will update its `this.state.data`\n                            with the new nodes/edges.  This is passed on to\n                            `NetGraph.jsx` and in turn to `D3SimpleNetGraph.js`\n                            which will display the new data during its update\n                            cycle.\n\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst DBG = false;\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst SETTINGS = require(\"settings\");\nconst UNISYS = require(\"unisys/client\");\nconst JSCLI = require(\"system/util/jscli\");\nconst D3 = require(\"d3\");\n\n/// INITIALIZE MODULE /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar MOD = UNISYS.NewModule(module.id);\nvar UDATA = UNISYS.NewDataLink(MOD);\n\n/// APP STATE/DATA STRUCTURES /////////////////////////////////////////////////\n/*/ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \\*\\\n\n\n    SELECTION\n\n    The SELECTION state maintains the list of nodes and edges that are\n    currently selected and loaded in the forms.\n\n    Set by      AutoComplete's call to SOURCE_SELECT\n                D3SimpleNetGraph's call to SOURCE_SELECT\n                EdgeEditor's call to EDGE_UPDATE\n    Handled by  NodeSelector to load the currently selected node\n                NodeSelector also sets the edges in EdgeEditor\n                EdgeEditor to select the target node when creating new edge\n\n    * nodes     An array of current selected nodes for editing.\n                This is the node the user clicked on in the graph or selected from\n                the suggestions list\n    * edges     An array of edge objects for editing\n                *REVIEW*: Should this be renamed \"selectedEdges\" to distinguish from\n                *D3DATA.edge\n\n\n\n    SEARCH\n\n    The SEARCH state keeps track of the text being searched for in the\n    main AutoComplete field.  It also provides a list of the nodes that match\n    the search string so that AutoComplete and D3 can display them.  (D3\n    doesn't actually process the SEARCH state change.  Instead it's processed\n    by nc-logic in response to SOURCE_SEARCH calls -- nc-logic\n    will set the node's `selected` or `stroke-color` state if a node\n    is currently selected or matches a search parameter, respectively.)\n\n    Set by      AutoComplete's call to SOURCE_SEARCH when its input changes.\n    Handled by  AutoComplete for its controlled input field\n                NodeSelector for validating when editing the form.\n\n    * searchLabel     A string that the user has typed into AutoComplete\n    * suggestedNodes  An array of nodes that match the searchLabel\n\n\n\n    ACTIVEAUTOCOMPLETE\n\n    The ACTIVEAUTOCOMPLETE state points to the id of the AutoComplete\n    field (either search, or NodeSElector, or EdgeEditor) that has the\n    current focus.  Search results and d3 clicks are routed to the\n    active AutComplete component.\n\n    Set by      Search's call to AUTOCOMPLETE_SELECT on startup\n                NodeSelector's call to AUTOCOMPLETE_SELECT when Edit Node is clicked\n                \" when changes are submitted\n                EdgeEditor's call to AUTOCOMPLETE_SELECT when a new Edge is created\n                \" an edge is selected externally for editing\n                \" an edge being editted is closed (hand back to search)\n                \" changes are submitted\n\n    Handled by  AutoComplete to enable/disable its mode active state,\n                know when and when not to handle SEARCH and SELECTION state updates.\n\n    Looked up   NodeSelector to check if it's the current activeAutoCompleteId\n\n    * activeAutoCompleteId\n                id of active <AutoComplete> field\n                of form: 'node-xx' or 'edge-source-xx' or 'edge-target-xx'\n                where xx = the id of the <AutoComplete> field that has input focus.\n                This is used to keep track of the currently active\n                AutoComplete field. Inactive fields and updates are determined by\n                the value of this property.\n\n\n    D3DATA\n\n    * nodes: all nodes (not all may be actually changed)\n    * edges: all edges (not all may be actually changed)\n\n\\*\\ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -/*/\nvar D3DATA = null; // see above for description\nvar TEMPLATE = null; // template definition for prompts\nconst NETWORK = require(\"unisys/client-network\");\nconst DATASTORE = require(\"system/datastore\");\nconst SESSION = require(\"unisys/common-session\");\nconst PROMPTS = require(\"system/util/prompts\");\nconst PR = PROMPTS.Pad(\"NCLOGIC\");\n\n/// CONSTANTS /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DESELECTED_COLOR = \"\";\nconst SEARCH_COLOR = \"#008800\";\nconst SOURCE_COLOR = \"#0000DD\";\nconst TARGET_COLOR = \"#FF0000\";\n\nconst TEMPLATE_URL = \"../templates/netcreate.json\";\n\n/// UNISYS LIFECYCLE HOOKS ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ LOADASSETS fires before react components are loaded\n    see client-lifecycle.js for description\n/*/\nMOD.Hook(\"LOADASSETS\", () => {\n  if (UNISYS.IsStandaloneMode()) {\n\n    const USE_CACHE = false;\n    if (USE_CACHE) {\n      console.warn(PR,\"STANDALONE MODE: 'LOADASSETS' using browser cache\");\n      return new Promise((resolve, reject) => {\n        const lstore = window.localStorage;\n        let ld3 = lstore.getItem(\"D3DATA\");\n        D3DATA = JSON.parse(ld3);\n        if (!D3DATA) reject(Error(\"couldn't get D3DATA from Local Store\"));\n        UDATA.SetAppState(\"D3DATA\", D3DATA);\n        let tem = lstore.getItem(\"TEMPLATE\");\n        TEMPLATE = JSON.parse(tem);\n        console.log(D3DATA, TEMPLATE);\n        if (!TEMPLATE) reject(Error(\"couldn't get TEMPLATE from Local Store\"));\n        UDATA.SetAppState(\"TEMPLATE\", TEMPLATE);\n        resolve();\n      });\n    }\n    // don't use cache, but instead try loading standalone files\n    console.warn(PR,\"STANDALONE MODE: 'LOADASSETS' is using files (USE_CACHE=false)\");\n    let p1 = DATASTORE.PromiseJSONFile(\"../data/standalone-db.json\")\n    .then(data => {\n      m_ConvertData(data);\n      m_RecalculateAllEdgeWeights(data);\n      UDATA.SetAppState(\"D3DATA\", data);\n      // Save off local reference because we don't have D3DATA AppStateChange handler\n      D3DATA = data;\n    });\n    // load template\n    let p2 = DATASTORE.PromiseJSONFile(TEMPLATE_URL)\n    .then(data => {\n      TEMPLATE = data;\n      UDATA.SetAppState(\"TEMPLATE\", TEMPLATE);\n    });\n    return Promise.all([p1,p2]);\n  }\n  // if got this far...\n  // NOT STANDALONE MODE so load data into D3DATA\n  let p1 = DATASTORE.PromiseD3Data()\n  .then(data => {\n    if (DBG) console.log(PR, \"DATASTORE returned data\", data);\n    m_ConvertData(data);\n    m_RecalculateAllEdgeWeights(data);\n    UDATA.SetAppState(\"D3DATA\", data);\n    // Save off local reference because we don't have D3DATA AppStateChange handler\n    D3DATA = data;\n  });\n  // load Template data and return it as a promise\n  // so that react render is called only after the template is loaded\n  let p2 = DATASTORE.PromiseJSONFile(TEMPLATE_URL)\n  .then(data => {\n    if (DBG) console.log(PR, \"DATASTORE returned json\", data);\n    TEMPLATE = data;\n    UDATA.SetAppState(\"TEMPLATE\", TEMPLATE);\n  });\n  return Promise.all([p1, p2]);\n}); // loadassets\n\n/// UNISYS LIFECYCLE HOOKS ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ CONFIGURE fires after LOADASSETS, so this is a good place to put TEMPLATE\n    validation.\n/*/\nMOD.Hook(\"CONFIGURE\", () => {\n  // Process Node, NodeColorMap and Edge options\n\n  // Validate the template file\n  try {\n    // nodePrompts\n    let nodePrompts = TEMPLATE.nodePrompts;\n    if (nodePrompts === undefined) {\n      throw \"Missing `nodePrompts` nodePrompts=\" + nodePrompts;\n    }\n    if (nodePrompts.label === undefined)\n      throw \"Missing `nodePrompts.label` label=\" + nodePrompts.label;\n    if (nodePrompts.type === undefined)\n      throw \"Missing `nodePrompts.type` type= \" + nodePrompts.type;\n    if (\n      nodePrompts.type.options === undefined ||\n      !Array.isArray(nodePrompts.type.options)\n    ) {\n      throw \"Missing or bad `nodePrompts.type.options` options=\" +\n        nodePrompts.type.options;\n    }\n    if (nodePrompts.notes === undefined)\n      throw \"Missing `nodePrompts.notes` notes=\" + nodePrompts.notes;\n    if (nodePrompts.info === undefined)\n      throw \"Missing `nodePrompts.info` info=\" + nodePrompts.info;\n\n    // edgePrompts\n    let edgePrompts = TEMPLATE.edgePrompts;\n    if (edgePrompts === undefined)\n      throw \"Missing `edgePrompts` edgePrompts=\" + edgePrompts;\n    if (edgePrompts.source === undefined)\n      throw \"Missing `edgePrompts.source` source=\" + edgePrompts.source;\n    if (edgePrompts.type === undefined)\n      throw \"Missing `edgePrompts.type` type= \" + edgePrompts.type;\n    if (\n      edgePrompts.type.options === undefined ||\n      !Array.isArray(edgePrompts.type.options)\n    ) {\n      throw \"Missing or bad `edgePrompts.type.options` options=\" +\n        edgePrompts.type.options;\n    }\n    if (edgePrompts.target === undefined)\n      throw \"Missing `edgePrompts.target` label=\" + edgePrompts.target;\n    if (edgePrompts.notes === undefined)\n      throw \"Missing `edgePrompts.notes` notes=\" + edgePrompts.notes;\n    if (edgePrompts.info === undefined)\n      throw \"Missing `edgePrompts.info` info=\" + edgePrompts.info;\n    if (edgePrompts.citation === undefined)\n      throw \"Missing `edgePrompts.citation` info=\" + edgePrompts.citation;\n  } catch (error) {\n    console.error(\n      PR + \"Error loading template `\",\n      TEMPLATE_URL,\n      \"`::::\",\n      error\n    );\n  }\n\n  // REVIEW: Load ColorMap in d3?  or elsewhere?  does it need its own state?\n  try {\n    let nodeColorMap = {};\n    TEMPLATE.nodePrompts.type.options.forEach(o => {\n      nodeColorMap[o.label] = o.color;\n    });\n    UDATA.SetAppState(\"NODECOLORMAP\", nodeColorMap);\n  } catch (error) {\n    console.error(\n      PR,\n      \"received bad TEMPLATE node options.  ERROR:\",\n      error,\n      \". DATA:\",\n      TEMPLATE\n    );\n  }\n}); // end CONFIGURE HOOK\n\n/// UNISYS LIFECYCLE HOOKS ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ DISCONNECT fires when NetMessage.GlobalOfflineMode()\n/*/\nMOD.Hook(\"DISCONNECT\", () => {\n  console.log(\"DISCONNECT HOOK\");\n  const lstore = window.localStorage;\n  lstore.setItem(\"D3DATA\", JSON.stringify(D3DATA));\n  lstore.setItem(\"TEMPLATE\", JSON.stringify(TEMPLATE));\n  console.log(\"saving d3data, template to localstore\");\n});\n\n/// UNISYS HANDLERS ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ lifecycle INITIALIZE handler\n/*/\nMOD.Hook(\"INITIALIZE\", () => {\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /*/ Handle D3-related updates based on state changes. Subcomponents are\n      responsible for updating themselves.\n  /*/\n  UDATA.OnAppStateChange(\"SELECTION\", stateChange => {\n    if (DBG) console.log(\"nc-logic: Got SELECTION\", stateChange);\n    let { nodes, edges } = stateChange;\n    // NODE LIST UPDATE\n    if (nodes !== undefined) {\n      if (nodes.length > 0) {\n        let color = \"#0000DD\";\n        nodes.forEach(node => {\n          m_MarkNodeById(node.id, color);\n          UNISYS.Log(\"select node\", node.id, node.label);\n          ga('send', {\n            hitType: 'event',\n            eventCategory: 'Node',\n            eventAction: '' + node.label,\n            eventLabel: '' + window.location\n          });\n        });\n      } else {\n        m_UnMarkAllNodes();\n      }\n    }\n  }); // StateChange SELECTION\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /*/ Search field has been updated\n  /*/\n  UDATA.OnAppStateChange(\"SEARCH\", stateChange => {\n    if (DBG) console.log(\"nc-logic: Got SEARCH\", stateChange);\n    let { nodes, edges } = stateChange;\n    let { searchLabel } = stateChange;\n    let { activeAutoCompleteId } = stateChange;\n    // NODE LIST UPDATE\n    if (nodes !== undefined) {\n      if (nodes.length > 0) {\n        let color = SEARCH_COLOR;\n        nodes.forEach(node => m_MarkNodeById(node.id, color));\n      } else {\n        m_UnMarkAllNodes();\n      }\n    }\n    // SEARCH LABEL UPDATE\n    if (searchLabel === \"\") {\n      m_UnStrokeAllNodes();\n    } else if (searchLabel !== undefined) {\n      m_SetStrokeColorThatMatch(searchLabel, SEARCH_COLOR);\n    }\n  }); // StateChange SELECTION\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /*/ User has clicked on a suggestion from the AutoCopmlete suggestion list.\n      The source node should be loaded in NodeSelector.\n\n      OR, user has clicked on a node in the D3 graph.\n\n      SOURCE_SELECT select node by LABEL. There is only one selected node\n      in the app at any one time, though nodeLabels is passed as an array.\n      SEE ALSO: AutoComplete.onSuggestionSelected() and\n                D3SimpleNetGraph._UpdateGraph click handler\n  /*/\n  UDATA.HandleMessage(\"SOURCE_SELECT\", m_sourceSelect);\n  function m_sourceSelect (data) {\n    if (DBG) console.log(PR, \"SOURCE_SELECT got data\", data);\n\n    let { nodeLabels = [], nodeIDs = [] } = data;\n    let nodeLabel = nodeLabels.shift();\n    let nodeID = nodeIDs.shift();\n    let node, newState;\n\n    if (nodeID) {\n      node = m_FindNodeById(nodeID); // Node IDs should be integers, not strings\n    } else if (nodeLabel) {\n      node = m_FindMatchingNodesByLabel(nodeLabel).shift();\n    } else {\n      // No node selected, so deselect\n    }\n\n    if (DBG) console.log(PR, \"SOURCE_SELECT found\", node);\n\n    if (node === undefined) {\n      // Node not found, create a new node\n      newState = {\n        nodes: [],\n        edges: []\n      };\n    } else {\n      // Load existing node and edges\n      let edges = [];\n      if (nodeID) {\n        edges = edges.concat(\n          D3DATA.edges.filter(\n            edge => edge.source.id === nodeID || edge.target.id === nodeID\n          )\n        );\n      } else {\n        edges = edges.concat(\n          D3DATA.edges.filter(\n            edge => edge.source.label === nodeLabel || edge.target.label === nodeLabel\n          )\n        );\n      }\n      // create state change object\n      newState = {\n        nodes: [node],\n        edges: edges\n      };\n    }\n\n    // Set the SELECTION state so that listeners such as NodeSelectors update themselves\n    UDATA.SetAppState(\"SELECTION\", newState);\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /*/ SOURCE_SEARCH sets the current matching term as entered in an\n      AutoComplete field.\n  /*/\n  UDATA.HandleMessage(\"SOURCE_SEARCH\", function(data) {\n    let { searchString } = data;\n    let matches = m_FindMatchingNodesByLabel(searchString);\n    let newState = {\n      suggestedNodes: matches.map(n => {\n        return { id: n.id, label: n.label };\n      }),\n      searchLabel: searchString\n    };\n    // let SELECTION state listeners handle display updates\n    UDATA.SetAppState(\"SEARCH\", newState);\n  });\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /*/ SOURCE_SEARCH_AND_SELECT first searches for an exact mathcing node\n      and if found, selects it.\n      This is called by AutoComplete onBlur in case we need to make an\n      implicit selection.\n  /*/\n  UDATA.HandleMessage(\"SOURCE_SEARCH_AND_SELECT\", function (data) {\n    let { searchString } = data;\n    let node = m_FindMatchingNodesByLabel(searchString).shift();\n    if (node && (node.label === searchString)) {\n      m_sourceSelect({ nodeIDs: [node.id] });\n    }\n  });\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /*/ SOURCE_HILITE updates the currently rolled-over node name in a list of\n      selections.  The hilite can be selected via either the label or\n      the node id.\n  /*/\n  UDATA.HandleMessage(\"SOURCE_HILITE\", function(data) {\n    let { nodeLabel, nodeID, color } = data;\n    if (nodeLabel) {\n      // Only mark nodes if something is selected\n      m_UnMarkAllNodes();\n      m_MarkNodeByLabel(nodeLabel, SOURCE_COLOR);\n    }\n    if (nodeID) {\n      // Only mark nodes if something is selected\n      m_UnMarkAllNodes();\n      m_MarkNodeById(nodeID, SOURCE_COLOR);\n    }\n\n    // NOTE: State is updated in the \"MaryNodeBy*\" functions above.\n  });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /*/ SOURCE_UPDATE is called when the properties of a node has changed\n      Globally updates DATASTORE and working D3DATA objects with the new node data.\n      NOTE: SOURCE_UPDATE can be invoked remotely by the server on a DATABASE\n      update.\n  /*/\n  UDATA.HandleMessage(\"SOURCE_UPDATE\", function(data) {\n    let { node } = data;\n    // try updating existing nodes with this id?\n    let updatedNodes = m_SetMatchingNodesByProp({ id: node.id }, node);\n    if (DBG) console.log(\"SOURCE_UPDATE: updated\", updatedNodes);\n    // if no nodes had matched, then add a new node!\n    if (updatedNodes.length > 1) {\n      console.error(\"SOURCE_UPDATE: duplicate ids in\", updatedNodes);\n      throw Error(\"SOURCE_UPDATE: found duplicate IDs\");\n    }\n    if (updatedNodes.length === 0) D3DATA.nodes.push(node);\n    UDATA.SetAppState(\"D3DATA\", D3DATA);\n  });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /*/ NODE_DELETE is called by NodeSelector via datastore.js and\n      Server.js when an node should be removed\n  /*/\n  UDATA.HandleMessage(\"NODE_DELETE\", function(data) {\n    let { nodeID, replacementNodeID } = data;\n\n    // Remove or replace edges\n    let edgesToProcess;\n    if (replacementNodeID !== -1) {\n      // replace\n      let replacementNode = m_FindNodeById(replacementNodeID);\n      edgesToProcess = D3DATA.edges.map(edge => {\n        if (edge.source.id === nodeID) edge.source = replacementNode;\n        if (edge.target.id === nodeID) edge.target = replacementNode;\n        return edge;\n      });\n    } else {\n      // delete nodes\n      edgesToProcess = D3DATA.edges.filter(edge => {\n        let pass = false;\n        if (edge.source.id !== nodeID && edge.target.id !== nodeID) {\n          pass = true;\n        }\n        return pass;\n      });\n    }\n    D3DATA.edges = edgesToProcess;\n\n    // // Remove node\n    let updatedNodes = m_DeleteMatchingNodesByProp({ id: nodeID });\n    D3DATA.nodes = updatedNodes;\n    UDATA.SetAppState(\"D3DATA\", D3DATA);\n\n    // Also update selection so nodes in EdgeEditor will update\n    UDATA.SetAppState(\"SELECTION\", {\n      nodes: undefined,\n      edges: undefined\n    });\n    // FIXME: need to also update AutoUpdate!!!\n    // FIXME: Need to also trigger resize!\n  });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /*/ EDGE_UPDATE is called when the properties of an edge has changed\n      NOTE: SOURCE_UPDATE can be invoked remotely by the server on a DATABASE\n      update.\n  /*/\n  UDATA.HandleMessage(\"EDGE_UPDATE\", function(data) {\n    let { edge } = data;\n    if (DBG) console.log(\"nc-logic.EDGE_UPDATE: received edge\", edge);\n    // edge.source and edge.target are initially ids\n    // replace then with node data\n    edge.source = m_FindNodeById(edge.source);\n    edge.target = m_FindNodeById(edge.target);\n    // set matching nodes\n    let updatedEdges = m_SetMatchingEdgesByProp({ id: edge.id }, edge);\n    if (DBG) console.log(\"nc-logic.EDGE_UPDATE: updated\", updatedEdges);\n\n    // if no nodes had matched, then add a new node!\n    if (updatedEdges.length === 0) {\n      if (DBG) console.log(\"nc-logic.EDGE_UPDATE: adding new edge\", edge);\n      // created edges should have a default size\n      edge.size = 1;\n      D3DATA.edges.push(edge);\n    }\n    // if there was one node\n    if (updatedEdges.length === 1) {\n      console.log('nc-logic.EDGE_UPDATE: updating existing edge', updatedEdges)\n    }\n    // Edge source and target links should be stored as\n    // ids rather than references to the actual source and\n    // target node objects.\n    //\n    // d3 will map the source and target ids to the\n    // node objects themsleves during the _UpdateGraph method.\n    //\n    // So we explicitly set and store ids rather than objects here.\n    //\n    // (If we don't do this, the edges become disconnected from nodes)\n    edge.source = edge.source.id;\n    edge.target = edge.target.id;\n    // Calculate Edge Size\n    edge.size = m_CalculateEdgeWeight(edge, D3DATA.edges);\n\n    // if there were more edges than expected\n    if (updatedEdges.length > 1) {\n      throw Error(\"EdgeUpdate found duplicate IDs\");\n    }\n\n    UDATA.SetAppState(\"D3DATA\", D3DATA);\n  });\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /*/ EDGE_DELETE is called when an edge should be removed from...something?\n  /*/\n  UDATA.HandleMessage(\"EDGE_DELETE\", function(data) {\n    let { edgeID } = data;\n    let edges = [];\n    // remove specified edge from edge list\n    D3DATA.edges = m_DeleteMatchingEdgeByProp({ id: edgeID });\n    UDATA.SetAppState(\"D3DATA\", D3DATA);\n    // Also update selection so edges in EdgeEditor will update\n    let selection = UDATA.AppState(\"SELECTION\");\n    if (\n      selection.nodes === undefined ||\n      selection.nodes.length < 1 ||\n      selection.nodes[0].id === undefined\n    ) {\n      if (DBG) console.log(PR, \"no selection:\", selection);\n    } else {\n      if (DBG) console.log(PR, \"updating selection:\", selection);\n      let nodeID = selection.nodes[0].id;\n      // Remove the deleted edge from the selection\n      if (selection.edges !== undefined && selection.edges.length > 0) {\n        edges = edges.concat(\n          selection.edges.filter(edge => edge.id !== edgeID)\n        );\n      }\n    }\n    UDATA.SetAppState(\"SELECTION\", {\n      nodes: selection.nodes,\n      edges: edges\n    });\n  });\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /*/ AUTOCOMPLETE_SELECT is called by <AutoComplete> components to tell the\n      module which one has the current focus.\n  /*/\n  UDATA.HandleMessage(\"AUTOCOMPLETE_SELECT\", function(data) {\n    m_HandleAutoCompleteSelect(data);\n  });\n}); // end UNISYS_INIT\n\nfunction m_HandleAutoCompleteSelect(data) {\n  if (DBG) console.log(\"ACL: Setting activeAutoCompleteId to\", data.id);\n  UDATA.SetAppState(\"ACTIVEAUTOCOMPLETE\", {\n    activeAutoCompleteId: data.id\n  });\n}\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ lifecycle RESET handler\n/*/\nMOD.Hook(\"RESET\", () => {\n  // Force an AppState update here so that the react components will load\n  // the data after they've been initialized.  The SetAppState call in\n  // LOADASSETS is broadcast before react components have been loaded.\n  UDATA.SetAppState(\"D3DATA\", D3DATA);\n}); // end UNISYS_RESET\n\n/// APP_READY MESSAGE REGISTRATION ////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ The APP_READY hook is fired after all initialization phases have finished\n    and may also fire at other times with a valid info packet\n/*/\nMOD.Hook(\"APP_READY\", function(info) {\n  /// RETURN PROMISE to prevent phase from continuing until after registration\n  /// of messages is successful\n  return new Promise((resolve, reject) => {\n    if (DBG)\n      console.log(`${PR}HOOK 'UNISYS_INIT' Registering Message Handlers...`);\n    // timeout for broken network registration\n    let timeout = setTimeout(() => {\n      reject(new Error(\"UNISYS REGISTER TIMEOUT\"));\n    }, 5000);\n\n    // register ONLY messages we want to make public\n    UNISYS.RegisterMessagesPromise([\n      \"SOURCE_UPDATE\",\n      `NODE_DELETE`,\n      \"EDGE_UPDATE\",\n      \"EDGE_DELETE\"\n    ]).then(d => {\n      clearTimeout(timeout);\n      if (DBG)\n        console.log(\n          `${PR}HOOK 'UNISYS_INIT' Registered Message Handlers ${JSON.stringify(\n            d.registered\n          )}`\n        );\n      if (DBG)\n        console.log(\n          `INFO: %cMy socket address is ${UNISYS.SocketUADDR()}`,\n          \"color:blue;font-weight:bold\"\n        );\n      resolve();\n    });\n  });\n}); // end UNISYS_READY\n\n/// OBJECT HELPERS ////////////////////////////////////////////////////////////\n/// these probably should go into a utility class\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Return array of objects that match the match_me object keys/values\n    NOTE: make sure that strings are compared with strings, etc\n/*/\nfunction m_FindMatchingObjsByProp(obj_list, match_me = {}) {\n  // operate on arrays only\n  if (!Array.isArray(obj_list))\n    throw Error(\"FindMatchingObjectsByProp arg1 must be array\");\n  let matches = obj_list.filter(obj => {\n    let pass = true;\n    for (let key in match_me) {\n      if (match_me[key] !== obj[key]) pass = false;\n      break;\n    }\n    return pass;\n  });\n  // return array of matches (can be empty array)\n  return matches;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Set array of objects that match to key/values of yes/no respectively\n    Returns array of matched objects\n/*/\nfunction m_SetMatchingObjsByProp(obj_list, match_me = {}, yes = {}, no = {}) {\n  // operate on arrays only\n  if (!Array.isArray(obj_list))\n    throw Error(\"SetMatchingObjsByPropp arg1 must be array\");\n\n  let returnMatches = [];\n  obj_list.forEach(node => {\n    let matched = true;\n    for (let key in match_me) {\n      if (match_me[key] !== node[key]) matched = false;\n      break;\n    }\n    if (matched) {\n      for (let key in yes) node[key] = yes[key];\n      returnMatches.push(node);\n    } else {\n      for (let key in no) node[key] = no[key];\n    }\n  });\n  return returnMatches;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Update props of everything in obj_list\n/*/\nfunction m_SetAllObjs(obj_list, all = {}) {\n  // operate on arrays only\n  if (!Array.isArray(obj_list)) throw Error(\"SetAllNodes arg1 must be array\");\n  obj_list.forEach(obj => {\n    for (let key in all) obj[key] = all[key];\n  });\n}\n\n/// NODE HELPERS //////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Return array of nodes that DON'T match del_me object keys/values\n/*/\nfunction m_DeleteMatchingNodesByProp(del_me = {}) {\n  let matches = D3DATA.nodes.filter(node => {\n    let pass = false;\n    for (let key in del_me) {\n      if (del_me[key] !== node[key]) {\n        pass = true;\n        break;\n      }\n    }\n    return pass;\n  });\n  // return array of matches (can be empty array)\n  return matches;\n}\n/*/ Return array of nodes that match the match_me object keys/values\n    NOTE: make sure that strings are compared with strings, etc\n/*/\nfunction m_FindMatchingNodeByProp(match_me = {}) {\n  return m_FindMatchingObjsByProp(D3DATA.nodes, match_me);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Convenience function to retrieve node by ID\n/*/ function m_FindNodeById(id) {\n  return m_FindMatchingNodeByProp({ id })[0];\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Return array of nodes with labels that partially match str\n/*/\nfunction m_FindMatchingNodesByLabel(str = \"\") {\n  if (!str) return [];\n  str = u_EscapeRegexChars(str.trim());\n  if (str === \"\") return [];\n  const regex = new RegExp(/*'^'+*/ str, \"i\");\n  return D3DATA.nodes.filter(node => regex.test(node.label));\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Set nodes that PARTIALLY match 'str' to 'yes' props.\n    All others nodes are set to 'no' props. Return matches\n    Optionally resets all the NON matching nodes as well\n/*/\nfunction m_SetMatchingNodesByLabel(str = \"\", yes = {}, no = {}) {\n  let returnMatches = [];\n  str = u_EscapeRegexChars(str.trim());\n  if (str === \"\") return undefined;\n  const regex = new RegExp(/*'^'+*/ str, \"i\");\n  D3DATA.nodes.forEach(node => {\n    if (regex.test(node.label)) {\n      for (let key in yes) node[key] = yes[key];\n      returnMatches.push(node);\n    } else {\n      for (let key in no) node[key] = no[key];\n    }\n  });\n  return returnMatches;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Update props of exact matching nodes, returns matches\n    Optionally resets all the NON matching nodes as well\n/*/\nfunction m_SetMatchingNodesByProp(match_me = {}, yes = {}, no = {}) {\n  return m_SetMatchingObjsByProp(D3DATA.nodes, match_me, yes, no);\n}\n\n/// EDGE HELPERS //////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Return array of edges that DON'T match del_me object keys/values\n/*/\nfunction m_DeleteMatchingEdgeByProp(del_me = {}) {\n  let matches = D3DATA.edges.filter(edge => {\n    let pass = false;\n    for (let key in del_me) {\n      if (del_me[key] !== edge[key]) {\n        pass = true;\n        break;\n      }\n    }\n    return pass;\n  });\n  // return array of matches (can be empty array)\n  return matches;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Update props of exact matching edges, returns matches\n/*/\nfunction m_SetMatchingEdgesByProp(match_me = {}, yes = {}, no = {}) {\n  return m_SetMatchingObjsByProp(D3DATA.edges, match_me, yes, no);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Count number of edges with the same source/target to determine weight\n      `data` is passed by reference\n      This modifies `data`\n      data = { nodes: [], edges: [] }\n/*/\nfunction m_RecalculateAllEdgeWeights(data) {\n  data.edges.forEach(edge => {\n    edge.size = m_CalculateEdgeWeight(edge, data.edges);\n  });\n  return data;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Count number of edges with the same source/target to determine weight\n/*/\nfunction m_CalculateEdgeWeight(edge, edges) {\n  // REVIEW: If there's a match, BOTH edge sizes ought to be set!\n\n  let size = edges.reduce((accumulator, e) => {\n    // Ignore self\n    if (e.id === edge.id) return accumulator;\n    // source and target might be ids or might be node objects depending\n    // on whether D3 has processed the edge object.\n    let sourceId = e.source.id || e.source;\n    let targetId = e.target.id || e.target;\n    let edgeSourceId = edge.source.id || edge.source;\n    let edgeTargetId = edge.target.id || edge.target;\n    //console.log('comparing sourceId',sourceId,'to',edgeSourceId,' / targetId',targetId,'to',edgeTargetId);\n    if (\n      (sourceId === edgeSourceId && targetId === edgeTargetId) ||\n      (sourceId === edgeTargetId && targetId === edgeSourceId)\n    )\n      return accumulator + 1;\n    return accumulator;\n  }, 1);\n  return size;\n}\n\n/// UTILITIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ REGEX: the chars in brackets are part of matching character set.\n    Declaring this as a constant makes the RegEx run faster (I think).\n/*/\nconst REGEX_REGEXCHARS = /[.*+?^${}()|[\\]\\\\]/g;\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Adds a \\ in front of characters that have special RegEx meaning\n    From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expression\n/*/\nfunction u_EscapeRegexChars(string) {\n  return string.replace(REGEX_REGEXCHARS, \"\\\\$&\"); // $& means the whole matched string\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Convert all IDs to integers\n    Node and Edge IDs should be integers.\n    This isn't a problem with newly created datasets as the network-generated IDs\n    are integers.  However, with older data sets, the IDs may have been strings.\n    e.g. exports from Gephi will have string IDs.\n    This mismatch is a problem when looking up nodes by ID.\n      `data` is passed by reference\n      This modifies `data`\n      data = { nodes: [], edges: [] }\n/*/\nfunction m_ConvertData(data) {\n  data.nodes.forEach(node => {\n    node.id = parseInt(node.id);\n  });\n  data.edges.forEach(edge => {\n    edge.id = parseInt(edge.id);\n    // before D3 processing, edge.source and edge.target are ids\n    edge.source = parseInt(edge.source);\n    edge.target = parseInt(edge.target);\n  });\n}\n\n/// NODE MARKING METHODS //////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Visually change all nodes to the deselected color\n/*/\nfunction m_UnMarkAllNodes() {\n  let props = { selected: DESELECTED_COLOR };\n  m_SetAllObjs(D3DATA.nodes, props);\n  UDATA.SetAppState(\"D3DATA\", D3DATA);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Remove the stroke color.  Used to unmark search matches.\n/*/\nfunction m_UnStrokeAllNodes() {\n  let props = { strokeColor: undefined };\n  m_SetAllObjs(D3DATA.nodes, props);\n  UDATA.SetAppState(\"D3DATA\", D3DATA);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Sets the `node.selected` property to `color` so it is hilited on graph\n/*/\nfunction m_MarkNodeById(id, color) {\n  let marked = { selected: SOURCE_COLOR };\n  let normal = { selected: DESELECTED_COLOR };\n  // NOTE: this.getSelectedNodeColor(node,color) and\n  // this.getDeselectedNodeColor(node,color) are not yet implemented\n  // to override the properties\n  m_SetMatchingNodesByProp({ id }, marked, normal);\n  UDATA.SetAppState(\"D3DATA\", D3DATA);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Sets the `node.selected` property to `color` so it is hilited on graph\n/*/\nfunction m_MarkNodeByLabel(label, color) {\n  let marked = { selected: color };\n  let normal = { selected: DESELECTED_COLOR };\n  // NOTE: this.getSelectedNodeColor(node,color) and\n  // this.getDeselectedNodeColor(node,color) are not yet implemented\n  // to override the properties\n  m_SetMatchingNodesByLabel(label, marked, normal);\n  UDATA.SetAppState(\"D3DATA\", D3DATA);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Sets matching node labels to the passed selection color\n/*/\nfunction m_MarkNodesThatMatch(searchString, color) {\n  if (searchString === \"\") {\n    m_UnMarkAllNodes();\n    return;\n  }\n  let select = { selected: color };\n  let deselect = { selected: DESELECTED_COLOR };\n  m_SetMatchingNodesByLabel(searchString, select, deselect);\n  UDATA.SetAppState(\"D3DATA\", D3DATA);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Sets matching node labels to the passed selection color\n    This sets the stroke color, which is used to display\n    the matching nodes during a search.  If the node is\n    also selected, the selected color will override this color.\n/*/\nfunction m_SetStrokeColorThatMatch(searchString, color) {\n  let matched = { strokeColor: color };\n  let notmatched = { strokeColor: undefined };\n  m_SetMatchingNodesByLabel(searchString, matched, notmatched);\n  UDATA.SetAppState(\"D3DATA\", D3DATA);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Sets the 'selected' state of edges that are attached to the node\n/*/\nfunction m_MarkSelectedEdges(edges, node) {\n  // Delesect all edges first\n  edges.forEach(edge => {\n    edge.selected = false;\n  });\n  // Find connected edges\n  let id = node.id;\n  D3DATA.edges.forEach(edge => {\n    if (edge.source.id === id || edge.target.id === id) {\n      edge.selected = true;\n    } else {\n      edge.selected = false;\n    }\n  });\n  UDATA.SetAppState(\"D3DATA\", D3DATA);\n}\n\n/// COMMAND LINE UTILITIES ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Command: RESET THE DATABASE from default data\n/*/\nJSCLI.AddFunction(function ncPushDatabase(jsonFile) {\n  jsonFile = jsonFile || \"data.reducedlinks.json\";\n  DATASTORE.PromiseJSONFile(jsonFile)\n    .then(data => {\n      // data is { nodes, edges }\n      console.log(PR, `Sending data from ${jsonFile} to Server`, data);\n      // UDATA.Call() returns a promise, so return it to\n      // continue the asynchronous chain\n      return UDATA.Call(\"SRV_DBSET\", data);\n    })\n    .then(d => {\n      if (d.OK) {\n        window.alert(\n          `assets/data/${jsonFile} was pushed to Server.\\nPress OK to refresh this page and MANUALLY REFRESH other clients.\\n\\n(note: if data hasn't changed, try command again)`\n        );\n        console.log(\n          `${PR} %cServer Database has been overwritten with ${jsonFile}`,\n          \"color:blue\"\n        );\n        console.log(`${PR} Reload apps to see new data`);\n        setTimeout(UNISYS.ForceReloadOnNavigation, 1000);\n      } else {\n        console.error(PR, \"Server Error\", d);\n        window.alert(`Error ${JSON.stringify(d)}`);\n      }\n    });\n  // return syntax help\n  return \"FYI: ncPushDatabase(jsonFile) can load file in assets/data\";\n});\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Command: EMPTY THE DATABASE from default data\n/*/ JSCLI.AddFunction(\n  function ncEmptyDatabase() {\n    window.ncPushDatabase(\"nada.json\");\n    return \"FYI: pushing empty database from assets/data/nada.json...reloading\";\n  }\n);\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Command: Unlock the database.  Used to recover from error conditions where\n    a node or edge is inadvertently left locked.\n/*/\nJSCLI.AddFunction(\n  function ncUnlockAll() {\n    UDATA.NetCall('SRV_DBUNLOCKALL', {});\n    return \"Unlocking all nodes and edges in the database.\";\n  }\n);\nJSCLI.AddFunction(\n  function ncUnlockAllNodes() {\n    UDATA.NetCall('SRV_DBUNLOCKALLNODES', {});\n    return \"Unlocking all nodes in the database.\";\n  }\n);\nJSCLI.AddFunction(\n  function ncUnlockAllEdges() {\n    UDATA.NetCall('SRV_DBUNLOCKALLEDGES', {});\n    return \"Unlocking all edges in the database.\";\n  }\n);\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ Command: Token Generator\n/*/\nJSCLI.AddFunction(function ncMakeTokens(clsId, projId, numGroups) {\n  // type checking\n  if (typeof clsId !== \"string\")\n    return \"args: str classId, str projId, int numGroups\";\n  if (typeof projId !== \"string\")\n    return \"args: str classId, str projId, int numGroups\";\n  if (clsId.length > 12) return \"classId arg1 should be 12 chars or less\";\n  if (projId.length > 12) return \"classId arg1 should be 12 chars or less\";\n  if (!Number.isInteger(numGroups)) return \"numGroups arg3 must be integer\";\n  if (numGroups < 1) return \"numGroups arg3 must be positive integer\";\n  // let's do this!\n  let out = `\\nTOKEN LIST for class '${clsId}' project '${projId}'\\n\\n`;\n  let pad = String(numGroups).length;\n  for (let i = 1; i <= numGroups; i++) {\n    let id = String(i);\n    id = id.padStart(pad, \"0\");\n    out += `group ${id}\\t${SESSION.MakeToken(clsId, projId, i)}\\n`;\n  }\n  if (window && window.location) {\n    let ubits = new URL(window.location);\n    let hash = ubits.hash.split(\"/\")[0];\n    let url = `${ubits.protocol}//${ubits.host}/${hash}`;\n    out += `\\nexample url: ${SETTINGS.ServerAppURL()}/edit/${SESSION.MakeToken(\n      clsId,\n      projId,\n      1\n    )}\\n`;\n  }\n  return out;\n});\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = MOD;\n"]}